{
  "name": "Social Post",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "e8c8bfe3-ea0c-407c-9a1f-74706045a5d8",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -4016,
        2688
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and create a single string combining titles and contents\nconst output = [];\n\nfor (const item of $input.all()) {\n    const newItem = item.json;\n\n    // Tạo chuỗi từ tất cả các cặp tiêu đề - nội dung\n    newItem.combinedString = Object.entries(newItem)\n        .filter(([key, value]) => key !== \"row_number\") // Bỏ qua trường không cần thiết nếu muốn\n        .map(([key, value]) => `${key}: ${value}`)\n        .join(\",\");\n\n    output.push(newItem);\n}\n\nreturn output;\n"
      },
      "id": "06ccc98e-12a0-43eb-bda4-be894e95791d",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3744,
        2704
      ]
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "75cabfbb-0832-4d5b-b57d-db282ba4ae84",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -3456,
        2912
      ]
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  try {\n    if (item.json.output && typeof item.json.output === \"string\") {\n      let messageContent = item.json.output;\n\n      // 👉 Làm sạch nội dung đầu vào:\n      messageContent = messageContent.replace(/,\\s*$/gm, \"\").replace(/\"/g, \"\");\n\n      // 👉 Cắt bỏ toàn bộ phần nằm trước `**ID:` hoặc `**ID:**`\n      const idStartIndex = messageContent.indexOf(\"**ID:\");\n      if (idStartIndex > -1) {\n        messageContent = messageContent.slice(idStartIndex);\n      }\n\n      // 👉 Danh sách các regex định dạng và ánh xạ tương ứng\n      const regexFormats = [\n        {\n          // ✅ Trường hợp: **ID:** 36\n          regex:\n            /\\*\\*ID:\\*\\*\\s*(\\d+)[\\s\\S]*?\\*\\*Pain[_ ]Point:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*Hook:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*Content:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*Comment[_ ]Content:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*CTA:\\*\\*\\s*([\\s\\S]*?)(?:\\n|$)/i,\n          fields: [\n            \"id\",\n            \"pain_point\",\n            \"hook\",\n            \"content\",\n            \"comment_content\",\n            \"cta\",\n          ],\n        },\n        {\n          // ✅ Trường hợp: **ID: 36** (dấu \":\" nằm trong phần **ID: 36**)\n          regex:\n            /\\*\\*ID:\\s*(\\d+)\\*\\*[\\s\\S]*?\\*\\*Pain[_ ]Point:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*Hook:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*Content:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*Comment[_ ]Content:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*CTA:\\*\\*\\s*([\\s\\S]*?)(?:\\n|$)/i,\n          fields: [\n            \"id\",\n            \"pain_point\",\n            \"hook\",\n            \"content\",\n            \"comment_content\",\n            \"cta\",\n          ],\n        },\n        {\n          // ✅ Trường hợp: Comment_Content đứng trước Hook\n          regex:\n            /\\*\\*ID:\\*\\*\\s*(\\d+)[\\s\\S]*?\\*\\*Pain Point:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*Comment[_ ]Content:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*Hook:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*Content:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*CTA:\\*\\*\\s*([\\s\\S]*?)(?:\\n|$)/i,\n          fields: [\n            \"id\",\n            \"pain_point\",\n            \"comment_content\",\n            \"hook\",\n            \"content\",\n            \"cta\",\n          ],\n        },\n        {\n          // ✅ Dạng markdown không đầy đủ - chỉ ID thường\n          regex:\n            /ID:\\s*(\\d+)[\\s\\S]*?Pain Point:\\s*(.*?)\\n+Hook:\\s*(.*?)\\n+Content:\\s*([\\s\\S]*?)\\n+Comment_Content:\\s*([\\s\\S]*?)\\n+CTA:\\s*([\\s\\S]*?)(?:\\n|$)/i,\n          fields: [\n            \"id\",\n            \"pain_point\",\n            \"hook\",\n            \"content\",\n            \"comment_content\",\n            \"cta\",\n          ],\n        }\n      ];\n\n      let extractedData = {};\n      for (const format of regexFormats) {\n        const match = format.regex.exec(messageContent);\n        if (match) {\n          const post = {};\n          format.fields.forEach((field, index) => {\n            post[field] = match[index + 1]?.trim() || \"\";\n          });\n          extractedData[\"post\"] = post;\n          break;\n        }\n      }\n\n      if (!extractedData.post) {\n        throw new Error(\"No valid data extracted from input.\");\n      }\n\n      item.json = {\n        ...item.json,\n        extracted_data: extractedData,\n      };\n    } else {\n      item.json = {\n        ...item.json,\n        error: \"No valid output found in input.\",\n      };\n    }\n  } catch (error) {\n    item.json = {\n      ...item.json,\n      error: \"Error processing content\",\n      details: error.message,\n    };\n  }\n}\n\nreturn $input.all();\n"
      },
      "id": "a562f982-3f8f-4920-af48-0b8d9f505299",
      "name": "convert ouput",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3024,
        2704
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 913231215,
          "mode": "list",
          "cachedResultName": "Profile",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=913231215"
        },
        "options": {}
      },
      "id": "48dcb1ac-b865-4dfb-9e17-f125797a4e6e",
      "name": "profile",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -4576,
        2688
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 920960109,
          "mode": "list",
          "cachedResultName": "Total pain points (nỗi đau) ",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=920960109"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "note",
              "lookupValue": "="
            }
          ]
        },
        "options": {}
      },
      "id": "f57cc3ad-4e83-4611-974d-16f7d57ff998",
      "name": "List pain poin",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -4304,
        2688
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 920960109,
          "mode": "list",
          "cachedResultName": "Total pain points (nỗi đau) ",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=920960109"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "STT": "={{ $json.STT }}",
            "note": "done"
          },
          "matchingColumns": [
            "STT"
          ],
          "schema": [
            {
              "id": "STT",
              "displayName": "STT",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Nỗi đau",
              "displayName": "Nỗi đau",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Chi tiết",
              "displayName": "Chi tiết",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Hành động cụ thể",
              "displayName": "Hành động cụ thể",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Giá trị mang lại",
              "displayName": "Giá trị mang lại",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "note",
              "displayName": "note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "5dab40a8-4425-413e-9091-a379fd498f9b",
      "name": "Đánh dấu pain pain đã use",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -3760,
        2880
      ]
    },
    {
      "parameters": {
        "content": "# Step 1️⃣: Create Social Media Story Telling Written Content\nNote:  \nYou could use the output of step 1 to create your written content and manually post if required.  \nYou so not have to implement step 2.",
        "height": 743,
        "width": 2457,
        "color": 4
      },
      "id": "0f9a6aed-a0b0-4270-bc15-48bcca4496a1",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4880,
        2368
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "acba2b3e-67b7-4067-9427-b7b5cd44dd1b",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1904,
        7520
      ]
    },
    {
      "parameters": {
        "content": "# Step 2️⃣: Create Image or Upload Image for Social Post",
        "height": 870,
        "width": 1060,
        "color": 4
      },
      "id": "30cf5077-2a38-479e-bbb0-c47f66db715b",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4864,
        3280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Step 3️⃣: Publish Final Social Media Posts",
        "height": 595,
        "width": 1264,
        "color": 3
      },
      "id": "4f926162-4196-4dec-9183-dfc96c335f41",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3680,
        4128
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1106211278,
          "mode": "list",
          "cachedResultName": "Post Story Telling ",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=1106211278"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Content": "={{ $json.extracted_data.post.content }}",
            "pain point": "={{ $json.extracted_data.post.pain_point }}",
            "hook ": "={{ $json.extracted_data.post.hook }}",
            "iid": "={{ $json.extracted_data.post.id }}",
            "CTA": "={{ $json.extracted_data.post.cta }}",
            "Status": "=done",
            "Coment content": "={{ $json.extracted_data.post.comment_content }}",
            "STT": "==ROW()-1",
            "Note": "={{ $now.toISODate() }}"
          },
          "matchingColumns": [
            "Content"
          ],
          "schema": [
            {
              "id": "STT",
              "displayName": "STT",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "iid",
              "displayName": "iid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "pain point",
              "displayName": "pain point",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "hook ",
              "displayName": "hook ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Image url ",
              "displayName": "Image url ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Content",
              "displayName": "Content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Coment content",
              "displayName": "Coment content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "CTA",
              "displayName": "CTA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Note",
              "displayName": "Note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Channel",
              "displayName": "Channel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "878d0c31-5b16-4079-86d3-b12bfafc8e95",
      "name": "Post Story Telling",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -2736,
        2944
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.facebook.com/v17.0/{{ $json.post_id }}/comments ",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "facebookGraphApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"message\": \"If tech troubles have plagued you, we’ve got a game-changer. Details: https://solution.printcart.com/project-request.html \"\n}\n",
        "options": {}
      },
      "id": "518d3e51-56e4-41ee-a941-7c04edc52a1d",
      "name": "Coment1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3280,
        3920
      ]
    },
    {
      "parameters": {
        "httpRequestMethod": "POST",
        "graphApiVersion": "v20.0",
        "node": "=me/photos",
        "edge": "feed",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "=message",
                "value": "={{ $('convert ouput').item.json.extracted_data.post.content }}"
              },
              {
                "name": "url",
                "value": "={{ $json.image }}"
              }
            ]
          }
        }
      },
      "id": "bb6c08a7-7f3b-4799-af71-98db1e4b3202",
      "name": "Facebook  Printcart POD1",
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        -3536,
        3920
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items\nfor (const item of $input.all()) {\n  try {\n\n    // Kiểm tra và xử lý extracted_data.post.content nếu tồn tại\n    if (item.json.extracted_data && item.json.extracted_data.post && item.json.extracted_data.post.content) {\n      item.json.extracted_data.post.content = item.json.extracted_data.post.content.replace(/\\n/g, '\\\\n');\n    }\n    \n    // Luôn xử lý output để đảm bảo tính nhất quán\n    if (item.json.output) {\n      item.json.output = item.json.output.replace(/\\n/g, '\\\\n');\n    }\n    \n    // Nếu không có cả output lẫn extracted_data.post.content, ném lỗi\n    if (!item.json.output && !(item.json.extracted_data && item.json.extracted_data.post && item.json.extracted_data.post.content)) {\n      throw new Error(\"No valid content field found to process.\");\n    }\n  } catch (error) {\n    // Ghi lỗi vào một trường phù hợp nếu xử lý thất bại\n    item.json.error = \"Error processing content: \" + error.message;\n  }\n}\n\n// Trả về danh sách các item đã được cập nhật\nreturn $input.all();\n"
      },
      "id": "c7fea948-1093-4942-84d3-452efe1820d5",
      "name": "convert content",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2736,
        2704
      ]
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "3c1b116c-9431-469b-9f39-dcebc8ddf4d9",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -288,
        2800
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "9744651d-8747-41b3-b1f5-54e70b72048b",
      "name": "Loop Over Items1",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -944,
        2528
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and create a single string combining titles and contents\nconst output = [];\n\nfor (const item of $input.all()) {\n    const newItem = item.json;\n\n    // Tạo chuỗi từ tất cả các cặp tiêu đề - nội dung\n    newItem.combinedString = Object.entries(newItem)\n        .filter(([key, value]) => key !== \"row_number\") // Bỏ qua trường không cần thiết nếu muốn\n        .map(([key, value]) => `${key}: ${value}`)\n        .join(\",\");\n\n    output.push(newItem);\n}\n\nreturn output;\n"
      },
      "id": "b7471b4d-f463-425a-9dd0-e8a279fe8c9d",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -560,
        2544
      ]
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  try {\n    if (item.json.output && typeof item.json.output === 'string') {\n      let messageContent = item.json.output\n        .replace(/,\\s*$/gm, '') // Xóa dấu phẩy cuối dòng\n        .replace(/\"/g, '')      // Xóa dấu ngoặc kép\n        .trim();\n\n      // ✅ Hàm xử lý cả 2 kiểu slide: subject-describe & - **Step X**\n      function extractSlides(text) {\n        const slides = [];\n\n        // Kiểu 1: subject + describe\n        const subjectDescribePattern = /\\*\\*subject:\\*\\*\\s*(.*?)\\n\\*\\*describe:\\*\\*\\n([\\s\\S]*?)(?=\\n\\*\\*subject:|\\Z)/g;\n        let match;\n        while ((match = subjectDescribePattern.exec(text)) !== null) {\n          const subject = match[1].trim();\n          const describe = match[2].trim().split('\\n')\n            .map(line => line.replace(/^-/, '').trim())\n            .filter(line => line.length > 0);\n          slides.push({ subject, describe });\n        }\n\n        // Kiểu 2: - **Step X** + mô tả\n        const stepPattern = /-\\s\\*\\*(Step\\s\\d+\\..*?)\\*\\*\\n((?:\\s{2,}-\\s.*\\n?)+)/g;\n        let matchStep;\n        while ((matchStep = stepPattern.exec(text)) !== null) {\n          const subject = matchStep[1].trim();\n          const describeRaw = matchStep[2];\n          const describe = describeRaw.split('\\n')\n            .map(line => line.trim().replace(/^-\\s/, ''))\n            .filter(line => line.length > 0);\n          slides.push({ subject, describe });\n        }\n\n        return slides;\n      }\n\n      // ✅ Hàm trích xuất các field chính\n      function extractContent(data) {\n        const getField = (label, fallback = '') => {\n          const regex = new RegExp(`\\\\*\\\\*${label}:\\\\*\\\\*\\\\s*([\\\\s\\\\S]*?)(?=\\\\n\\\\*\\\\*|\\\\n---|\\\\n$|$)`, 'i');\n          const match = data.match(regex);\n          return (match && match[1].trim()) || fallback;\n        };\n\n        return {\n          post: {\n            id: getField('ID', 'Not specified'),\n            pain_point: getField('Pain_Point', 'Not specified'),\n            hook: getField('Hook', 'Not specified'),\n            image_url: getField('Image_URL', ''),\n            content: getField('Content', ''),\n            slide: extractSlides(data),\n            comment_content: getField('Comment_Content', ''),\n            cta: getField('CTA', ''),\n            status: getField('Status', 'Not specified')\n          }\n        };\n      }\n\n      const extractedData = extractContent(messageContent);\n\n      if (!extractedData.post.id || extractedData.post.id === 'Not specified') {\n        throw new Error(\"No valid ID extracted from input.\");\n      }\n\n      item.json = {\n        ...item.json,\n        extracted_data: extractedData\n      };\n    } else {\n      item.json = {\n        ...item.json,\n        error: \"No valid output found in input.\"\n      };\n    }\n  } catch (error) {\n    item.json = {\n      ...item.json,\n      error: \"Error processing content\",\n      details: error.message\n    };\n  }\n}\n\nreturn $input.all();\n"
      },
      "id": "29d2c7f5-ee07-4360-83cb-6982fef1e9ae",
      "name": "convert ouput1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        224,
        2544
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 180315726,
          "mode": "list",
          "cachedResultName": "Post share tip",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=180315726"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "STT": "==ROW()-1",
            "Content": "={{ $('convert ouput1').item.json.extracted_data.post.content }}",
            "pain point": "={{ $('List share tips').item.json[\"Nỗi đau\"] }}",
            "hook ": "={{ $('convert ouput1').item.json.extracted_data.post.hook }}",
            "Coment content": "={{ $('convert ouput1').item.json.extracted_data.post.comment_content }}",
            "CTA": "={{ $('convert ouput1').item.json.extracted_data.post.cta }}",
            "Status": "done",
            "Note": "={{ $now.toISODate() }}",
            "parent match": "={{ $json.extracted_data.post.id }}",
            "Image url ": "={{ $json.extracted_data.post.image_url }}"
          },
          "matchingColumns": [
            "Content"
          ],
          "schema": [
            {
              "id": "STT",
              "displayName": "STT",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "parent match",
              "displayName": "parent match",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "pain point",
              "displayName": "pain point",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "hook ",
              "displayName": "hook ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Image url ",
              "displayName": "Image url ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Content",
              "displayName": "Content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Coment content",
              "displayName": "Coment content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "CTA",
              "displayName": "CTA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Note",
              "displayName": "Note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Channel",
              "displayName": "Channel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "e1dc2a6f-d7b4-4b46-8153-87e04a9bc047",
      "name": "Post share tip",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        400,
        2880
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1474490346,
          "mode": "list",
          "cachedResultName": "List share típs",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=1474490346"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "note",
              "lookupValue": "="
            }
          ]
        },
        "options": {}
      },
      "id": "353dbc5e-4e58-41e1-bd5b-1e8f70767657",
      "name": "List share tips",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -1216,
        2528
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1474490346,
          "mode": "list",
          "cachedResultName": "List share típs",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=1474490346"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "STT": "={{ $json.STT }}",
            "note": "done"
          },
          "matchingColumns": [
            "STT"
          ],
          "schema": [
            {
              "id": "STT",
              "displayName": "STT",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Nỗi đau",
              "displayName": "Nỗi đau",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Chi tiết",
              "displayName": "Chi tiết",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Hành động cụ thể",
              "displayName": "Hành động cụ thể",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Giá trị mang lại",
              "displayName": "Giá trị mang lại",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "note",
              "displayName": "note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "3c47d201-be32-48ea-ad6a-0f993128e5d4",
      "name": "Đánh dấu tip đã use",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -784,
        2784
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 913231215,
          "mode": "list",
          "cachedResultName": "Profile",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=913231215"
        },
        "options": {}
      },
      "id": "b6bb9ae6-a519-4784-a45f-185f77c18913",
      "name": "profile3",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -1488,
        2528
      ]
    },
    {
      "parameters": {
        "content": "# Step 1️⃣: Share tip Written Content\nNote:  \nYou could use the output of step 1 to create your written content and manually post if required.  \nYou so not have to implement step 2.",
        "height": 760,
        "width": 2417,
        "color": 4
      },
      "id": "d4b834ee-a2ba-44d5-9800-cd984914de01",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1728,
        2288
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Step 2️⃣: Create Image or Upload Image for Social Post",
        "height": 835,
        "width": 1255,
        "color": 4
      },
      "id": "92931345-8793-4ba4-b2f8-946c7313bf05",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1728,
        3184
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Step 3️⃣: Publish Final Social Media Posts",
        "height": 595,
        "width": 1964,
        "color": 3
      },
      "id": "70c78291-1fa0-4a17-ada0-39e42726b3a1",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -224,
        3328
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 932067550,
          "mode": "list",
          "cachedResultName": "list Inforgraphich",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=932067550"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": " note",
              "lookupValue": "="
            }
          ]
        },
        "options": {}
      },
      "id": "d7aab322-3db1-4c7a-a490-dba40ae1f81b",
      "name": "Post Inforgraphich2",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        3648,
        3104
      ]
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\nreturn items.length > 0 ? [items[0]] : [];\n"
      },
      "id": "99b12d3e-0ea1-4862-bf7a-398b1a8ab298",
      "name": "chọn input đầu",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4272,
        3120
      ]
    },
    {
      "parameters": {
        "model": "=grok-beta",
        "options": {
          "baseURL": "https://api.x.ai/v1"
        }
      },
      "id": "6fd4579e-76e6-42a4-b05e-d5467c7980d9",
      "name": "OpenAI Chat Model2",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        4560,
        3312
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "c7c78fcc-82b8-4f88-8db7-56a1839b7dbd",
      "name": "Loop Over Items2",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        3920,
        3104
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 913231215,
          "mode": "list",
          "cachedResultName": "Profile",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=913231215"
        },
        "options": {}
      },
      "id": "7fdaf2e7-ee34-4393-b5ee-1fec9782fbdb",
      "name": "profile1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        3392,
        3104
      ]
    },
    {
      "parameters": {
        "content": "# Step 1️⃣: Create Social Media content infographic Written Content\nNote:  \nYou could use the output of step 1 to create your written content and manually post if required.  \nYou so not have to implement step 2.",
        "height": 760,
        "width": 2112.4902042314525,
        "color": 4
      },
      "id": "363ac136-846c-462f-a61e-326340dba7a8",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3168,
        2832
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=🔹 Bạn đóng vai Persona_Name – một nhân vật gần gũi (ví dụ: CEO, freelancer, phụ huynh, huấn luyện viên), mặc định là \"David, một chủ doanh nghiệp\", với hồ sơ từ:\n{{ $('profile3').first().json['content profile'] }}\n\n🔹 Nhiệm vụ của bạn:\n\nTạo một bài đăng mạng xã hội duy nhất (không trùng lặp), theo phong cách Tips Sharing – giải quyết một vấn đề thực tế từ {{ $json.combinedString }}.\n\nNgôn ngữ: Tiếng Anh.\n\n---\n\n**Output:**\n\n**ID:** Lấy từ {{ $json.combinedString }}\n\n**Pain_Point:** Vấn đề cụ thể trích từ {{ $json.combinedString }} (ví dụ: High ad costs with no conversions)\n\n**Hook:** Viết theo format:\n- **5 steps to fix [pain_point] without [undesirable thing]**\n- **7 simple ways to improve [target result] without breaking the bank**\n- **6 tricks to stop [pain_point] in its tracks**\n- Không viết dạng tường thuật hay cảm thán (I lost…, 50% of…)\n- Tập trung vào hành động, có con số cụ thể và lợi ích rõ ràng\n\n**Image_URL:** Link hình ảnh phù hợp Hook, ví dụ: https://example.com/images/fix-funnel.jpg\n\n---\n\n**Content:**\n\nViết từ góc nhìn của Persona_Name, gồm:\n\n- Mở đầu bằng một câu chuyện hài hước, thể hiện đồng cảm với Pain_Point. Ví dụ: I once spent 3 days fixing a checkout button that was just... hidden behind a div.\n- Nêu rõ vấn đề từ {{ $json.combinedString }}\n- Trình bày 5–7 bước thực tế để giải quyết vấn đề  \n  - Định dạng: Step 1. ...  \n  - Văn phong: vui vẻ, sinh động, không kỹ thuật phức tạp, dán trực tiếp emoji Unicode phù hợp, không dùng markdown\n  - Phù hợp với đối tượng không rành kỹ thuật\n- Kết luận bằng lợi ích + đề cập đến giải pháp Printcart  \n  - Ví dụ: At Printcart, we help you build faster, cleaner, smarter stores.\n- Kết thúc bằng một câu hỏi để khơi gợi bình luận. Ví dụ: What step saved you the most money?\n\nĐộ dài: 150–200 từ, dễ đọc, mỗi câu một dòng.\n\n**Hashtag:** 7–10 hashtag phù hợp chủ đề.\n\n---\n\n**Slide:**\n\nChuyển mỗi bước thành một slide riêng, mỗi slide gồm:\n\n- subject: Tiêu đề dạng \"Step 1. Boost Your Checkout Flow\"\n- describe: 3 gạch đầu dòng sinh động, mỗi dòng 1–2 câu, phong cách mạng xã hội\n  . Speed matters – nobody likes loading wheels\n  . Make your CTA pop like it's on a Redbull\n  . Keep it mobile-friendly, always\n\nVí dụ: \\n\\n**Slide:**\\n\\n**Step 1. Identify the Problem**\\n\\n- Designs often get cut off at the edges.\\n- Recognize the circular design challenge.\\n- Does your software even support this?\\n\\n**Step 2. Add Circular Safe Zones**\\n\\n- Circular Safe Zone Tool = Game Changer.\\n- Keep your designs intact, always.\\n- No more Pac-Man logos!\\n\\n**Step 3. Adjust Design Practices**\\n\\n- Train your team on safe zone designs.\\n- Keep it simple, keep it clean.\\n- Avoid design disasters before they happen.\\n\\n**Step 4. Preview in 3D**\\n\\n- Test your design in 3D - virtually perfect.\\n- See your creation before it comes to life. \\n- It's like virtual reality, but for plates!\\n\\n**Step 5. Automate Quality Checking**\\n\\n- Use automated tools to spot issues.\\n- Printcart checks what you might miss.\\n- Smart solutions for smart business.\\n\\n\n\n---\n\n**Comment_Content:**\n\nViết một bình luận ngắn (20–50 từ), liên quan đến Pain_Point, vui vẻ, gợi mở thảo luận.\nVí dụ: I once broke a product page by changing one color code – what’s your funniest dev mishap?\n\n---\n\n**CTA:**\n\nViết lời kêu gọi rõ ràng, chứa link SEO. Ví dụ:\nLearn the rest at: https://solution.printcart.com/project-request.html\n\n---\n\n**Status:** Nháp / Đã đăng\n\n---\n\n**Lưu kết quả vào bảng [ICP_Pain_Stories] với các trường:**\n\nID | Pain_Point | Hook | Image_URL | Content | Slide | Comment_Content | CTA | Status\n\n---\n\n🎯 **Mục tiêu:**\n\nTạo nội dung chia sẻ kỹ thuật dưới dạng “5–7 bước giải quyết vấn đề” có tính ứng dụng cao, dễ hiểu, dễ chia sẻ, tăng nhận diện cho Printcart và khơi gợi bình luận hành động.\n\n**Không được dùng emoji, markdown, ký hiệu đặc biệt**  \n**Chỉ xuất ra văn bản thuần túy**\n",
        "hasOutputParser": true,
        "options": {}
      },
      "id": "6ba8453c-e0b7-45bc-84d7-8356b6a754fa",
      "name": "AI Agent Tips Sharing",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -240,
        2544
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You play as David with profile:\n\n{{ $('profile1').item.json['content profile'] }}\n\nLink image to infographic content:\n\ntừ ảnh infographic {{ $json['Thumbnail       '] }} là đường dẫn tới ảnh, hãy soạn 1 nội dung hấp dẫn, có kịch bản như kể 1 câu chuyện gay cấn nói lên ý nghĩa lớn của infographic này, có kèm số liệu nếu có, tiêu đề hook gây tò mò, kích thích thu hút người xem, để tôi chia sẻ lên mạng xã hội, viết bài post linh hoạt theo leadership thought, market report hay chia sẻ câu chuyện cá nhân, trình bày bài viết theo từng câu ngắn, xuống dòng, có cảm xúc, có thể thêm phần văn nói trao đổi, hành động, cta user bình luận, chia sẻ. Output phải luôn là tiếng Anh.\nluôn thêm 5-7 popular tags liên quan đến content và chủ đề profile\n\nTitle:\n{{ $json['title         '] }}\n\nTạo bài post social media trong định dạng sau:\n\n\nID: ngẫu nhiên \n\nHook:\n\nImage_URL: {{ $json['Thumbnail       '] }}\n\n\n\nComment_Content:\n\nCTA:\n\nComment your thoughts below! Let’s discuss how automation can help boost your business.\n\nStatus:\n\nActive\n\nGoal:\n\n",
        "options": {}
      },
      "id": "dc921199-5aa5-41b0-b1bf-7457e36a619d",
      "name": "AI Agent Tips Sharing1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        4560,
        3120
      ]
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  try {\n    if (item.json.output && typeof item.json.output === 'string') {\n      let messageContent = item.json.output;\n\n      // Clean up the input: remove unwanted formatting but keep hashtags\n      messageContent = messageContent\n        .replace(/\\*/g, '') // Chỉ xóa * thay vì cả # và *\n        .replace(/,\\s*$/gm, '') // Xóa dấu phẩy thừa cuối dòng\n        .replace(/\"/g, '') // Xóa dấu ngoặc kép\n        .trim(); // Xóa khoảng trắng thừa đầu/cuối\n\n      function extractContent(data) {\n        const results = {};\n        const platformKey = \"post\";\n\n        // More flexible regex patterns for each field\n        const idRegex = /ID:\\s*([A-Za-z0-9_]+)/i;\n        const painPointRegex = /Pain_Point:\\s*([\\s\\S]*?)(?=\\n(?:Hook|Image_URL|Content|Comment_Content|CTA|Status|$))/i;\n        const hookRegex = /Hook:\\s*([\\s\\S]*?)(?=\\n(?:Image_URL|Content|Comment_Content|CTA|Status|$))/i;\n        const imageUrlRegex = /Image_URL:\\s*([^\\s]+)(?=\\n|$)/i;\n        const contentRegex = /Content:\\s*([\\s\\S]*?)(?=\\n(?:Comment_Content|CTA|Status|$))/i;\n        const commentContentRegex = /Comment_Content:\\s*([\\s\\S]*?)(?=\\n(?:CTA|Status|$))/i;\n        const ctaRegex = /CTA:\\s*([\\s\\S]*?)(?=\\n(?:Status|$))/i;\n\n        // Extract each field with fallback values\n        results[platformKey] = {\n          id: (data.match(idRegex) || [, \"Not specified\"])[1].trim(),\n          pain_point: (data.match(painPointRegex) || [, \"Not specified\"])[1]?.trim() || \"Not specified\",\n          hook: (data.match(hookRegex) || [, \"Not specified\"])[1]?.trim() || \"Not specified\",\n          image_url: (data.match(imageUrlRegex) || [, \"Not specified\"])[1]?.trim() || \"Not specified\",\n          content: (data.match(contentRegex) || [, \"Not specified\"])[1]?.trim() || \"Not specified\",\n          comment_content: (data.match(commentContentRegex) || [, \"\"])[1]?.trim() || \"\",\n          cta: (data.match(ctaRegex) || [, \"\"])[1]?.trim() || \"\"\n        };\n\n        return results;\n      }\n\n      let extractedData = extractContent(messageContent);\n\n      if (!extractedData.post || !extractedData.post.id || extractedData.post.id === \"Not specified\") {\n        throw new Error(\"No valid ID extracted from input.\");\n      }\n\n      item.json = {\n        ...item.json,\n        extracted_data: extractedData\n      };\n    } else {\n      item.json = { ...item.json, error: \"No valid output found in input.\" };\n    }\n  } catch (error) {\n    item.json = {\n      ...item.json,\n      error: \"Error processing content\",\n      details: error.message\n    };\n  }\n}\n\nreturn $input.all();"
      },
      "id": "b31458e4-1f69-41a2-a566-addfba1eec66",
      "name": "convert ouput4",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4960,
        3120
      ]
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  try {\n    // Xử lý extracted_data.post.content\n    if (item.json.extracted_data?.post?.content) {\n      item.json.extracted_data.post.content = item.json.extracted_data.post.content\n        .replace(/[\"“”]/g, '')       // Xóa mọi dấu ngoặc kép: \" “ ”\n        .replace(/\\n/g, '\\\\n');      // Escape newline\n    }\n\n    // (Tùy chọn) Xử lý output nếu bạn vẫn cần\n    if (item.json.output) {\n      item.json.output = item.json.output\n        .replace(/[\"“”]/g, '')       // Xóa mọi dấu ngoặc kép\n        .replace(/\\n/g, '\\\\n');\n    }\n\n    // Kiểm tra cuối\n    if (!item.json.output && !item.json.extracted_data?.post?.content) {\n      throw new Error(\"No valid content field found to process.\");\n    }\n\n  } catch (error) {\n    item.json.error = \"Error processing content: \" + error.message;\n  }\n}\n\nreturn $input.all();\n"
      },
      "id": "385540c8-d889-4c48-bbd3-7dec9dcc3f98",
      "name": "convert content2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3360,
        4144
      ]
    },
    {
      "parameters": {
        "httpRequestMethod": "POST",
        "graphApiVersion": "v20.0",
        "node": "=me/photos",
        "edge": "feed",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "=message",
                "value": "={{ $('convert ouput4').item.json.extracted_data.post.content }}"
              },
              {
                "name": "url",
                "value": "={{ $('Loop Over Items2').item.json[\"Thumbnail       \"] }}"
              }
            ]
          }
        }
      },
      "id": "a9e5722f-1166-493f-a530-c92de94e179d",
      "name": "Facebook  Printcart POD2",
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        4032,
        4208
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.facebook.com/v17.0/{{ $json.post_id }}/comments ",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "facebookGraphApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"message\": \"If tech troubles have plagued you, we’ve got a game-changer. Details: https://solution.printcart.com/project-request.html \"\n}\n",
        "options": {}
      },
      "id": "30c6a0e2-d0e5-4169-a47c-ebf5a0bf96f9",
      "name": "Coment4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4400,
        4208
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 846719219,
          "mode": "list",
          "cachedResultName": "Post Inforgraphich",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=846719219"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Content": "={{ $('convert ouput4').item.json.extracted_data.post.content }}",
            "iid": "={{ $json.extracted_data.post.id }}",
            "STT": "==ROW()-1",
            "hook ": "={{ $('convert ouput4').item.json.extracted_data.post.hook }}",
            "Coment content": "={{ $('convert ouput4').item.json.extracted_data.post.comment_content }}",
            "CTA": "={{ $('convert ouput4').item.json.extracted_data.post.cta }}",
            "Status": "=done",
            "Image url ": "={{ $('Post Inforgraphich2').item.json[\"Thumbnail       \"] }}",
            "pain point": "={{ $('convert ouput4').item.json.extracted_data.post.content }}",
            "Note": "={{ $now.toISODate() }}"
          },
          "matchingColumns": [
            "Content"
          ],
          "schema": [
            {
              "id": "STT",
              "displayName": "STT",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "iid",
              "displayName": "iid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "pain point",
              "displayName": "pain point",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "hook ",
              "displayName": "hook ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Image url ",
              "displayName": "Image url ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Content",
              "displayName": "Content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Coment content",
              "displayName": "Coment content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "CTA",
              "displayName": "CTA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Note",
              "displayName": "Note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Channel",
              "displayName": "Channel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "15a824aa-4067-47a5-9521-8a554dfa99e4",
      "name": "Post infographic",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        3344,
        4368
      ]
    },
    {
      "parameters": {
        "content": "# Step 2️⃣: Publish Final Social Media Posts",
        "height": 1295,
        "width": 1484,
        "color": 3
      },
      "id": "a64b52a4-5f37-477c-8d87-33d37cd0ff60",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3792,
        3728
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 932067550,
          "mode": "list",
          "cachedResultName": "list Inforgraphich",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=932067550"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "stt       ": "={{ $json[\"stt       \"] }}",
            " note": "done"
          },
          "matchingColumns": [
            "stt       "
          ],
          "schema": [
            {
              "id": "stt       ",
              "displayName": "stt       ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title         ",
              "displayName": "title         ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "source      ",
              "displayName": "source      ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "  Link        ",
              "displayName": "  Link        ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Thumbnail       ",
              "displayName": "Thumbnail       ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": " note",
              "displayName": " note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "0a0793b6-bcad-4a38-b19a-6b5c7b86ba14",
      "name": "Đánh dấu tip đã use1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        4080,
        3328
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Bạn đóng vai [Persona_Name] với hồ sơ:{{ $('profile').first().json['content profile'] }}Persona_Name là một nhân vật gần gũi (ví dụ: CEO, freelancer, phụ huynh, huấn luyện viên), được xác định bởi người dùng hoặc mặc định là \"David, một chủ doanh nghiệp.\"Nhiệm vụ của bạn:Tạo một bài đăng mạng xã hội duy nhất, không trùng lặp với bất kỳ câu chuyện nào trước đó, phù hợp với độ dài và phong cách tối ưu cho mạng xã hội. \n\nDữ liệu đầu ra luôn bằng tiếng Anh.Kết quả đầu ra:\nID: là STT lấy từ {{ $json.combinedString }}.\n\nPain_Point: Vấn đề cụ thể trích xuất từ {{ $json.combinedString }}, ví dụ: High ad costs with no sales hoặc Expensive internal IT with poor results.đầu ra pain poin là tiếng anh.\n\nHook: Câu mở đầu mạnh mẽ, đánh vào cảm xúc, thu hút sự chú ý của công ty hoặc cá nhân làm trong printing industry, print on demand, liên quan Pain_Point, thay đổi mỗi lần, ví dụ: He watched 15,000 USD vanish into a campaign black hole hoặc Her IT crew burned 73,000 USD and left her stranded.\n\nContent: Viết bài tiếng Anh từ góc nhìn của David hoặc khách hàng. Bám sát Pain_Point từ {{ $json.combinedString }}. \n\nBắt đầu bằng câu chuyện thất bại sống động – chi tiết thay đổi mỗi lần theo lối bài đăng cá nhân, văn phong kể chuyện, dài ngắn linh hoạt theo nội dung nhưng là kể câu chuyện về chúng tôi tại Printcart trải nghiệm và quá trình làm việc với khách hàng hoặc câu chuyện tự xự của khách hàng, nên thêm tên, ngàng nghề kinh doanh sát với icp, quy mô, sản phẩm, địa danh, ngày tháng…nếu có, lôi cuốn, có tình tiết cụ thể, lắt léo 1 chút, kinh điển, đời thường, và đa dạng, hấp dẫn, mệt mỏi, chán, kiệt sức, thất bại...và hạnh phúc vỡ òa, format đơn giản như tự gõ chữ chứ không màu mè, cta nhắn nhủ mạnh mẽ, đơn giản, chân thành, khéo léo dùng câu ngắn, xuống dòng, cảm xúc thật, hội thoại tự nhiên, tình tiết éo le, diễn biến bất ngờ, có trao đổi nói chuyện giữa các nhân vật, có kết luận về giải pháp cho vấn đề của người tham gia câu chuyện dưới dạng danh sách không dùng dấu gạch đầu dòng (-), không dùng dấu sao (*), không dùng Markdown. Mỗi dòng bắt đầu bằng dấu chấm tròn hoặc viết liền không dấu đầu dòng, và chi tiết cảm giác hạnh phúc, thắng lợi, thành công, tiết kiệm, tối ưu, tự động hóa, câu chuyện bao gồm: Tên (ví dụ: Sofia), địa điểm (ví dụ: Cape Town), thời gian (ví dụ: October 2024), ngành nghề (ví dụ: restaurant), mức độ thiệt hại ngẫu nhiên (ví dụ: Lost 7,000 USD), khó khăn (ví dụ: He argued with his partner till 3 AM), tiết lộ giải pháp mới mẻ với kết quả cụ thể (ví dụ: Revenue up 58% hoặc Saved 32,000 USD), kết thúc với lời kêu gọi hành động rõ ràng, chân thành, khác biệt, ví dụ: Share your IT mess – I’ll help you clean it up, tiết lộ giải pháp mới mẻ với kết quả cụ thể (ví dụ: Revenue up 58% hoặc Saved 32,000 USD), chi tiết và hấp dẫn, thêm 5-7 hashtag có liên quan, phù hợp với chủ đề của bài đăng, dán trực tiếp emoji Unicode phù hợp, output ngoài hashtag ra thì không được xuất hiện dấu # và dấu * và dấu ** \n\nComment_Content: Bình luận ngắn 20–50 từ, thật, có số liệu, liên quan Pain_Point, ví dụ: Sofia lost 7,000 USD on ads with no sales – you been there?\n\nCTA: Lời kêu gọi hành động rõ ràng, chân thành, khác biệt, ví dụ: Share your IT mess – I’ll help you clean it up.Câu chuyện phải:Không lặp lại: Bối cảnh, nhân vật, tình huống khác nhau.\n\nChi tiết: Dữ liệu thực, ví dụ: March 2023, Liam in Seoul lost 13,000 USD on ads – 8% clicks, no sales.Hấp dẫn: Nút thắt bất ngờ, cảm xúc mạnh.Gần gũi: Khoảnh khắc đời thường, ví dụ: She stared at the 9,000 USD bill, coffee gone cold.Diễn tiến cảm xúc: Từ thất vọng đến chiến thắng, ví dụ: I thought I’d shut down – now we’re up 67%.Giọng văn tươi mới: Khẩn cấp, trầm tư, hoặc thân mật, thay đổi mỗi lần.\n\n🎯 Mục tiêu Tạo nội dung sống động, đáng tin, theo từng chủ đề, không lặp lại, mang lại hành động với những câu chuyện người thật – việc thật, số liệu động và giọng văn con người, không emoji, chỉ storytelling raw và hấp dẫn. output ngoài hashtag ra thì không được xuất hiện dấu # và dấu * và dấu ** \n\nđầu ra luôn luôn phải là trong đó các trường phải có định dạng sau: Ví dụ: **ID:**\n",
        "options": {}
      },
      "id": "36a0930f-bebd-4736-8638-68ca3dee65de",
      "name": "AI Agent Story Telling",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -3456,
        2704
      ]
    },
    {
      "parameters": {
        "content": "# search ingraphic",
        "height": 658.1325610997613,
        "width": 2119.8349066204455,
        "color": 7
      },
      "id": "b350bb9d-3660-4204-89b6-9118016953c5",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3168,
        2048
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## search ingraphic",
        "width": 181.7819310795717
      },
      "id": "aa1802cc-43e0-467c-ac85-5dfa399d4243",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3232,
        2272
      ]
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  try {\n    if (item.json.images_results && Array.isArray(item.json.images_results)) {\n      const validExtensions = ['.jpg', '.jpeg', '.png', '.gif', '.webp'];\n      const blockedDomains = [\n        'squarespace-cdn.com',\n        'smartinsights.com',\n        'redlineminds.com',\n        'pptinfographics.com',\n        'slideshare.net'\n      ];\n\n      const imageResults = item.json.images_results\n        .filter(image => {\n          const url = image.original || '';\n          const urlLower = url.toLowerCase();\n\n          // Kiểm tra định dạng ảnh\n          const hasValidExtension = validExtensions.some(ext => urlLower.endsWith(ext));\n\n          // Kiểm tra domain có bị chặn không\n          const isBlockedDomain = blockedDomains.some(domain => urlLower.includes(domain));\n\n          // Chỉ giữ lại ảnh hợp lệ và không thuộc domain chặn\n          return hasValidExtension && !isBlockedDomain;\n        })\n        .map(image => ({\n          title: image.title || \"\",\n          source: image.source || \"\",\n          link: image.link || \"\",\n          original: image.original || \"\"\n        }));\n\n      return imageResults;\n    } else {\n      return [{ error: \"No valid image results found in input.\" }];\n    }\n  } catch (error) {\n    return [{ error: \"Error processing image results\", details: error.message }];\n  }\n}\n"
      },
      "id": "6f0b3d54-a0a2-40ad-8097-6b362d4afadb",
      "name": "lọc lấy mỗi ingraphic",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3584,
        2368
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ac96de13-47a4-48be-9a51-446f840d6cc8",
              "leftValue": "={{ $json.isValidForSocial }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2bc38481-95fb-4c72-b0de-5d51159e04b8",
      "name": "check tỉ lệ",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4720,
        2368
      ]
    },
    {
      "parameters": {
        "jsCode": "return $input.all().map(item => {\n  const width = item.json.width;\n  const height = item.json.height;\n  const ratio = height / width;\n\n  return {\n    json: {\n      isValidForSocial: ratio <= 2.5 && ratio >= 0.4\n    }\n  };\n});\n"
      },
      "id": "6e82599b-93ee-40d4-bc43-58a2e1d51591",
      "name": "h/w check",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4448,
        2368
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "136f4fa8-9d35-474a-8828-8140a238b454",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        3824,
        2368
      ]
    },
    {
      "parameters": {
        "url": "=https://images.weserv.nl/?url={{ $json.original }}&output=json",
        "options": {}
      },
      "id": "740f347a-2941-436c-8988-0cf186af6a91",
      "name": "Check width height1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4128,
        2384
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 932067550,
          "mode": "list",
          "cachedResultName": "list Inforgraphich",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=932067550"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "  Link        ": "={{ $('Loop Over Items3').item.json.link }}",
            "source      ": "={{ $('Loop Over Items3').item.json.source }}",
            "Thumbnail       ": "={{ $('Loop Over Items3').item.json.original }}",
            "title         ": "={{ $('Loop Over Items3').item.json.title }}"
          },
          "matchingColumns": [
            "  Link        "
          ],
          "schema": [
            {
              "id": "stt       ",
              "displayName": "stt       ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title         ",
              "displayName": "title         ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "source      ",
              "displayName": "source      ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "  Link        ",
              "displayName": "  Link        ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Thumbnail       ",
              "displayName": "Thumbnail       ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": " note",
              "displayName": " note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "d3bdd424-5e88-4e1e-a11a-92f6025fb8f0",
      "name": "Post Inforgraphich1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        5088,
        2352
      ]
    },
    {
      "parameters": {
        "jsCode": "return [\n \n\n  {\n    \"output\": \"ID: 9682\\n\\nHook:\\n\\nHave you ever wondered how much time you waste on manual processes? \\n\\nImage_URL: https://s3.ap-south-1.amazonaws.com/images.onprintshop/infographic_1_0a350dcd7b.jpg\\n\\nContent:\\n\\n**Online Designing Tools: The Secret Weapon Behind Business Growth**\\n\\nI used to spend hours,  \\n\\ndays,  \\n\\neven weeks,  \\n\\npreparing designs for clients.\\n\\nBut then I discovered the power of online designing tools. \\n\\n**Here’s what happened:**\\n\\nMy productivity skyrocketed! \\n\\n45% of custom orders now come with design work done by customers. \\n\\nThat’s right, **45%** less work for me. \\n\\nI gained back countless hours. \\n\\nI even had time to launch a third company and win a CEO award. \\n\\nWould you like to save 184 hours this month? \\n\\n**Check this out:**\\n\\nCustomers using our tools are 90% less likely to abandon their cart.\\n\\nThey see their designs in real-time. \\n\\nThey get what they expect. \\n\\nThey’re happy. \\n\\nYou’re happy.\\n\\nThink about all the time you can save and turn into growth. \\n\\nImagine the boost in customer trust. \\n\\n**Share your thoughts below.** \\nHow could automation change the game for you?\\n\\n \\n\\n#AutomationSuccess #ECommerceEfficiency #BusinessGrowth\\n\\nComment_Content:\\n\\n@EcomWarrior This is game-changing! Can't wait to implement this!\\n\\n@DesignPro Any tips for beginners looking to automate design?\\n\\nStatus:\\n\\nActive\\n\\nGoal:\\n\\nStimulate discussion and interest in automation, fostering community engagement.\"\n  }\n\n];\n"
      },
      "id": "6747d0e3-20c5-4e04-a5f0-beac43a8e043",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4640,
        2960
      ]
    },
    {
      "parameters": {
        "url": "=https://serpapi.com/search.json?q=print+solution+ web+infographic&tbm=isch&imgSize=medium&api_key=e7bcc7ab010f8211d7f50f3f830658d47bc7246cbba813901332af5d3d89e53d",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "1826591e-0f48-4a6d-9a0c-0ec42545cd21",
      "name": "seacher infographic",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3264,
        2368
      ]
    },
    {
      "parameters": {
        "content": "# search news articles ",
        "height": 503.13256109976135,
        "width": 1692.2686976695827,
        "color": 7
      },
      "id": "f61e89c6-fd2f-44e6-81d0-8806bb6f1d82",
      "name": "Sticky Note17",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2816,
        1392
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "https://serpapi.com/search?q=eCommerce+starters+hub+beginner+guide+cost+effective+platform+tips+start+online+store&tbm=nws&api_key=e7bcc7ab010f8211d7f50f3f830658d47bc7246cbba813901332af5d3d89e53d\n",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "450436f7-34a4-4fa1-a205-929f5b0c2d13",
      "name": "seacher gg trends3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2288,
        1584
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and extract only news topics with relevant details\nconst output = [];\n\nfor (const item of $input.all()) {\n  if (item.json.news_results && Array.isArray(item.json.news_results)) {\n    output.push(...item.json.news_results.map(news => ({\n      title: news.title,\n      link: news.link,\n      source: news.source,\n      date: news.date,\n      snippet: news.snippet,\n      thumbnail: news.thumbnail\n    })));\n  }\n}\n\nreturn output;\n"
      },
      "id": "493682d2-4ad6-4c05-910b-4e4468b865db",
      "name": "Code4",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1936,
        1584
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "daysInterval": 15
            }
          ]
        }
      },
      "id": "5f8283b2-375d-4662-b09c-32dec12ad386",
      "name": "Schedule Trigger1",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -2640,
        1584
      ],
      "disabled": true
    },
    {
      "parameters": {
        "content": "## search news articles ",
        "width": 181.7819310795717
      },
      "id": "c5fb8cf6-d78e-4073-95c1-3a4c70df54c1",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2320,
        1488
      ]
    },
    {
      "parameters": {
        "content": "## Save List",
        "width": 150
      },
      "id": "7ff9cfa0-5da8-496a-bfea-c41b69539d50",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1600,
        1504
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1iAh7rFkJASDcK_IkJQtQ9sC45cIQJDsIA5CijYYuCxU/edit?usp=sharing",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 917191123,
          "mode": "list",
          "cachedResultName": "LK - Group Ecommerce Starters Hub",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1iAh7rFkJASDcK_IkJQtQ9sC45cIQJDsIA5CijYYuCxU/edit#gid=917191123"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "title": "={{ $json.title }}",
            "link": "={{ $json.link }}",
            "source": "={{ $json.source }}",
            "date": "={{ $json.date }}",
            "snippet": "={{ $json.snippet }}",
            "thumbnail": "={{ $json.thumbnail }}"
          },
          "matchingColumns": [
            "title"
          ],
          "schema": [
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "source",
              "displayName": "source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "snippet",
              "displayName": "snippet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "thumbnail",
              "displayName": "thumbnail",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "a3630ad8-24ce-4799-981c-e5a994f0b07d",
      "name": "Post Inforgraphich",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -1584,
        1584
      ]
    },
    {
      "parameters": {
        "url": "=https://ir.thomsonreuters.com/rss/news-releases.xml\t",
        "options": {}
      },
      "id": "4a1ee038-33f0-4cf2-a1e2-a99a61485b45",
      "name": "RSS Read reuter",
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.1,
      "position": [
        6480,
        2432
      ]
    },
    {
      "parameters": {
        "url": "=https://www.printweek.in/rssfeeds/business?items=10\t",
        "options": {}
      },
      "id": "c2c69408-6eb4-428b-8fee-629c1f3fd229",
      "name": "printweek business",
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.1,
      "position": [
        6480,
        2672
      ]
    },
    {
      "parameters": {
        "url": "=https://www.printweek.in/rssfeeds/digital?items=10\t",
        "options": {}
      },
      "id": "8d8f3968-2d09-4b0e-96da-b903d2a9809a",
      "name": "printweek digital",
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.1,
      "position": [
        6512,
        2912
      ]
    },
    {
      "parameters": {
        "url": "=https://www.printweek.in/rssfeeds/packaging?items=10\t",
        "options": {}
      },
      "id": "99e1af27-5097-49cd-aa08-bea2ed8a057e",
      "name": "printweek packaging",
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.1,
      "position": [
        6512,
        3120
      ]
    },
    {
      "parameters": {
        "url": "=https://www.printweek.in/rssfeeds/printbuying",
        "options": {}
      },
      "id": "a7caf103-3f5b-4cab-95b7-6857cf779911",
      "name": "printweek printbuying",
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.1,
      "position": [
        6528,
        3344
      ]
    },
    {
      "parameters": {
        "url": "=https://news.google.com/rss/search?q=when:7d+allinurl:bloomberg.com&hl=en-US&gl=US&ceid=US:en",
        "options": {}
      },
      "id": "3fcac93e-38e2-40ac-a480-343dd0230a33",
      "name": "Google News",
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.1,
      "position": [
        6528,
        3584
      ]
    },
    {
      "parameters": {
        "url": "=https://feeds.bloomberg.com/technology/news.rss",
        "options": {}
      },
      "id": "d30c68b8-2dac-46fb-9718-0aca1fd3d9d1",
      "name": "bloomberg technology",
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.1,
      "position": [
        6528,
        3840
      ]
    },
    {
      "parameters": {
        "url": "=https://feeds.bloomberg.com/markets/news.rss",
        "options": {}
      },
      "id": "5d1b4d52-e53f-48c3-928e-d6eeaca3804a",
      "name": "bloomberg markets",
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.1,
      "position": [
        6528,
        4080
      ]
    },
    {
      "parameters": {
        "jsCode": "const keywords = [\"printing\", \"e-commerce\", \"automation\", \"custom\", \"packaging\", \"t-shirt\", \"textile\", \"manufacturing\"];\n\n// Lọc tin tức có chứa từ khóa trong title hoặc description\nconst filteredItems = items.filter(item => {\n    const title = item.json.title ? item.json.title.toLowerCase() : \"\";\n    const description = item.json.contentSnippet ? item.json.contentSnippet.toLowerCase() : \"\";\n    \n    return keywords.some(keyword => title.includes(keyword) || description.includes(keyword));\n});\n\n// Giới hạn kết quả chỉ lấy 10 tin đầu tiên\nreturn filteredItems.slice(0, 10);\n"
      },
      "id": "ccb2c358-8855-4fde-b7a9-c1cb51d3aed2",
      "name": "filter category",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6848,
        2432
      ]
    },
    {
      "parameters": {
        "jsCode": "const keywords = [\n    \"printing\", \"e-commerce\", \"custom\", \"packaging\", \"textile\", \"automation\",\n    \"digital printing\", \"t-shirt\", \"gift\", \"merchandise\", \"manufacturing\", \n    \"label printing\", \"sustainable packaging\", \"3D printing\"\n];\n\n// Chỉ lấy các bài viết có số liệu cụ thể hoặc xu hướng\nconst importantPhrases = [\n    \"market size\", \"growth\", \"trends\", \"report\", \"survey\", \"revenue\", \n    \"$\", \"%\", \"billion\", \"million\", \"increase\", \"forecast\", \"industry insights\"\n];\n\nconst filteredItems = items.filter(item => {\n    const title = item.json.title ? item.json.title.toLowerCase() : \"\";\n    const description = item.json.contentSnippet ? item.json.contentSnippet.toLowerCase() : \"\";\n    const content = item.json.content ? item.json.content.toLowerCase() : \"\";\n    const categories = item.json.categories ? item.json.categories.join(\" \").toLowerCase().trim() : \"\";\n\n    // Kiểm tra xem tin có liên quan đến ngành không\n    const isRelevant = keywords.some(keyword => \n        title.includes(keyword) || \n        description.includes(keyword) || \n        content.includes(keyword) || \n        categories.includes(keyword)\n    );\n\n    // Kiểm tra xem tin có chứa số liệu, báo cáo hay xu hướng không\n    const hasData = importantPhrases.some(phrase => \n        title.includes(phrase) || \n        description.includes(phrase) || \n        content.includes(phrase)\n    );\n\n    return isRelevant && hasData;\n});\n\nreturn filteredItems; \n"
      },
      "id": "de682de5-05ba-49ef-8df5-0e4684190710",
      "name": "filter category1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6832,
        2672
      ]
    },
    {
      "parameters": {
        "jsCode": "const keywords = [\n    \"printing\", \"e-commerce\", \"custom\", \"packaging\", \"textile\", \"automation\",\n    \"digital printing\", \"t-shirt\", \"gift\", \"merchandise\", \"manufacturing\", \n    \"label printing\", \"sustainable packaging\", \"3D printing\"\n];\n\n// Chỉ lấy các bài viết có số liệu cụ thể hoặc xu hướng\nconst importantPhrases = [\n    \"market size\", \"growth\", \"trends\", \"report\", \"survey\", \"revenue\", \n    \"$\", \"%\", \"billion\", \"million\", \"increase\", \"forecast\", \"industry insights\"\n];\n\nconst filteredItems = items.filter(item => {\n    const title = item.json.title ? item.json.title.toLowerCase() : \"\";\n    const description = item.json.contentSnippet ? item.json.contentSnippet.toLowerCase() : \"\";\n    const content = item.json.content ? item.json.content.toLowerCase() : \"\";\n    const categories = item.json.categories ? item.json.categories.join(\" \").toLowerCase().trim() : \"\";\n\n    // Kiểm tra xem tin có liên quan đến ngành không\n    const isRelevant = keywords.some(keyword => \n        title.includes(keyword) || \n        description.includes(keyword) || \n        content.includes(keyword) || \n        categories.includes(keyword)\n    );\n\n    // Kiểm tra xem tin có chứa số liệu, báo cáo hay xu hướng không\n    const hasData = importantPhrases.some(phrase => \n        title.includes(phrase) || \n        description.includes(phrase) || \n        content.includes(phrase)\n    );\n\n    return isRelevant && hasData;\n});\n\nreturn filteredItems;\n"
      },
      "id": "84895f4e-e69d-4e83-a087-1bb26599b8d8",
      "name": "filter category2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6800,
        2912
      ]
    },
    {
      "parameters": {
        "jsCode": "const keywords = [\n    \"printing\", \"e-commerce\", \"custom\", \"packaging\", \"textile\", \"automation\",\n    \"digital printing\", \"t-shirt\", \"gift\", \"merchandise\", \"manufacturing\", \n    \"label printing\", \"sustainable packaging\", \"3D printing\"\n];\n\n// Chỉ lấy các bài viết có số liệu cụ thể hoặc xu hướng\nconst importantPhrases = [\n    \"market size\", \"growth\", \"trends\", \"report\", \"survey\", \"revenue\", \n    \"$\", \"%\", \"billion\", \"million\", \"increase\", \"forecast\", \"industry insights\"\n];\n\nconst filteredItems = items.filter(item => {\n    const title = item.json.title ? item.json.title.toLowerCase() : \"\";\n    const description = item.json.contentSnippet ? item.json.contentSnippet.toLowerCase() : \"\";\n    const content = item.json.content ? item.json.content.toLowerCase() : \"\";\n    const categories = item.json.categories ? item.json.categories.join(\" \").toLowerCase().trim() : \"\";\n\n    // Kiểm tra xem tin có liên quan đến ngành không\n    const isRelevant = keywords.some(keyword => \n        title.includes(keyword) || \n        description.includes(keyword) || \n        content.includes(keyword) || \n        categories.includes(keyword)\n    );\n\n    // Kiểm tra xem tin có chứa số liệu, báo cáo hay xu hướng không\n    const hasData = importantPhrases.some(phrase => \n        title.includes(phrase) || \n        description.includes(phrase) || \n        content.includes(phrase)\n    );\n\n    return isRelevant && hasData;\n});\n\n// ❌ Bỏ giới hạn 10 tin\nreturn filteredItems;\n"
      },
      "id": "c59b9784-b2cb-457c-818e-625b173ee809",
      "name": "filter category3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6800,
        3120
      ]
    },
    {
      "parameters": {
        "jsCode": "const keywords = [\n    \"printing\", \"e-commerce\", \"custom\", \"packaging\", \"textile\", \"automation\",\n    \"digital printing\", \"t-shirt\", \"gift\", \"merchandise\", \"manufacturing\", \n    \"label printing\", \"sustainable packaging\", \"3D printing\"\n];\n\n// Chỉ lấy các bài viết có số liệu cụ thể hoặc xu hướng\nconst importantPhrases = [\n    \"market size\", \"growth\", \"trends\", \"report\", \"survey\", \"revenue\", \n    \"$\", \"%\", \"billion\", \"million\", \"increase\", \"forecast\", \"industry insights\"\n];\n\nconst filteredItems = items.filter(item => {\n    const title = item.json.title ? item.json.title.toLowerCase() : \"\";\n    const description = item.json.contentSnippet ? item.json.contentSnippet.toLowerCase() : \"\";\n    const content = item.json.content ? item.json.content.toLowerCase() : \"\";\n    const categories = item.json.categories ? item.json.categories.join(\" \").toLowerCase().trim() : \"\";\n\n    // Kiểm tra xem tin có liên quan đến ngành không\n    const isRelevant = keywords.some(keyword => \n        title.includes(keyword) || \n        description.includes(keyword) || \n        content.includes(keyword) || \n        categories.includes(keyword)\n    );\n\n    // Kiểm tra xem tin có chứa số liệu, báo cáo hay xu hướng không\n    const hasData = importantPhrases.some(phrase => \n        title.includes(phrase) || \n        description.includes(phrase) || \n        content.includes(phrase)\n    );\n\n    return isRelevant && hasData;\n});\n\n// ❌ Bỏ giới hạn 10 tin\nreturn filteredItems;\n"
      },
      "id": "f291de18-c202-47be-b242-addd12c28085",
      "name": "filter category4",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6800,
        3344
      ]
    },
    {
      "parameters": {
        "jsCode": "const keywords = [\n  \"printing\", \"e-commerce\", \"custom\", \"packaging\", \"textile\", \"automation\",\n  \"digital printing\", \"t-shirt\", \"gift\", \"merchandise\", \"manufacturing\", \n  \"label printing\", \"sustainable packaging\", \"3D printing\"\n];\n\nconst importantPhrases = [\n  \"market size\", \"growth\", \"trends\", \"report\", \"survey\", \"revenue\", \n  \"$\", \"%\", \"billion\", \"million\", \"increase\", \"forecast\", \"industry insights\"\n];\n\nconst filteredItems = items.filter(item => {\n  const title = (item.json.title || \"\").toLowerCase();\n  const snippet = (item.json.contentSnippet || \"\").toLowerCase();\n  const content = (item.json.content || \"\").toLowerCase();\n\n  // Kiểm tra tin có liên quan ngành\n  const isRelevant = keywords.some(keyword => \n    title.includes(keyword) || snippet.includes(keyword) || content.includes(keyword)\n  );\n\n  // Kiểm tra tin có số liệu, xu hướng\n  const hasData = importantPhrases.some(phrase => \n    title.includes(phrase) || snippet.includes(phrase) || content.includes(phrase)\n  );\n\n  return isRelevant && hasData;\n});\n\nreturn filteredItems;\n"
      },
      "id": "622105ad-ea2d-4ded-a75d-f6b5435ebfcb",
      "name": "filter category5",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6800,
        3584
      ]
    },
    {
      "parameters": {
        "jsCode": "const keywords = [\n  \"printing\", \"e-commerce\", \"custom\", \"packaging\", \"textile\", \"automation\",\n  \"digital printing\", \"t-shirt\", \"gift\", \"merchandise\", \"manufacturing\", \n  \"label printing\", \"sustainable packaging\", \"3D printing\", \"retail\", \n  \"supply chain\", \"branding\", \"fashion\", \"production\", \"order fulfillment\", \"dropshipping\"\n];\n\nconst importantPhrases = [\n  \"market size\", \"growth\", \"trends\", \"report\", \"survey\", \"revenue\", \n  \"billion\", \"million\", \"increase\", \"forecast\", \"industry insights\", \n  \"consumer demand\", \"supply chain disruption\", \"automation technology\"\n];\n\n// Regex để tìm số liệu như \"$1.2B\", \"50%\", \"10 million\"\nconst numberPattern = /\\$\\d+(\\.\\d+)?[BM]?|\\d+\\s?(billion|million|%)|\\d+\\.\\d+\\s?(billion|million|%)/gi;\n\nconst filteredItems = items.filter(item => {\n  const title = item.json.title ? item.json.title.toLowerCase() : \"\";\n  const description = item.json.contentSnippet ? item.json.contentSnippet.toLowerCase() : \"\";\n  const content = item.json.content ? item.json.content.toLowerCase() : \"\";\n  const summary = item.json.summary ? item.json.summary.toLowerCase() : \"\";\n\n  const isRelevant = keywords.some(keyword => \n    title.includes(keyword) || \n    description.includes(keyword) || \n    content.includes(keyword) || \n    summary.includes(keyword)\n  );\n\n  const hasData = importantPhrases.some(phrase => \n    title.includes(phrase) || \n    description.includes(phrase) || \n    content.includes(phrase) || \n    summary.includes(phrase)\n  ) || numberPattern.test(content) || numberPattern.test(title);\n\n  // ✅ Chỉ cần có từ khóa ngành hoặc có số liệu xu hướng\n  return isRelevant || hasData;\n});\n\n// ✅ In ra log kết quả lọc\nconsole.log(`🧠 Tổng số bài viết lọc được: ${filteredItems.length}`);\nfilteredItems.forEach((item, index) => console.log(`✅ ${index + 1}: ${item.json.title}`));\n\nreturn filteredItems;\n"
      },
      "id": "865271ed-cca6-487f-89db-550abfae8f40",
      "name": "filter category6",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6784,
        3840
      ]
    },
    {
      "parameters": {
        "jsCode": "const keywords = [\n  \"printing\", \"e-commerce\", \"custom\", \"packaging\", \"textile\", \"automation\",\n  \"digital printing\", \"t-shirt\", \"gift\", \"merchandise\", \"manufacturing\", \n  \"label printing\", \"sustainable packaging\", \"3D printing\", \"retail\", \n  \"supply chain\", \"branding\", \"fashion\", \"production\", \"order fulfillment\", \"dropshipping\"\n];\n\nconst importantPhrases = [\n  \"market size\", \"growth\", \"trends\", \"report\", \"survey\", \"revenue\", \n  \"billion\", \"million\", \"increase\", \"forecast\", \"industry insights\", \n  \"consumer demand\", \"supply chain disruption\", \"automation technology\"\n];\n\n// Regex để tìm số liệu như \"$1.2B\", \"50%\", \"10 million\"\nconst numberPattern = /\\$\\d+(\\.\\d+)?[BM]?|\\d+\\s?(billion|million|%)|\\d+\\.\\d+\\s?(billion|million|%)/gi;\n\nconst filteredItems = items.filter(item => {\n  const title = item.json.title ? item.json.title.toLowerCase() : \"\";\n  const description = item.json.contentSnippet ? item.json.contentSnippet.toLowerCase() : \"\";\n  const content = item.json.content ? item.json.content.toLowerCase() : \"\";\n  const summary = item.json.summary ? item.json.summary.toLowerCase() : \"\";\n\n  const isRelevant = keywords.some(keyword => \n    title.includes(keyword) || \n    description.includes(keyword) || \n    content.includes(keyword) || \n    summary.includes(keyword)\n  );\n\n  const hasData = importantPhrases.some(phrase => \n    title.includes(phrase) || \n    description.includes(phrase) || \n    content.includes(phrase) || \n    summary.includes(phrase)\n  ) || numberPattern.test(content) || numberPattern.test(title);\n\n  // ✅ Chỉ cần có từ khóa ngành hoặc có số liệu xu hướng\n  return isRelevant || hasData;\n});\n\n// ✅ In ra log kết quả lọc\nconsole.log(`🧠 Tổng số bài viết lọc được: ${filteredItems.length}`);\nfilteredItems.forEach((item, index) => console.log(`✅ ${index + 1}: ${item.json.title}`));\n\nreturn filteredItems;\n"
      },
      "id": "8de8fd16-8ffd-4455-a7b7-324717038bc1",
      "name": "filter category7",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6784,
        4080
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 199909113,
          "mode": "list",
          "cachedResultName": "list news",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=199909113"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Sumary": "={{ $json.content }}",
            "New title ": "={{ $json.title }}",
            "Link": "={{ $json.link }}",
            "Soure": "Reuters ",
            "Date": "={{ $json.isoDate }}"
          },
          "matchingColumns": [
            "Sumary"
          ],
          "schema": [
            {
              "id": "New title ",
              "displayName": "New title ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Sumary",
              "displayName": "Sumary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Hook",
              "displayName": "Hook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Link",
              "displayName": "Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Soure",
              "displayName": "Soure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Note",
              "displayName": "Note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "97e6d84a-fcdf-42ff-b8f9-d1b2a1f5f75f",
      "name": "list news",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        7360,
        2400
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 199909113,
          "mode": "list",
          "cachedResultName": "list news",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=199909113"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Sumary": "={{ $json.contentSnippet }}",
            "New title ": "={{ $json.title }}",
            "Link": "={{ $json.link }}",
            "Date": "={{ $json.isoDate }}",
            "Soure": "printweek business"
          },
          "matchingColumns": [
            "Sumary"
          ],
          "schema": [
            {
              "id": "New title ",
              "displayName": "New title ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Sumary",
              "displayName": "Sumary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Hook",
              "displayName": "Hook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Link",
              "displayName": "Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Soure",
              "displayName": "Soure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Note",
              "displayName": "Note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "16f7efb4-22b5-4fc4-b9eb-5e83a89eeaa2",
      "name": "list news1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        7344,
        2640
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 199909113,
          "mode": "list",
          "cachedResultName": "list news",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=199909113"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Sumary": "={{ $json.contentSnippet }}",
            "New title ": "={{ $json.title }}",
            "Link": "={{ $json.link }}",
            "Soure": "printweek digital",
            "Date": "={{ $json.isoDate }}"
          },
          "matchingColumns": [
            "Sumary"
          ],
          "schema": [
            {
              "id": "New title ",
              "displayName": "New title ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Sumary",
              "displayName": "Sumary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Hook",
              "displayName": "Hook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Link",
              "displayName": "Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Soure",
              "displayName": "Soure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Note",
              "displayName": "Note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "4964a4e8-c7de-4a2e-9f5e-3afee51ff25d",
      "name": "list news2",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        7344,
        2880
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 199909113,
          "mode": "list",
          "cachedResultName": "list news",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=199909113"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Sumary": "={{ $json.contentSnippet }}",
            "New title ": "={{ $json.title }}",
            "Link": "={{ $json.link }}",
            "Soure": "printweek packaging",
            "Date": "={{ $json.isoDate }}"
          },
          "matchingColumns": [
            "Sumary"
          ],
          "schema": [
            {
              "id": "New title ",
              "displayName": "New title ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Sumary",
              "displayName": "Sumary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Hook",
              "displayName": "Hook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Link",
              "displayName": "Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Soure",
              "displayName": "Soure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Note",
              "displayName": "Note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "ddaf32a5-90f4-4597-8bc2-658453303318",
      "name": "list news3",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        7344,
        3104
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 199909113,
          "mode": "list",
          "cachedResultName": "list news",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=199909113"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Sumary": "={{ $json.contentSnippet }}",
            "New title ": "={{ $json.title }}",
            "Link": "={{ $json.link }}",
            "Soure": "printweek printbuying",
            "Date": "={{ $json.isoDate }}"
          },
          "matchingColumns": [
            "Sumary"
          ],
          "schema": [
            {
              "id": "New title ",
              "displayName": "New title ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Sumary",
              "displayName": "Sumary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Hook",
              "displayName": "Hook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Link",
              "displayName": "Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Soure",
              "displayName": "Soure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Note",
              "displayName": "Note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "f93b427d-25d9-48bb-8bb9-3a6da61936c1",
      "name": "list news4",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        7344,
        3328
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 199909113,
          "mode": "list",
          "cachedResultName": "list news",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=199909113"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Sumary": "={{ $json.contentSnippet }}",
            "New title ": "={{ $json.title }}",
            "Link": "={{ $json.link }}",
            "Soure": "Google News",
            "Date": "={{ $json.isoDate }}"
          },
          "matchingColumns": [
            "Sumary"
          ],
          "schema": [
            {
              "id": "New title ",
              "displayName": "New title ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Sumary",
              "displayName": "Sumary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Hook",
              "displayName": "Hook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Link",
              "displayName": "Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Soure",
              "displayName": "Soure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Note",
              "displayName": "Note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "de4d8e54-cba6-4f05-9f93-d1369619bac4",
      "name": "list news5",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        7344,
        3568
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 199909113,
          "mode": "list",
          "cachedResultName": "list news",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=199909113"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Sumary": "={{ $json.contentSnippet }}",
            "New title ": "={{ $json.title }}",
            "Link": "={{ $json.link }}",
            "Soure": "bloomberg technology",
            "Date": "={{ $json.isoDate }}"
          },
          "matchingColumns": [
            "Sumary"
          ],
          "schema": [
            {
              "id": "New title ",
              "displayName": "New title ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Sumary",
              "displayName": "Sumary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Hook",
              "displayName": "Hook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Link",
              "displayName": "Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Soure",
              "displayName": "Soure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Note",
              "displayName": "Note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "3e08e868-39db-45b5-816f-d9e8267dcc2b",
      "name": "list news6",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        7344,
        3824
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 199909113,
          "mode": "list",
          "cachedResultName": "list news",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=199909113"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Sumary": "={{ $json.contentSnippet }}",
            "New title ": "={{ $json.title }}",
            "Link": "={{ $json.link }}",
            "Soure": "bloomberg markets",
            "Date": "={{ $json.isoDate }}"
          },
          "matchingColumns": [
            "Sumary"
          ],
          "schema": [
            {
              "id": "New title ",
              "displayName": "New title ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Sumary",
              "displayName": "Sumary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Hook",
              "displayName": "Hook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Link",
              "displayName": "Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Soure",
              "displayName": "Soure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Note",
              "displayName": "Note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "4352f578-c450-4afc-a271-01d901fd3304",
      "name": "list news7",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        7344,
        4064
      ]
    },
    {
      "parameters": {
        "content": "# Step 1️⃣: Search tin tức mới trong 7 ngày qua \nNote:  \n",
        "height": 2188,
        "width": 3560,
        "color": 7
      },
      "id": "f000d0b1-7a93-468f-b02c-81118a766171",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6144,
        2208
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6f477eab-f2ab-4b7b-b594-e17f3b0fcbd4",
              "leftValue": "={{ $json.isoDate.toDateTime().format('yyyy-MM-dd') }}",
              "rightValue": "={{ $now.minus({ days: 7 }).toISODate() }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "af5e0c41-bca3-4454-8ae5-1d54e91a6ff8",
      "name": "check date 7 date after",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7104,
        2432
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6f477eab-f2ab-4b7b-b594-e17f3b0fcbd4",
              "leftValue": "={{ $json.isoDate.toDateTime().format('yyyy-MM-dd') }}",
              "rightValue": "={{ $now.minus({ days: 7 }).toISODate() }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "500c06b0-2719-479c-b11c-e51c699a6bf4",
      "name": "check date 7 date after1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7072,
        2672
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6f477eab-f2ab-4b7b-b594-e17f3b0fcbd4",
              "leftValue": "={{ $json.isoDate.toDateTime().format('yyyy-MM-dd') }}",
              "rightValue": "={{ $now.minus({ days: 7 }).toISODate() }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9331fe64-e7ae-4f4d-a3ca-f56b96381623",
      "name": "check date 7 date after2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7072,
        2912
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6f477eab-f2ab-4b7b-b594-e17f3b0fcbd4",
              "leftValue": "={{ $json.isoDate.toDateTime().format('yyyy-MM-dd') }}",
              "rightValue": "={{ $now.minus({ days: 7 }).toISODate() }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "80c5c194-e2a2-4004-96ac-0e494067629a",
      "name": "check date 7 date after3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7072,
        3120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6f477eab-f2ab-4b7b-b594-e17f3b0fcbd4",
              "leftValue": "={{ $json.isoDate.toDateTime().format('yyyy-MM-dd') }}",
              "rightValue": "={{ $now.minus({ days: 7 }).toISODate() }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "75b5be9f-9041-487b-8401-3713885cd22d",
      "name": "check date 7 date after4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7088,
        3344
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6f477eab-f2ab-4b7b-b594-e17f3b0fcbd4",
              "leftValue": "={{ $json.isoDate.toDateTime().format('yyyy-MM-dd') }}",
              "rightValue": "={{ $now.minus({ days: 7 }).toISODate() }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3b6b6152-fae6-4a9d-a9c8-b156edfd4121",
      "name": "check date 7 date after5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7088,
        3584
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6f477eab-f2ab-4b7b-b594-e17f3b0fcbd4",
              "leftValue": "={{ $json.isoDate.toDateTime().format('yyyy-MM-dd') }}",
              "rightValue": "={{ $now.minus({ days: 7 }).toISODate() }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d5d6aca0-cc27-4460-887a-2137cb2e296c",
      "name": "check date 7 date after6",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7088,
        3840
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6f477eab-f2ab-4b7b-b594-e17f3b0fcbd4",
              "leftValue": "={{ $json.isoDate.toDateTime().format('yyyy-MM-dd') }}",
              "rightValue": "={{ $now.minus({ days: 7 }).toISODate() }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "68d04c30-d735-49c5-bdc3-42a3cb22189f",
      "name": "check date 7 date after7",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7088,
        4080
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "daysInterval": 15
            }
          ]
        }
      },
      "id": "574dc829-9581-44e4-a77f-9866d0ad883f",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        6048,
        3168
      ],
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "const results = [];\n\nfor (const item of $input.all()) {\n  const json = item.json;\n  let imageUrl = null;\n\n  if (json.image_url) {\n    // Placid\n    imageUrl = json.image_url;\n  } else if (json.imageUrl) {\n    // DynaPictures\n    imageUrl = json.imageUrl;\n  } else if (json.url) {\n    // HTMLCSStoImage\n    imageUrl = json.url;\n  }\n\n  if (imageUrl) {\n    results.push({ image: imageUrl });\n  }\n}\n\nreturn results;\n"
      },
      "id": "6fbc3aae-67a5-4089-b6cf-9842babbcb1f",
      "name": "Image",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3936,
        3824
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "daysInterval": 15
            }
          ]
        }
      },
      "id": "ddf6e7e2-9bf6-43c0-a0e8-ea83c3e1bb46",
      "name": "Schedule Trigger2",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        7680,
        2592
      ]
    },
    {
      "parameters": {
        "content": "# Step 1: Create Industry News from all sources",
        "height": 622.9836273324177,
        "width": 1844.5112662369484,
        "color": 2
      },
      "id": "d52cd46a-7541-4b6b-b221-f8bc0074d2d5",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        7872,
        2224
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 199909113,
          "mode": "list",
          "cachedResultName": "list news",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=199909113"
        },
        "options": {}
      },
      "id": "dab54574-5a7d-4b12-b350-bead20315c88",
      "name": "list news8",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        8240,
        2448
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 913231215,
          "mode": "list",
          "cachedResultName": "Profile",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=913231215"
        },
        "options": {}
      },
      "id": "2b1332a0-750e-4502-9608-eb3030eda229",
      "name": "profile2",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        8032,
        2448
      ]
    },
    {
      "parameters": {
        "model": "=grok-beta",
        "options": {
          "baseURL": "https://api.x.ai/v1"
        }
      },
      "id": "6f971036-7d75-4967-bfca-3a22ef81bd4f",
      "name": "OpenAI Chat Model3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        8640,
        2672
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=🔹 Bạn vao vai David với hồ sơ:\n\n{{ $('profile2').first().json['content profile'] }}\n\nDavid là một chủ doanh nghiệp, một nhân vật dễ liên tưởng, đại diện cho góc nhìn của người lãnh đạo doanh nghiệp thực tế và gần gũi.\n\nVới tin tức hàng ngày từ {{ $json.message }}, tổng hợp 6 bản tin tức riêng biệt.\n\n🔹 Nhiệm vụ của bạn:\n\nTạo một bài đăng trên mạng xã hội duy nhất, độc đáo (không trùng lặp nội dung trước đó), được tối ưu hóa về độ dài, khả năng đọc và mức độ tương tác cao, phù hợp với các nền tảng như X. Đầu ra phải bằng tiếng Anh.\n\nKết quả đầu ra:\n\nID: Một chuỗi ngẫu nhiên, ví dụ: POST_7849, POST_X7K9M.\n\nHook: Dòng mở đầu mạnh mẽ, gây sốc hoặc tò mò, dựa trên một trong 6 bản tin, ví dụ: BYD just topped Tesla’s $100 billion sales mark! hoặc Chinese tech stocks tanked 3% overnight – panic time?\n\nContent:\n\nViết bài đăng từ góc nhìn của David chia sẻ với ICP của mình về tình hình thị trường và biến động kinh tế. Bắt đầu bằng một câu chuyện ngắn hoặc quan sát hài hước, thực tế, ví dụ: I nearly spat out my coffee checking today’s headlines. Dùng dữ liệu từ một bản tin (số liệu, ngành, chi tiết chính) để làm rõ vấn đề, ví dụ: BYD’s sales hit $107 billion, leaving Tesla in the dust. Thêm góc nhìn chuyên gia ngắn gọn, ví dụ: Smart tech is the game-changer now, not just brand hype. Kết thúc bằng câu hỏi hoặc lời kêu gọi vui vẻ để tăng tương tác, ví dụ: What’s your bet on this EV race? Nội dung phải:\n\nDùng giọng điệu vui vẻ, năng lượng, gần gũi, phong cách leadership thought, có phân tich bình luận quan điểm cá nhân, not toxic, dán trực tiếp emoji Unicode phù hợp, output ngoài hashtag ra thì không được xuất hiện dấu # và dấu * và dấu ** \n\nTrình bày ngắn gọn, mỗi câu một dòng, dễ đọc.\n\nTích hợp số liệu thực từ một bản tin để tăng độ tin cậy.\n\nĐộ dài: 100–150 từ, phù hợp với mạng xã hội.\n\nComment_Content:\n\nTạo 6 bình luận riêng biệt, mỗi bình luận tóm tắt một bản tin từ nguồn dữ liệu. Mỗi bình luận ngắn (20–50 từ), giọng điệu tò mò, hấp dẫn, khơi gợi thảo luận, Dùng giọng điệu vui vẻ, năng lượng, gần gũi, phong cách leadership thought, có phân tich bình luận quan điểm cá nhân, not toxic, dán trực tiếp emoji Unicode phù hợp, output ngoài hashtag ra thì không được xuất hiện dấu # và dấu * và dấu ** , ví dụ: Chinese tech stocks down 3% after Xiaomi’s $5.5B sale – bubble bursting? hoặc Tesla’s Europe sales crashed 40% – what’s next for Elon?\n\n🔹 Hướng dẫn cấu trúc bài viết\n\nID: Chuỗi ngẫu nhiên độc đáo, ví dụ: POST_7849.\n\nHook: Gây sốc hoặc tò mò, dựa trên một bản tin, ví dụ:\n\nBYD just topped Tesla’s $100 billion sales mark!\n\nTesla’s Europe sales tanked 40% – ouch!\n\nChinese tech stocks dropped 3% overnight – wild ride!\n\nContent: Kết hợp câu chuyện, dữ liệu, và tương tác\n\nBắt đầu bằng quan sát từ David, ví dụ: I nearly spat out my coffee checking today’s headlines.\n\nTrích dẫn số liệu từ một bản tin, ví dụ: BYD’s sales soared to $107 billion in 2024.\n\nThêm góc nhìn chuyên gia, ví dụ: Innovation’s winning over loyalty these days.\n\nKết thúc bằng câu hỏi vui, ví dụ: What’s your bet on this EV race?\n\nComment_Content: Khơi gợi thảo luận từ 6 bản tin\n\nNgắn gọn (20–50 từ).\n\nGiọng điệu tò mò, hấp dẫn, ví dụ: Cathie Wood says Tesla hits $2,600 in 5 years – believe it?\n\nMỗi bình luận phản ánh một tin tức riêng biệt từ nguồn dữ liệu.\n\nthêm 10-15 popular related hashtag\n\n🎯 Mục tiêu\n\nTạo bài đăng có tính tương tác cao, vui vẻ, gần gũi, cung cấp giá trị thực từ tin tức, tăng độ tin cậy và thúc đẩy thảo luận qua bài đăng chính và 6 bình luận.\n\nKết quả đầu ra phải là văn bản thuần túy, không chứa emoji, ký hiệu đặc biệt hoặc định dạng markdown như *, #, _, v.v. dán trực tiếp emoji Unicode phù hợp, output ngoài hashtag ra thì không được xuất hiện dấu # và dấu * và dấu ** \n\nKhông bao gồm bất kỳ lời giải thích nào khác trong kết quả đầu ra.",
        "options": {}
      },
      "id": "1bd35801-8234-4a35-b15c-b62a8f787fd5",
      "name": "AI Agent Tips Sharing2",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        8768,
        2448
      ]
    },
    {
      "parameters": {
        "jsCode": "const allItems = $input.all();\nconst firstSix = allItems.slice(0, 6);\n\nconst lines = [];\n\nfor (const item of firstSix) {\n  const title = item.json[\"New title \"] || \"Không có tiêu đề\";\n  const summary = item.json.Sumary || \"\";\n  const source = item.json.Soure || \"\";\n  const date = item.json.Date ? new Date(item.json.Date).toLocaleDateString(\"vi-VN\") : \"\";\n  const link = item.json.Link || \"\";\n\n  lines.push(\n    `📰 *${title}*\\n📄 ${summary}\\n📍 ${source} | 📅 ${date}\\n🔗 ${link}`\n  );\n}\n\nconst message = lines.join('\\n\\n');\n\n// Trả về 1 object chứa chuỗi gộp\nreturn [{ message }];\n"
      },
      "id": "4d702e6b-39c8-4be0-93ba-7f56a5c5f3b6",
      "name": "chọn 6 bài đầu và merge to 1 chuỗi",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8480,
        2448
      ]
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  try {\n    if (item.json.output && typeof item.json.output === 'string') {\n      let messageContent = item.json.output;\n\n      // Clean up the input: remove unwanted formatting and normalize spacing\n      messageContent = messageContent\n        .replace(/[#*]+/g, '') // Remove # and * characters\n        .replace(/,\\s*$/gm, '') // Remove trailing commas\n        .replace(/\"/g, '') // Remove all quotation marks\n        .trim(); // Remove leading/trailing whitespace\n\n      function extractContent(data) {\n        const results = {};\n        const platformKey = \"post\";\n\n        // Regex patterns for required fields\n        const idRegex = /ID:\\s*([A-Za-z0-9_]+)/i;\n        const hookRegex = /Hook:\\s*([\\s\\S]*?)(?=\\n(?:Content|Comment_Content|$))/i;\n        const contentRegex = /Content:\\s*([\\s\\S]*?)(?=\\n(?:Comment_Content|$))/i;\n        const commentContentRegex = /Comment_Content:\\s*([\\s\\S]*?)$/i;\n\n        // Extract each field with fallback values\n        const idMatch = data.match(idRegex);\n        const hookMatch = data.match(hookRegex);\n        const contentMatch = data.match(contentRegex);\n        const commentContentMatch = data.match(commentContentRegex);\n\n        // Extract and split Comment_Content into an array\n        let commentContent = commentContentMatch ? commentContentMatch[1].trim() : \"\";\n        let commentArray = [];\n        if (commentContent) {\n          commentArray = commentContent\n            .split('\\n- ') // Split by new line and dash\n            .map(line => line.replace(/^- /, '').trim()) // Remove leading dash and trim\n            .filter(line => line.length > 0); // Filter out empty lines\n        }\n\n        results[platformKey] = {\n          id: idMatch ? idMatch[1].trim() : \"Not specified\",\n          hook: hookMatch ? hookMatch[1].trim() : \"Not specified\",\n          content: contentMatch ? contentMatch[1].trim() : \"Not specified\",\n          comment_content: commentArray.length > 0 ? commentArray : []\n        };\n\n        return results;\n      }\n\n      let extractedData = extractContent(messageContent);\n\n      // Check if ID is valid\n      if (!extractedData.post || !extractedData.post.id || extractedData.post.id === \"Not specified\") {\n        throw new Error(\"No valid ID extracted from input.\");\n      }\n\n      // Chỉ giữ thông tin của post trong item.json\n      item.json = extractedData.post;\n    } else {\n      item.json = { error: \"No valid output found in input.\" };\n    }\n  } catch (error) {\n    item.json = {\n      error: \"Error processing content\",\n      details: error.message\n    };\n  }\n}\n\nreturn $input.all();"
      },
      "id": "6978b609-6b10-4428-90a2-5a785f1facfb",
      "name": "convert ouput5",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        9184,
        2448
      ]
    },
    {
      "parameters": {
        "content": "# Step 2️⃣: Create Image or Upload Image for Social Post",
        "height": 775.3305847442616,
        "width": 975.4163952237152,
        "color": 4
      },
      "id": "ed369fe5-dd22-4d0e-9417-24e7dcc89280",
      "name": "Sticky Note18",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        7840,
        3072
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Get Image\nUse image link we got before, use it to get an image and export it as a Binary image file",
        "height": 305.99395395245244,
        "width": 230.54603652481285,
        "color": 5
      },
      "id": "d6209410-6eb1-4598-ad0b-3cb251e220ad",
      "name": "Sticky Note23",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        9200,
        2944
      ]
    },
    {
      "parameters": {
        "content": "## Get Image\nUse uploadUrl returned at Register node previous to PUT image binary file we just got at previous node",
        "height": 305.99395395245244,
        "width": 230.54603652481285,
        "color": 5
      },
      "id": "8e4a0597-f2a4-41f3-88f6-1f9a8b5d657f",
      "name": "Sticky Note26",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        9552,
        2944
      ]
    },
    {
      "parameters": {
        "content": "# Step 3️⃣: Publish Final Social Media Posts",
        "height": 1015,
        "width": 1544,
        "color": 5
      },
      "id": "3f37cdc2-4b2a-4ab3-a187-822aab1414b4",
      "name": "Sticky Note27",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        8928,
        2864
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "amount": 10
      },
      "id": "433e8b21-bc95-4b89-a139-3f29b79dc3ab",
      "name": "Wait2",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        8192,
        3264
      ],
      "webhookId": "31ab450b-7648-4489-8324-4126fa3580d2"
    },
    {
      "parameters": {
        "url": "={{ $json.polling_url }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer placid-4nwkicuohm9sx5aq-dbtm9ajtyd64xenv"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "98c53f0c-400b-4690-88bc-0079717f3781",
      "name": "Get placid2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8384,
        3264
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.placid.app/api/rest/images",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer placid-4nwkicuohm9sx5aq-dbtm9ajtyd64xenv"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"template_uuid\": \"06kurqzyqq8o0\",\n  \"layers\": {\n    \"headline\": {\n      \"text\": \"{{ $json.hook }}\"\n    }\n  }\n}\n\n",
        "options": {}
      },
      "id": "e6801934-a4ea-4661-a4d4-a2d0cee96ec3",
      "name": "placid banner2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7968,
        3264
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.facebook.com/v17.0/{{ $('Facebook  Printcart POD3').item.post_id }}/comments ",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "facebookGraphApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"message\": \"{{ $json.comment_content }}\"\n}\n",
        "options": {}
      },
      "id": "018e6979-62aa-41e5-9653-d9b5af061996",
      "name": "Coment5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        9472,
        3440
      ]
    },
    {
      "parameters": {
        "httpRequestMethod": "POST",
        "graphApiVersion": "v20.0",
        "node": "=me/photos",
        "edge": "feed",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "=message",
                "value": "={{ $('convert ouput5').item.json.content }}"
              },
              {
                "name": "url",
                "value": "={{ $json.image }}"
              }
            ]
          }
        }
      },
      "id": "c6ea061f-1ad4-4808-a959-277597a68d5d",
      "name": "Facebook  Printcart POD3",
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        9008,
        3440
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.linkedin.com/v2/assets?action=registerUpload",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "linkedInOAuth2Api",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"registerUploadRequest\": {\n    \"recipes\": [\n      \"urn:li:digitalmediaRecipe:feedshare-image\"\n    ],\n    \"owner\": \"urn:li:organization:20459490\",\n    \"serviceRelationships\": [\n      {\n        \"identifier\": \"urn:li:userGeneratedContent\",\n        \"relationshipType\": \"OWNER\"\n      }\n    ]\n  }\n}\n",
        "options": {}
      },
      "id": "46d39a73-04d5-46a5-a788-eea049263be7",
      "name": "registerUpload3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        8992,
        3104
      ]
    },
    {
      "parameters": {
        "url": "={{ $('Image2').item.json.image }}",
        "options": {}
      },
      "id": "1c28f727-a2ae-42be-8ed1-87c20fd4f5ae",
      "name": "HTTP GET img3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        9280,
        3104
      ]
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "={{ $json.value.uploadMechanism['com.linkedin.digitalmedia.uploading.MediaUploadHttpRequest'].uploadUrl }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "image/png"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {}
      },
      "id": "4aa29b7f-8d3f-49b5-876b-f8725fa6c8f0",
      "name": "PUT Image3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        9600,
        3104
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.linkedin.com/v2/ugcPosts",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "linkedInOAuth2Api",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"author\": \"urn:li:organization:20459490\",\n    \"lifecycleState\": \"PUBLISHED\",\n    \"specificContent\": {\n        \"com.linkedin.ugc.ShareContent\": {\n            \"shareCommentary\": {\n                \"text\": \"{{ $('convert content3').item.json.extracted_data.post.content }}\"\n            },\n            \"shareMediaCategory\": \"IMAGE\",\n            \"media\": [\n                {\n                    \"status\": \"READY\",\n          \"media\": \"{{ $('registerUpload3').item.json.value.asset }}\", \n                    \"description\": {\n                        \"text\": \"Printcart Project\"\n                    },\n                    \"title\": {\n                        \"text\": \"We are Printcart\"\n                    }\n                }\n            ]\n        }\n    },\n    \"visibility\": {\n        \"com.linkedin.ugc.MemberNetworkVisibility\": \"PUBLIC\"\n    }\n}\n",
        "options": {}
      },
      "id": "a3274468-d337-4ce1-a389-532e9f927c97",
      "name": "Print Company page2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        9888,
        3104
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.linkedin.com/v2/socialActions/{{ $('Print Company page2').first().json.id }}/comments ",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "linkedInOAuth2Api",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  actor: \"urn:li:organization:20459490\",\n  message: {\n    text: $json.comment_content\n  }\n}\n",
        "options": {}
      },
      "id": "6f0d4ffe-828b-4db8-ac32-fbd7301eabdd",
      "name": "Coment6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        10320,
        3104
      ]
    },
    {
      "parameters": {
        "text": "s",
        "additionalFields": {
          "attachments": ""
        }
      },
      "id": "a83f07ec-f70d-4c2a-97b4-06f69a93817f",
      "name": "X3",
      "type": "n8n-nodes-base.twitter",
      "typeVersion": 2,
      "position": [
        9072,
        3680
      ]
    },
    {
      "parameters": {
        "jsCode": "const results = [];\n\nfor (const item of $input.all()) {\n  const json = item.json;\n  let imageUrl = null;\n\n  if (json.image_url) {\n    // Placid\n    imageUrl = json.image_url;\n  } else if (json.imageUrl) {\n    // DynaPictures\n    imageUrl = json.imageUrl;\n  } else if (json.url) {\n    // HTMLCSStoImage\n    imageUrl = json.url;\n  }\n\n  if (imageUrl) {\n    results.push({ image: imageUrl });\n  }\n}\n\nreturn results;\n"
      },
      "id": "58f9c893-df2f-473f-9974-e7195770af89",
      "name": "Image2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8624,
        3472
      ]
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  try {\n    // Kiểm tra và xử lý trường content nếu tồn tại\n    if (item.json.content) {\n      item.json.content = item.json.content.replace(/\\n/g, '\\\\n');\n    } else {\n      throw new Error(\"No valid content field found to process.\");\n    }\n  } catch (error) {\n    // Ghi lỗi vào một trường phù hợp nếu xử lý thất bại\n    item.json.error = \"Error processing content: \" + error.message;\n  }\n}\n\n// Trả về danh sách các item đã được cập nhật\nreturn $input.all();"
      },
      "id": "fdc31234-34a9-4786-b6b7-6d71363fac11",
      "name": "convert content3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        9424,
        2448
      ]
    },
    {
      "parameters": {
        "jsCode": "const sourceItems = $items(\"convert content3\", 0); // Lấy từ node kia\nconst output = [];\n\nfor (let i = 0; i < sourceItems.length; i++) {\n  const comments = sourceItems[i]?.json?.comment_content ?? null;\n\n  // Kiểm tra nếu comments tồn tại và là mảng\n  if (comments && Array.isArray(comments)) {\n    comments.forEach((comment, index) => {\n      output.push({\n        json: {\n          comment_content: `${index}: ${comment}`\n        }\n      });\n    });\n  }\n}\n\nreturn output;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        10112,
        3104
      ],
      "id": "6d08f271-8fba-44e2-b3bd-850401adb4b3",
      "name": "Lấy ra 6 coment"
    },
    {
      "parameters": {
        "jsCode": "const sourceItems = $items(\"convert content3\", 0); // Lấy từ node kia\nconst output = [];\n\nfor (let i = 0; i < sourceItems.length; i++) {\n  const comments = sourceItems[i]?.json?.comment_content ?? null;\n\n  // Kiểm tra nếu comments tồn tại và là mảng\n  if (comments && Array.isArray(comments)) {\n    comments.forEach((comment, index) => {\n      output.push({\n        json: {\n          comment_content: `${index}: ${comment}`\n        }\n      });\n    });\n  }\n}\n\nreturn output;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        9232,
        3440
      ],
      "id": "f509e962-03a2-4cc6-984d-b034517f013d",
      "name": "Lấy ra 6 coment1"
    },
    {
      "parameters": {
        "url": "=https://api.pexels.com/v1/search?query=t-shirt printing&per_page=1&page={{ Math.floor(Math.random() * 50) + 1 }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": " yKcmrC8LfgbNcXdf8yYlrsaL9cMZOadZfkSUCVsWikUYuBNc27t3jAJ6"
            }
          ]
        },
        "options": {}
      },
      "id": "56ca1cc7-67ef-403d-bce0-7f6da53f990d",
      "name": "banner ngẫu nhiên2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4688,
        3584
      ]
    },
    {
      "parameters": {
        "url": "={{ $json.polling_url }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer placid-4nwkicuohm9sx5aq-dbtm9ajtyd64xenv"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "9da1d2ef-75f9-4832-a9a6-b910f958fc06",
      "name": "Get placid",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4080,
        3584
      ]
    },
    {
      "parameters": {
        "amount": 15
      },
      "id": "ee098baf-b5ff-464b-a059-2ea215117856",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -4240,
        3584
      ],
      "webhookId": "31ab450b-7648-4489-8324-4126fa3580d2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.placid.app/api/rest/images",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer placid-4nwkicuohm9sx5aq-dbtm9ajtyd64xenv"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"template_uuid\": \"lxsp5dtujmkgj\",\n  \"layers\": {\n    \"title\": {\n      \"text\": \"{{ $('convert content').item.json.extracted_data.post.hook }}\"\n    },\n    \"glow\": {\n      \"image\": \"{{ $json.photos[0].src.original }}\",\n      \"effects\": {\n        \"blur\": {\n          \"radius\": 25\n        }\n      }\n    }\n  }\n}\n",
        "options": {}
      },
      "id": "3c13aa0a-ff92-40c2-aeec-f75f5007719d",
      "name": "placid banner",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4448,
        3584
      ]
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  try {\n    if (item.json.output && typeof item.json.output === 'string') {\n      let messageContent = item.json.output;\n\n      // Loại bỏ các ký tự định dạng như #, * và làm sạch dấu phẩy thừa\n      messageContent = messageContent.replace(/[#*]+/g, '').replace(/,\\s*$/gm, '');\n      // Loại bỏ mọi dấu ngoặc kép từ messageContent trước khi xử lý\n      messageContent = messageContent.replace(/\"/g, '');\n\n      function extractContent(data) {\n        // Regex được điều chỉnh để chỉ trích xuất ID, Pain_Point, Hook, Content, Comment_Content, CTA\n        const regex = /ID:\\s*(\\d+)\\s*\\n(?:Pain_Point:\\s*(.*?)(?:\\s*\\n|\\s*,))?Hook:\\s*(.*?)(?:\\s*\\n|\\s*,)(?:Image_URL:\\s*(.*?)(?:\\s*\\n|\\s*,))?\\s*Content:\\s*([\\s\\S]*?)\\s*Comment_Content:\\s*([\\s\\S]*?)\\s*CTA:\\s*([\\s\\S]*?)(?:\\n---|$)/gi;\n\n        const results = {};\n        let match;\n        while ((match = regex.exec(data)) !== null) {\n          const platformKey = \"post\"; // Key mặc định cho bài đăng duy nhất\n\n          results[platformKey] = {\n            id: match[1].trim(),\n            pain_point: match[2] ? match[2].trim() : \"Not specified\", // Nếu không có Pain_Point, ghi \"Not specified\"\n            hook: match[3].trim(),\n            content: match[5].trim(),\n            comment_content: match[6].trim(),\n            cta: match[7].trim()\n          };\n        }\n\n        return results;\n      }\n\n      let extractedData = extractContent(messageContent);\n\n      if (Object.keys(extractedData).length === 0) {\n        throw new Error(\"No valid data extracted from input.\");\n      }\n\n      item.json = {\n        ...item.json,\n        extracted_data: extractedData\n      };\n    } else {\n      item.json = { ...item.json, error: \"No valid output found in input.\" };\n    }\n  } catch (error) {\n    item.json = {\n      ...item.json,\n      error: \"Error processing content\",\n      details: error.message\n    };\n  }\n}\n\nreturn $input.all();"
      },
      "id": "308d4e8b-7ffe-4b38-bc20-3d8636f8345f",
      "name": "convert old",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3200,
        2400
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items\nfor (const item of $input.all()) {\n  try {\n    \n    // Kiểm tra và xử lý extracted_data.post.content nếu tồn tại\n    if (item.json.extracted_data && item.json.extracted_data.post && item.json.extracted_data.post.content) {\n      item.json.extracted_data.post.content = item.json.extracted_data.post.content.replace(/\\n/g, '\\\\n');\n    }\n    \n    // Luôn xử lý output để đảm bảo tính nhất quán\n    if (item.json.output) {\n      item.json.output = item.json.output.replace(/\\n/g, '\\\\n');\n    }\n    \n    // Nếu không có cả output lẫn extracted_data.post.content, ném lỗi\n    if (!item.json.output && !(item.json.extracted_data && item.json.extracted_data.post && item.json.extracted_data.post.content)) {\n      throw new Error(\"No valid content field found to process.\");\n    }\n  } catch (error) {\n    // Ghi lỗi vào một trường phù hợp nếu xử lý thất bại\n    item.json.error = \"Error processing content: \" + error.message;\n  }\n}\n\n// Trả về danh sách các item đã được cập nhật\nreturn $input.all();"
      },
      "id": "68f68b41-7fec-4a39-94dc-fc7887a7cc30",
      "name": "convert content1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1600,
        3408
      ]
    },
    {
      "parameters": {
        "jsCode": "const result = [];\n\nfor (const item of $input.all()) {\n  try {\n    const post = item.json?.extracted_data?.post;\n    const rawOutput = item.json.output;\n\n    if (rawOutput && typeof rawOutput === 'string') {\n      // ✅ Bắt được Slide: xuống dòng\n      const slideSectionMatch = rawOutput.match(/\\*\\*Slide[:：]?\\*\\*\\s*\\n([\\s\\S]*)/i);\n\n      if (slideSectionMatch) {\n        const slideSection = slideSectionMatch[1].trim();\n        const lines = slideSection.split('\\n').map(line => line.trim()).filter(Boolean);\n\n        const slides = [];\n        let currentSlide = null;\n        let isDescribeBlock = false;\n\n        for (const line of lines) {\n          // CASE 1: - **subject:**\n          if (line.toLowerCase().startsWith('- **subject:**')) {\n            if (currentSlide && currentSlide.subject && currentSlide.describe.length > 0) {\n              slides.push(currentSlide);\n            }\n            currentSlide = {\n              subject: line.replace(/- \\*\\*subject:\\*\\*/i, '').replace(/\"/g, '').trim(),\n              describe: []\n            };\n            isDescribeBlock = true;\n          }\n\n          // CASE 2: **subject:**\n          else if (line.toLowerCase().startsWith('**subject:**')) {\n            if (currentSlide && currentSlide.subject && currentSlide.describe.length > 0) {\n              slides.push(currentSlide);\n            }\n            currentSlide = {\n              subject: line.replace(/\\*\\*subject:\\*\\*/i, '').replace(/\"/g, '').trim(),\n              describe: []\n            };\n            isDescribeBlock = true;\n          }\n\n          // CASE 3: - subject:\n          else if (line.toLowerCase().startsWith('- subject:')) {\n            if (currentSlide && currentSlide.subject && currentSlide.describe.length > 0) {\n              slides.push(currentSlide);\n            }\n            currentSlide = {\n              subject: line.replace(/- subject:/i, '').replace(/\"/g, '').trim(),\n              describe: []\n            };\n            isDescribeBlock = true;\n          }\n\n          // CASE 4: subject:\n          else if (line.toLowerCase().startsWith('subject:')) {\n            if (currentSlide && currentSlide.subject && currentSlide.describe.length > 0) {\n              slides.push(currentSlide);\n            }\n            currentSlide = {\n              subject: line.replace(/subject:/i, '').replace(/\"/g, '').trim(),\n              describe: []\n            };\n            isDescribeBlock = true;\n          }\n\n          // CASE 5: **Step X. Title**\n          else if (/^\\*\\*Step\\s*\\d+\\./i.test(line)) {\n            if (currentSlide && currentSlide.subject && currentSlide.describe.length > 0) {\n              slides.push(currentSlide);\n            }\n            currentSlide = {\n              subject: line.replace(/\\*\\*/g, '').replace(/\"/g, '').trim(),\n              describe: []\n            };\n            isDescribeBlock = true;\n          }\n\n          // CASE 6: - **Step X. Title:**\n          else if (/^- \\*\\*Step\\s*\\d+\\..*?\\*\\*:/.test(line)) {\n            if (currentSlide && currentSlide.subject && currentSlide.describe.length > 0) {\n              slides.push(currentSlide);\n            }\n            const stepTitle = line.replace(/^- \\*\\*(Step\\s*\\d+\\..*?)\\*\\*:/, '$1').replace(/\"/g, '').trim();\n            currentSlide = {\n              subject: stepTitle,\n              describe: []\n            };\n            isDescribeBlock = true;\n          }\n\n          // CASE 7: mô tả bắt đầu bằng - hoặc .\n          else if (isDescribeBlock && (line.startsWith('-') || line.startsWith('.'))) {\n            const cleanLine = line.replace(/^[-•.]?\\s*/, '').replace(/\"/g, '').trim();\n            currentSlide?.describe.push(cleanLine);\n          }\n            \n          else if (\n            (line.startsWith('.') || line.startsWith('-') || line.startsWith('•')) &&\n            currentSlide\n          ) {\n            const cleanLine = line.replace(/^[-•.]?\\s*/, '').trim();\n            currentSlide.describe.push(cleanLine);\n          }\n\n          // CASE 8: bắt đầu mô tả\n          else if (line.toLowerCase().startsWith('**describe:**') || line.toLowerCase().startsWith('- describe:')) {\n            isDescribeBlock = true;\n          }\n        }\n\n        // Push slide cuối cùng\n        if (currentSlide && currentSlide.subject && currentSlide.describe.length > 0) {\n          slides.push(currentSlide);\n        }\n\n        // Output từng slide\n        for (const slide of slides) {\n          result.push({\n            json: {\n              subject: slide.subject,\n              describe: slide.describe.join('\\\\n')\n            }\n          });\n        }\n\n        // Gán vào post nếu cần\n        if (post) item.json.extracted_data.post.slide = slides;\n\n        // Chuẩn hóa content và output\n        if (typeof post?.content === 'string') {\n          item.json.extracted_data.post.content = post.content.replace(/\\n/g, '\\\\n');\n        }\n        if (typeof item.json.output === 'string') {\n          item.json.output = item.json.output.replace(/\\n/g, '\\\\n');\n        }\n\n      } else {\n        result.push({\n          json: { error: \"No slide section found in output.\" }\n        });\n      }\n\n    } else {\n      result.push({\n        json: { error: \"Invalid or missing output string.\" }\n      });\n    }\n\n  } catch (error) {\n    result.push({\n      json: {\n        error: \"Error processing slide content\",\n        details: error.message\n      }\n    });\n  }\n}\n\nreturn result;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1584,
        3760
      ],
      "id": "6d00bb00-1038-4730-9e79-7bdda225ce10",
      "name": "slide"
    },
    {
      "parameters": {
        "url": "=https://api.pexels.com/v1/search?query=nature landscape background\n&per_page=1&page={{ Math.floor(Math.random() * 50) + 1 }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": " yKcmrC8LfgbNcXdf8yYlrsaL9cMZOadZfkSUCVsWikUYuBNc27t3jAJ6"
            }
          ]
        },
        "options": {}
      },
      "id": "022d2bf1-df63-444f-8565-6e37db00ed4c",
      "name": "banner ngẫu nhiên1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1328,
        3408
      ]
    },
    {
      "parameters": {
        "url": "={{ $json.polling_url }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer placid-4nwkicuohm9sx5aq-dbtm9ajtyd64xenv"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "3f99e68a-0a9f-4753-86ee-34566156623e",
      "name": "Get placid3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -640,
        3408
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.placid.app/api/rest/images",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer placid-4nwkicuohm9sx5aq-dbtm9ajtyd64xenv"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"template_uuid\": \"06kurqzyqq8o0\",\n  \"layers\": {\n    \"title\": {\n      \"text\": \"{{ $('convert ouput1').item.json.extracted_data.post.hook }}\",\n      \"style\": {\n        \"fontSize\": 85\n      }\n    },\n    \"glow\": {\n      \"image\": \"{{ $json.photos[0].src.original }}\",\n      \"effects\": {\n        \"blur\": {\n          \"radius\": 25\n        }\n      }\n    }\n  }\n}\n",
        "options": {}
      },
      "id": "511a4511-dce6-43a4-b3be-98610e11a9c5",
      "name": "placid banner3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1056,
        3408
      ]
    },
    {
      "parameters": {
        "amount": 10
      },
      "id": "aa59bce4-04d2-40cf-929d-f997aa915fc7",
      "name": "Wait3",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -848,
        3408
      ],
      "webhookId": "31ab450b-7648-4489-8324-4126fa3580d2"
    },
    {
      "parameters": {
        "amount": 20
      },
      "id": "f7854907-0853-4ba5-8915-1a76189d5e7e",
      "name": "Wait12",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -816,
        3760
      ],
      "webhookId": "31ab450b-7648-4489-8324-4126fa3580d2"
    },
    {
      "parameters": {
        "url": "=https://api.pexels.com/v1/search?query=minimal aesthetic background&per_page=1&page={{ Math.floor(Math.random() * 50) + 1 }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": " yKcmrC8LfgbNcXdf8yYlrsaL9cMZOadZfkSUCVsWikUYuBNc27t3jAJ6"
            }
          ]
        },
        "options": {}
      },
      "id": "3e5d91d1-b923-4688-8039-7b17fa954a55",
      "name": "banner ngẫu nhiên12",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1344,
        3760
      ]
    },
    {
      "parameters": {
        "url": "={{ $json.polling_url }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer placid-4nwkicuohm9sx5aq-dbtm9ajtyd64xenv"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "1421525e-3824-461a-9f01-ca1ddf41cd2b",
      "name": "Get placid12",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -608,
        3760
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 8
            }
          ]
        }
      },
      "id": "0c636326-cc21-4dad-ac79-72e73b81e2a3",
      "name": "Schedule Trigger3",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        3104,
        3120
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://upload.twitter.com/1.1/media/upload.json",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "authorization",
              "value": "Bearer AAAAAAAAAAAAAAAAAAAAANRILgAAAAAAnNwIzUejRCOuH5E6I8xnZz4puTs%3D1Zv7ttfk8LF81IUq16cHjhLTvJu4FA33AGWWjCpTnA"
            },
            {
              "name": "cookie",
              "value": "auth_token=61fb8229915fbc3e3a4ceb9918c71998fab9f0ce;ct0=702daa7aeb7c0b506af5686fa1e4181e26946257211667e5178a75de810281c68981809e8b0096a827204737674db1c8ad8b05acc5e38bce630a6c4a41ff34e8f02bbdd3beee1fb3b036d2d3eee488e0;guest_id=v1%3A174238164834105678;guest_id_ads=v1%3A174238164834105678;guest_id_marketing=v1%3A174238164834105678;personalization_id=\"v1_OAdXRu3EvRnhOYGuHger8A==\";"
            },
            {
              "name": "x-csrf-token",
              "value": "702daa7aeb7c0b506af5686fa1e4181e26946257211667e5178a75de810281c68981809e8b0096a827204737674db1c8ad8b05acc5e38bce630a6c4a41ff34e8f02bbdd3beee1fb3b036d2d3eee488e0"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "media",
              "inputDataFieldName": "=data"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4192,
        4464
      ],
      "id": "8f44c435-caad-474b-ae3d-84befe4298cf",
      "name": "Media File"
    },
    {
      "parameters": {
        "url": "={{ $('Post Inforgraphich2').item.json[\"Thumbnail       \"] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3984,
        4464
      ],
      "id": "21cc7165-ec5e-48e6-a53c-db2008f6cf7d",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://twitter.com/i/api/graphql/IqgafZiJBo_q-enlpt-H2w/CreateTweet",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "authorization",
              "value": "Bearer AAAAAAAAAAAAAAAAAAAAANRILgAAAAAAnNwIzUejRCOuH5E6I8xnZz4puTs%3D1Zv7ttfk8LF81IUq16cHjhLTvJu4FA33AGWWjCpTnA"
            },
            {
              "name": "x-csrf-token",
              "value": "702daa7aeb7c0b506af5686fa1e4181e26946257211667e5178a75de810281c68981809e8b0096a827204737674db1c8ad8b05acc5e38bce630a6c4a41ff34e8f02bbdd3beee1fb3b036d2d3eee488e0"
            },
            {
              "name": "cookie",
              "value": "auth_token=61fb8229915fbc3e3a4ceb9918c71998fab9f0ce;ct0=702daa7aeb7c0b506af5686fa1e4181e26946257211667e5178a75de810281c68981809e8b0096a827204737674db1c8ad8b05acc5e38bce630a6c4a41ff34e8f02bbdd3beee1fb3b036d2d3eee488e0;__cf_bm=MgbbBKim3hQErhottIxvYlLoPILfwZz5nl9vYXbuiNg-1742977279-1.0.1.1-38fi7lPba3i9dcd6M3AK2JK8ahwprr7Wzab8oCTezSSUbXdo38vW_T_XSpvw1N2R_dIMqraHrkftfOy9VBmXJUeXpoan32c1XwoO219CtT4;guest_id=v1%3A174238164834105678;guest_id_ads=v1%3A174238164834105678;guest_id_marketing=v1%3A174238164834105678;lang=en;personalization_id=\"v1_OAdXRu3EvRnhOYGuHger8A==\";"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"variables\": {\n    \"tweet_text\": \"Reply Image\",\n    \"reply\": {\n      \"in_reply_to_tweet_id\": \"1645340915010260995\"\n    },\n    \"media\": {\n      \"media_entities\": [\n        {\n          \"media_id\": \"{{ $json.media_id_string }}\"\n        }\n      ],\n      \"possibly_sensitive\": false\n    },\n    \"semantic_annotation_ids\": []\n  },\n  \"features\": {\n    \"tweetypie_unmention_optimization_enabled\": true,\n    \"responsive_web_edit_tweet_api_enabled\": true,\n    \"responsive_web_uc_gql_enabled\": false,\n    \"rweb_video_timestamps_enabled\": true,\n    \"responsive_web_jetfuel_frame\": true,\n    \"responsive_web_grok_analysis_button_from_backend\": true,\n    \"tweet_with_visibility_results_prefer_gql_limited_actions_policy_enabled\": true,\n    \"graphql_is_translatable_rweb_tweet_is_translatable_enabled\": true,\n    \"responsive_web_graphql_exclude_directive_enabled\": true,\n    \"verified_phone_label_enabled\": true,\n    \"responsive_web_grok_share_attachment_enabled\": true,\n    \"responsive_web_grok_analyze_post_followups_enabled\": true,\n    \"premium_content_api_read_enabled\": true,\n    \"view_counts_everywhere_api_enabled\": true,\n    \"standardized_nudges_misinfo\": true,\n    \"tweet_awards_web_tipping_enabled\": true,\n    \"longform_notetweets_rich_text_read_enabled\": true,\n    \"responsive_web_enhance_cards_enabled\": true,\n    \"articles_preview_enabled\": true,\n    \"freedom_of_speech_not_reach_fetch_enabled\": true,\n    \"communities_web_enable_tweet_community_results_fetch\": true,\n    \"creator_subscriptions_quote_tweet_preview_enabled\": true,\n    \"responsive_web_graphql_skip_user_profile_image_extensions_enabled\": true,\n    \"responsive_web_grok_image_annotation_enabled\": true,\n    \"responsive_web_grok_analyze_button_fetch_trends_enabled\": true,\n    \"longform_notetweets_inline_media_enabled\": true,\n    \"responsive_web_twitter_article_tweet_consumption_enabled\": true,\n    \"rweb_tipjar_consumption_enabled\": true,\n    \"longform_notetweets_consumption_enabled\": true,\n    \"c9s_tweet_anatomy_moderator_badge_enabled\": true,\n    \"profile_label_improvements_pcf_label_in_post_enabled\": true,\n    \"responsive_web_graphql_timeline_navigation_enabled\": true\n  },\n  \"queryId\": \"IqgafZiJBo_q-enlpt-H2w\"\n}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4640,
        4464
      ],
      "id": "5fe26106-6c2a-4b43-9382-bbbf4bc7ecc4",
      "name": "Reply Image"
    },
    {
      "parameters": {
        "text": "reply media",
        "additionalFields": {
          "attachments": "={{ $json.media_id_string }}"
        }
      },
      "id": "cbc6f45e-b7f8-4e11-bc7e-585ece5172e6",
      "name": "X2",
      "type": "n8n-nodes-base.twitter",
      "typeVersion": 2,
      "position": [
        4400,
        4464
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.linkedin.com/v2/assets?action=registerUpload",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "linkedInOAuth2Api",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"registerUploadRequest\": {\n    \"recipes\": [\n      \"urn:li:digitalmediaRecipe:feedshare-image\"\n    ],\n    \"owner\": \"urn:li:person:EfFwUv9vKhR\",\n    \"serviceRelationships\": [\n      {\n        \"identifier\": \"urn:li:userGeneratedContent\",\n        \"relationshipType\": \"OWNER\"\n      }\n    ]\n  }\n}\n",
        "options": {}
      },
      "id": "4a455669-b34c-4223-b03a-85828832b7e7",
      "name": "registerUpload4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3920,
        3888
      ]
    },
    {
      "parameters": {
        "url": "={{ $('Post Inforgraphich2').item.json[\"Thumbnail       \"] }}",
        "options": {}
      },
      "id": "806f3957-2858-438d-b750-65611b87164b",
      "name": "HTTP GET img4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4224,
        3888
      ]
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "={{ $json.value.uploadMechanism['com.linkedin.digitalmedia.uploading.MediaUploadHttpRequest'].uploadUrl }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "image/png"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {}
      },
      "id": "909715bf-c6e4-4961-a3f1-f803eec6e321",
      "name": "PUT Image4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4544,
        3888
      ]
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  try {\n    if (item.json.output && typeof item.json.output === 'string') {\n      let messageContent = item.json.output;\n\n      // Loại bỏ các ký tự định dạng như #, * và làm sạch dấu phẩy thừa\n      messageContent = messageContent\n        .replace(/[#*]+/g, '') // Xóa #, *\n        .replace(/,\\s*$/gm, '') // Xóa dấu phẩy thừa ở cuối dòng\n        .replace(/\"/g, '') // Xóa dấu ngoặc kép\n        .trim(); // Xóa khoảng trắng thừa đầu/cuối\n\n      function extractContent(data) {\n        const results = {};\n        const platformKey = \"post\";\n\n        // Các regex riêng lẻ cho từng trường, linh hoạt hơn\n        const idRegex = /ID:\\s*([A-Za-z0-9_]+)/i;\n        const painPointRegex = /Pain_Point:\\s*([\\s\\S]*?)(?=\\n(?:Hook|Image_URL|Content|Slide|Comment_Content|CTA|Status|$))/i;\n        const hookRegex = /Hook:\\s*([\\s\\S]*?)(?=\\n(?:Image_URL|Content|Slide|Comment_Content|CTA|Status|$))/i;\n        const imageUrlRegex = /Image_URL:\\s*([^\\s]+)(?=\\n|$)/i;\n        const contentRegex = /Content:\\s*([\\s\\S]*?)(?=\\n(?:Slide|Comment_Content|CTA|Status|$))/i;\n        const slideRegex = /Slide:\\s*([\\s\\S]*?)(?=\\n(?:Comment_Content|CTA|Status|$))/i;\n        const commentContentRegex = /Comment_Content:\\s*([\\s\\S]*?)(?=\\n(?:CTA|Status|$))/i;\n        const ctaRegex = /CTA:\\s*([\\s\\S]*?)(?=\\n(?:Status|$))/i;\n        const statusRegex = /Status:\\s*([\\s\\S]*?)$/i;\n\n        // Trích xuất dữ liệu với giá trị mặc định\n        let slideContent = (data.match(slideRegex) || [, \"\"])[1]?.trim() || \"\";\n        \n        // Loại bỏ \"Slide [số]:\" từ mỗi dòng trong slideContent\n        if (slideContent) {\n          slideContent = slideContent\n            .split('\\n')\n            .map(line => line.replace(/Slide\\s*\\d+:\\s*/, '').trim()) // Xóa \"Slide [số]:\"\n            .filter(line => line !== '') // Loại bỏ dòng trống\n            .join('\\n'); // Ghép lại thành chuỗi\n        }\n\n        results[platformKey] = {\n          id: (data.match(idRegex) || [, \"Not specified\"])[1].trim(),\n          pain_point: (data.match(painPointRegex) || [, \"Not specified\"])[1]?.trim() || \"Not specified\",\n          hook: (data.match(hookRegex) || [, \"Not specified\"])[1]?.trim() || \"Not specified\",\n          image_url: (data.match(imageUrlRegex) || [, \"Not specified\"])[1]?.trim() || \"Not specified\",\n          content: (data.match(contentRegex) || [, \"Not specified\"])[1]?.trim() || \"Not specified\",\n          slide: slideContent,\n          comment_content: (data.match(commentContentRegex) || [, \"\"])[1]?.trim() || \"\",\n          cta: (data.match(ctaRegex) || [, \"\"])[1]?.trim() || \"\",\n          status: (data.match(statusRegex) || [, \"Not specified\"])[1]?.trim() || \"Not specified\"\n        };\n\n        return results;\n      }\n\n      const extractedData = extractContent(messageContent);\n\n      // Kiểm tra xem có dữ liệu hợp lệ hay không (ít nhất cần ID)\n      if (Object.keys(extractedData).length === 0 || extractedData.post.id === \"Not specified\") {\n        throw new Error(\"No valid ID extracted from input.\");\n      }\n\n      item.json = {\n        ...item.json,\n        extracted_data: extractedData\n      };\n    } else {\n      item.json = { ...item.json, error: \"No valid output found in input.\" };\n    }\n  } catch (error) {\n    item.json = {\n      ...item.json,\n      error: \"Error processing content\",\n      details: error.message\n    };\n  }\n}\n\nreturn $input.all();"
      },
      "id": "86872382-56b2-40d5-a391-041710ecf290",
      "name": "convert ouput2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -208,
        672
      ]
    },
    {
      "parameters": {
        "jsCode": "// Tạo mảng mới để chứa các item từ slide\nconst result = [];\n\nfor (const item of $input.all()) {\n  try {\n    // Kiểm tra xem extracted_data.post.slide có tồn tại và là chuỗi không\n    if (\n      item.json.extracted_data &&\n      item.json.extracted_data.post &&\n      item.json.extracted_data.post.slide &&\n      typeof item.json.extracted_data.post.slide === 'string'\n    ) {\n      // Lấy nội dung slide\n      const slideContent = item.json.extracted_data.post.slide;\n\n      // Chia nội dung slide thành từng dòng\n      const lines = slideContent.split('\\n').filter(line => line.trim() !== '');\n\n      // Biến tạm để lưu trữ slide hiện tại\n      let currentSlide = null;\n      let currentDescribe = [];\n\n      // Duyệt qua từng dòng để tách subject và describe\n      for (const line of lines) {\n        if (line.startsWith('subject:')) {\n          // Nếu gặp subject mới, lưu slide trước đó (nếu có) và tạo slide mới\n          if (currentSlide) {\n            // Thay thế \\n bằng \\\\n trong describe trước khi lưu\n            const formattedDescribe = currentDescribe.join('\\n').replace(/\\n/g, '\\\\n');\n            result.push({\n              json: {\n                subject: currentSlide,\n                describe: formattedDescribe\n              }\n            });\n          }\n          // Lấy subject mới và reset describe\n          currentSlide = line.replace('subject:', '').trim();\n          currentDescribe = [];\n        } else if (line.startsWith('describe:')) {\n          // Bỏ từ \"describe:\" và bắt đầu thu thập các dòng mô tả\n          const describeLine = line.replace('describe:', '').trim();\n          if (describeLine) {\n            currentDescribe.push(describeLine);\n          }\n        } else {\n          // Các dòng tiếp theo là phần của describe\n          currentDescribe.push(line.trim());\n        }\n      }\n\n      // Đừng quên lưu slide cuối cùng\n      if (currentSlide) {\n        // Thay thế \\n bằng \\\\n trong describe trước khi lưu\n        const formattedDescribe = currentDescribe.join('\\n').replace(/\\n/g, '\\\\n');\n        result.push({\n          json: {\n            subject: currentSlide,\n            describe: formattedDescribe\n          }\n        });\n      }\n\n      // Kiểm tra và xử lý extracted_data.post.content nếu tồn tại\n      if (item.json.extracted_data && item.json.extracted_data.post && item.json.extracted_data.post.content) {\n        item.json.extracted_data.post.content = item.json.extracted_data.post.content.replace(/\\n/g, '\\\\n');\n      }\n\n      // Luôn xử lý output để đảm bảo tính nhất quán\n      if (item.json.output) {\n        item.json.output = item.json.output.replace(/\\n/g, '\\\\n');\n      }\n    } else {\n      // Nếu không có slide, thêm item với lỗi\n      result.push({\n        json: {\n          error: \"No valid slide content found in extracted_data.\"\n        }\n      });\n    }\n  } catch (error) {\n    // Xử lý lỗi nếu có\n    result.push({\n      json: {\n        error: \"Error processing slide content\",\n        details: error.message\n      }\n    });\n  }\n}\n\n// Trả về mảng kết quả\nreturn result;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        192,
        672
      ],
      "id": "f865550f-2af4-400d-b4ec-195d4e53b6c3",
      "name": "slide1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        448,
        672
      ],
      "id": "785c1b49-f904-4e27-aebd-bf4a4bbc3b73",
      "name": "Loop Over Items5"
    },
    {
      "parameters": {
        "amount": 10
      },
      "id": "faaa8547-c52d-4b0e-9500-b6ff715def65",
      "name": "Wait13",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1248,
        688
      ],
      "webhookId": "31ab450b-7648-4489-8324-4126fa3580d2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.placid.app/api/rest/images",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer placid-4nwkicuohm9sx5aq-dbtm9ajtyd64xenv"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"template_uuid\": \"h14ob6cgibdui\",\n  \"layers\": {\n    \"title\": {\n      \"text\": \"{{ $('Loop Over Items5').item.json.subject }}\",\n      \"style\": {\n        \"fontSize\": 80,\n        \"fontFamily\": \"Asap Italic\",\n        \"color\": \"#FFFFFF\"\n      }\n    },\n    \"text\": {\n      \"text\": \"{{ $('Loop Over Items5').item.json.describe }}\",\n      \"style\": {\n        \"fontSize\": 30,\n        \"fontFamily\": \"Asap Italic\",\n        \"color\": \"#FFFFFF\"\n      }\n    },\n    \"glow\": {\n      \"image\": \"{{ $json.photos[0].src.original }}\",\n      \"effects\": {\n        \"blur\": {\n          \"radius\": 25\n        }\n      }\n    }\n  }\n}\n",
        "options": {}
      },
      "id": "4d3870f3-d954-46d7-9b96-d5ced2db46b9",
      "name": "placid banner13",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1008,
        688
      ]
    },
    {
      "parameters": {
        "url": "=https://api.pexels.com/v1/search?query=minimal aesthetic background&per_page=1&page={{ Math.floor(Math.random() * 50) + 1 }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": " yKcmrC8LfgbNcXdf8yYlrsaL9cMZOadZfkSUCVsWikUYuBNc27t3jAJ6"
            }
          ]
        },
        "options": {}
      },
      "id": "3f11a094-a57b-4dfd-8adc-c255eaa0a714",
      "name": "banner ngẫu nhiên",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        752,
        688
      ]
    },
    {
      "parameters": {
        "url": "={{ $json.polling_url }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer placid-4nwkicuohm9sx5aq-dbtm9ajtyd64xenv"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "c7c71e31-7850-4597-b4b0-e34222aa33e0",
      "name": "Get placid13",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1472,
        688
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.placid.app/api/rest/images",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer placid-4nwkicuohm9sx5aq-dbtm9ajtyd64xenv"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"template_uuid\": \"h14ob6cgibdui\",\n  \"layers\": {\n    \"title\": {\n      \"text\": \"{{ $('slide').item.json.subject }}\",\n      \"style\": {\n        \"fontSize\": 80,\n        \"fontFamily\": \"Asap Italic\",\n        \"color\": \"#FFFFFF\"\n      }\n    },\n    \"text\": {\n      \"text\": \"{{ $('slide').item.json.describe }}\",\n      \"style\": {\n        \"fontSize\": 30,\n        \"fontFamily\": \"Asap Italic\",\n        \"color\": \"#FFFFFF\"\n      }\n    },\n    \"glow\": {\n      \"image\": \"{{ $json.photos[0].src.original }}\",\n      \"effects\": {\n        \"blur\": {\n          \"radius\": 25\n        }\n      }\n    }\n  }\n}\n",
        "options": {}
      },
      "id": "1914d9ce-7444-4931-bcb9-a45e27ad8ac3",
      "name": "placid banner12",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1056,
        3760
      ]
    },
    {
      "parameters": {
        "jsCode": "return [\n\n  {\n    \"id\": 60491185,\n    \"type\": \"image\",\n    \"status\": \"finished\",\n    \"image_url\": \"https://s3-placid.s3.eu-central-1.amazonaws.com/production/rest-images/h14ob6cgibdui/rest-fc6818edeb5a21aee901af4232e876a6-guhfaxmv.jpg\",\n    \"transfer_url\": null,\n    \"polling_url\": \"https://api.placid.app/api/rest/images/60491185\",\n    \"passthrough\": null,\n    \"errors\": []\n  },\n  {\n    \"id\": 60491186,\n    \"type\": \"image\",\n    \"status\": \"finished\",\n    \"image_url\": \"https://s3-placid.s3.eu-central-1.amazonaws.com/production/rest-images/h14ob6cgibdui/rest-d16b10fa8dcc54abbd7e6815823b26cb-ubkkkmwx.jpg\",\n    \"transfer_url\": null,\n    \"polling_url\": \"https://api.placid.app/api/rest/images/60491186\",\n    \"passthrough\": null,\n    \"errors\": []\n  },\n  {\n    \"id\": 60491184,\n    \"type\": \"image\",\n    \"status\": \"finished\",\n    \"image_url\": \"https://s3-placid.s3.eu-central-1.amazonaws.com/production/rest-images/h14ob6cgibdui/rest-0ea81f9683cfcc8768aea5b102d127c4-ieevhg0i.jpg\",\n    \"transfer_url\": null,\n    \"polling_url\": \"https://api.placid.app/api/rest/images/60491184\",\n    \"passthrough\": null,\n    \"errors\": []\n  },\n  {\n    \"id\": 60491187,\n    \"type\": \"image\",\n    \"status\": \"finished\",\n    \"image_url\": \"https://s3-placid.s3.eu-central-1.amazonaws.com/production/rest-images/h14ob6cgibdui/rest-16d112752561cf5510c52af401d7c15b-pxxttfiq.jpg\",\n    \"transfer_url\": null,\n    \"polling_url\": \"https://api.placid.app/api/rest/images/60491187\",\n    \"passthrough\": null,\n    \"errors\": []\n  },\n  {\n    \"id\": 60491183,\n    \"type\": \"image\",\n    \"status\": \"finished\",\n    \"image_url\": \"https://s3-placid.s3.eu-central-1.amazonaws.com/production/rest-images/h14ob6cgibdui/rest-6d8b22bcbfb2886d8f1d9d42d085bb4c-sygm4qhc.jpg\",\n    \"transfer_url\": null,\n    \"polling_url\": \"https://api.placid.app/api/rest/images/60491183\",\n    \"passthrough\": null,\n    \"errors\": []\n  }\n\n\n\n];\n"
      },
      "id": "c683559f-9920-4904-ba99-52371125318b",
      "name": "Execute Workflow Trigger2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -16,
        320
      ]
    },
    {
      "parameters": {
        "jsCode": "return [\n\n \n  {\n    \"id\": 60490705,\n    \"type\": \"image\",\n    \"status\": \"finished\",\n    \"image_url\": \"https://s3-placid.s3.eu-central-1.amazonaws.com/production/rest-images/06kurqzyqq8o0/rest-ecb72ba91d16124c9e692275d8be0c82-tusgsfh4.jpg\",\n    \"transfer_url\": null,\n    \"polling_url\": \"https://api.placid.app/api/rest/images/60490705\",\n    \"passthrough\": null,\n    \"errors\": []\n  }\n\n\n\n];\n"
      },
      "id": "35edf713-d358-454c-9749-02be70d10d45",
      "name": "Execute Workflow Trigger3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        0
      ]
    },
    {
      "parameters": {
        "jsCode": "// Lấy toàn bộ image_url từ danh sách input\nconst urls = $input.all().map(item => item.json.image_url);\n\n// Ghép lại thành 1 chuỗi, cách nhau bằng dấu phẩy\nconst joinedUrls = urls.join(', ');\n\n// Tạo output mới có 1 field chứa chuỗi image_url đã gộp\nreturn [{\n  json: {\n    image_urls: joinedUrls\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        720,
        144
      ],
      "id": "2a8c7208-dcc4-42c9-bf8e-f40ad55f7af9",
      "name": "Code1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        448,
        144
      ],
      "id": "342c43b6-1f68-4cf5-adcd-da5383cd2dff",
      "name": "Merge"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.pdf.co/v1/pdf/convert/from/image",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "{\n  \"x-api-key\": \"thanhtung2432004@gmail.com_w2yKWUQ83aDMdCVVugOyE1uZbT8PRDw8mMNbuCQTA3G7cbwHN3sQfgT1SnWM2cHk\", \n  \"Content-Type\": \"application/json\"\n}\n",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"name\": \"output-from-placid.pdf\",\n  \"url\": \"{{ $json.image_urls }}\",\n  \"async\": false\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        992,
        144
      ],
      "id": "e4eb9952-8bce-4a10-a0fb-633e09eb3708",
      "name": "Convert to PDF"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -160,
        3520
      ],
      "id": "834fe8e9-6716-4eb5-b112-b414f5faad70",
      "name": "Merge1"
    },
    {
      "parameters": {
        "jsCode": "// Get all image URLs from the input list\nconst urls = $input.all().map(item => item.json.image_url);\n\n// Check if there are any URLs, and then join them with commas, ensuring no leading comma\nconst joinedUrls = urls.length > 0 ? urls.join(', ') : '';\n\n// Output the final JSON object with the concatenated image_url string\nreturn [{\n  json: {\n    image_urls: joinedUrls\n  }\n}];\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        80,
        3520
      ],
      "id": "ddf8dc65-60cc-49f2-8a4a-ea40623f34a2",
      "name": "item img convert to chuỗi"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.pdf.co/v1/pdf/convert/from/image",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "{\n  \"x-api-key\": \"thanhtung2432004@gmail.com_w2yKWUQ83aDMdCVVugOyE1uZbT8PRDw8mMNbuCQTA3G7cbwHN3sQfgT1SnWM2cHk\", \n  \"Content-Type\": \"application/json\"\n}\n",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"name\": \"output-from-placid.pdf\",\n  \"url\": \"{{ $json.image_urls }}\",\n  \"async\": false\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        368,
        3520
      ],
      "id": "3d2ee964-18a1-42db-b5be-e5de08a91e0d",
      "name": "Convert to PDF1"
    },
    {
      "parameters": {
        "url": "={{ $('Convert to PDF1').item.json.url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        944,
        3520
      ],
      "id": "01e33bd8-ab07-41fc-90d0-cbeee07173f2",
      "name": "Get a PDF1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.linkedin.com/rest/documents",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "linkedInOAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "action",
              "value": "initializeUpload"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer AQXfQKW37if5kkVeU9hdkwI3j2Y-KlxpUIq9n_Z_txUPyW6jesmOm15zCESgmGJuqMGujKQai4a4YwujRQ_RtsYlnKxjErXPvy9mbt9sezgrX6iYW0O_Q9aDdWPF1OCAsG13xdUMitVALj1j2lKC3ScfNH5oyEiPjJEUzuccuatUOqPZjKP1A_4gVAdAftaYUchNAThoKlVwAKnzzt6THbQEnv-lAtJJy-WZ0_ersXHVl4CtGCOuV8aDoOTKTIxCXNvZyb6vdZLqp2jSHn2Stsxh59rJJqYU16SmHbAVghwJuv0_3pBqbJg07HMq90B47aPbvhnWTDhvmPVGkkN_Q63UGysYzQ"
            },
            {
              "name": "LinkedIn-Version",
              "value": "202306"
            },
            {
              "name": "X-Restli-Protocol-Version",
              "value": "2.0.0"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"initializeUploadRequest\": {\n    \"owner\": \"urn:li:organization:20459490\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        640,
        3520
      ],
      "id": "741298c6-7233-48ae-ae07-01d84d0a9dac",
      "name": "Upload PDF1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://upload.twitter.com/1.1/media/upload.json",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "authorization",
              "value": "Bearer AAAAAAAAAAAAAAAAAAAAANRILgAAAAAAnNwIzUejRCOuH5E6I8xnZz4puTs%3D1Zv7ttfk8LF81IUq16cHjhLTvJu4FA33AGWWjCpTnA"
            },
            {
              "name": "cookie",
              "value": "auth_token=61fb8229915fbc3e3a4ceb9918c71998fab9f0ce;ct0=702daa7aeb7c0b506af5686fa1e4181e26946257211667e5178a75de810281c68981809e8b0096a827204737674db1c8ad8b05acc5e38bce630a6c4a41ff34e8f02bbdd3beee1fb3b036d2d3eee488e0;guest_id=v1%3A174238164834105678;guest_id_ads=v1%3A174238164834105678;guest_id_marketing=v1%3A174238164834105678;personalization_id=\"v1_OAdXRu3EvRnhOYGuHger8A==\";"
            },
            {
              "name": "x-csrf-token",
              "value": "702daa7aeb7c0b506af5686fa1e4181e26946257211667e5178a75de810281c68981809e8b0096a827204737674db1c8ad8b05acc5e38bce630a6c4a41ff34e8f02bbdd3beee1fb3b036d2d3eee488e0"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "media",
              "inputDataFieldName": "=data"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3360,
        4240
      ],
      "id": "a63bbc4b-bfd8-458e-ad87-420b210cab29",
      "name": "Media File1"
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "={{ $json.value.uploadUrl }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/pdf"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {}
      },
      "id": "98a618b8-e7c2-4d07-af84-4946bbfbe2b0",
      "name": "PUT PDF",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1248,
        3520
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 8
            }
          ]
        }
      },
      "id": "d8c93595-2abe-49f5-ab25-63bf013ae314",
      "name": "Schedule Trigger4",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -5040,
        2688
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "daysInterval": 3,
              "triggerAtHour": 8
            }
          ]
        }
      },
      "id": "24e290d6-1b26-479f-8d24-3c415816ac13",
      "name": "Schedule Trigger5",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1888,
        2432
      ]
    },
    {
      "parameters": {
        "url": "={{ $json.image }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3600,
        4240
      ],
      "id": "576e34cd-e050-42d2-b96f-b42391235e84",
      "name": "GET A IMAGE2"
    },
    {
      "parameters": {
        "text": "={{ $json.output }}",
        "additionalFields": {
          "attachments": "={{ $('Media File1').item.json.media_id_string }}"
        }
      },
      "id": "258298db-5312-4d4d-a9c8-4fea951b911e",
      "name": "X5",
      "type": "n8n-nodes-base.twitter",
      "typeVersion": 2,
      "position": [
        -2704,
        4240
      ]
    },
    {
      "parameters": {
        "model": "=grok-beta",
        "options": {
          "baseURL": "https://api.x.ai/v1"
        }
      },
      "id": "5f70954e-7fe8-468c-8a4a-2a0176a0a12c",
      "name": "OpenAI Chat Model4",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -3216,
        4464
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Dựa trên nội dung content sau:\n\n{{ $('convert ouput').item.json.extracted_data.post.content }}\n\nNội dung này hiện quá dài để đăng trên mạng xã hội X, nơi giới hạn tối đa là 280 ký tự (bao gồm cả khoảng trắng và dấu câu). Hãy tóm tắt nội dung thành một đoạn văn ngắn, hấp dẫn, giữ được ý chính và phong cách phù hợp với bài đăng trên mạng xã hội X.\n\nYêu cầu:\n\nĐộ dài không vượt quá 280 ký tự.\nGiữ giọng điệu vui vẻ, thu hút, và tự nhiên, phù hợp với phong cách giao tiếp trên X.\nĐảm bảo nội dung vẫn truyền tải được thông điệp chính, tạo cảm giác tò mò hoặc kêu gọi hành động (nếu có).\nKhông thêm hashtag hoặc liên kết, trừ khi nội dung gốc có sẵn.",
        "options": {}
      },
      "id": "8b25a6df-f1a2-4ec6-82f9-c92d37642807",
      "name": "Tóm tắt content phù hợp với x",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -3104,
        4240
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.linkedin.com/v2/ugcPosts",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "linkedInOAuth2Api",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"author\": \"urn:li:person:EFrUw9vKhR\",  \n  \"containerEntity\": \"urn:li:group:14620416\",  \n  \"lifecycleState\": \"PUBLISHED\",\n  \"specificContent\": {\n    \"com.linkedin.ugc.ShareContent\": {\n      \"shareCommentary\": {\n        \"text\": \"{{ $('convert content1').first().json.output }}\"\n      },\n      \"shareMediaCategory\": \"IMAGE\",  \n      \"media\": [\n        {\n          \"status\": \"READY\",\n          \"media\": \"{{ $('Get a PDF1').item.json.value.document }}\", \n          \"description\": {\n            \"text\": \"Description of the image\"\n          },\n          \"title\": {\n            \"text\": \"Image Title\"\n          }\n        }\n      ]\n    }\n  },\n  \"visibility\": {\n    \"com.linkedin.ugc.MemberNetworkVisibility\": \"PUBLIC\"\n  }\n}\n",
        "options": {}
      },
      "id": "e93eaa1f-61ab-41b7-920e-1a4e7233478b",
      "name": "Print Commerce Group4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1552,
        3552
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.linkedin.com/v2/assets?action=registerUpload",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "linkedInOAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer AQXfQKW37if5kkVeU9hdkwI3j2Y-KlxpUIq9n_Z_txUPyW6jesmOm15zCESgmGJuqMGujKQai4a4YwujRQ_RtsYlnKxjErXPvy9mbt9sezgrX6iYW0O_Q9aDdWPF1OCAsG13xdUMitVALj1j2lKC3ScfNH5oyEiPjJEUzuccuatUOqPZjKP1A_4gVAdAftaYUchNAThoKlVwAKnzzt6THbQEnv-lAtJJy-WZ0_ersXHVl4CtGCOuV8aDoOTKTIxCXNvZyb6vdZLqp2jSHn2Stsxh59rJJqYU16SmHbAVghwJuv0_3pBqbJg07HMq90B47aPbvhnWTDhvmPVGkkN_Q63UGysYzQ"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"registerUploadRequest\": {\n    \"recipes\": [\n      \"urn:li:digitalmediaRecipe:feedshare-image\"\n    ],\n    \"owner\": \"urn:li:person:EFrUw9vKhR\",\n    \"serviceRelationships\": [\n      {\n        \"identifier\": \"urn:li:userGeneratedContent\",\n        \"relationshipType\": \"OWNER\"\n      }\n    ]\n  }\n}\n",
        "options": {}
      },
      "id": "5149954c-a863-409e-a887-2a808e7f299c",
      "name": "registerUpload6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -3600,
        3712
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.linkedin.com/v2/ugcPosts",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "linkedInOAuth2Api",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"author\": \"urn:li:person:EFrUw9vKhR\",  \n  \"containerEntity\": \"urn:li:group:14620416\",  \n  \"lifecycleState\": \"PUBLISHED\",\n  \"specificContent\": {\n    \"com.linkedin.ugc.ShareContent\": {\n      \"shareCommentary\": {\n        \"text\": \"{{ $('convert content').item.json.extracted_data.post.content }}\"\n      },\n      \"shareMediaCategory\": \"IMAGE\",  \n      \"media\": [\n        {\n          \"status\": \"READY\",\n          \"media\": \"{{ $('registerUpload6').item.json.value.asset }}\", \n          \"description\": {\n            \"text\": \"Description of the image\"\n          },\n          \"title\": {\n            \"text\": \"Image Title\"\n          }\n        }\n      ]\n    }\n  },\n  \"visibility\": {\n    \"com.linkedin.ugc.MemberNetworkVisibility\": \"PUBLIC\"\n  }\n}\n",
        "options": {}
      },
      "id": "50ff274e-8cb9-4c1e-8505-8c2fe66e3e9f",
      "name": "Print Commerce Group7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2640,
        3712
      ]
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "={{ $json.value.uploadMechanism['com.linkedin.digitalmedia.uploading.MediaUploadHttpRequest'].uploadUrl }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "image/png"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {}
      },
      "id": "537ab45f-3655-4d66-86b3-ccc4bf46b059",
      "name": "PUT Image6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -3008,
        3712
      ]
    },
    {
      "parameters": {
        "url": "={{ $('Image').item.json.image }}",
        "options": {}
      },
      "id": "30233ac7-f145-4a11-946c-58f525948b60",
      "name": "HTTP GET img6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -3328,
        3712
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.linkedin.com/v2/ugcPosts",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "linkedInOAuth2Api",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n     \"author\": \"urn:li:person:EFrUw9vKhR\",  \n  \"containerEntity\": \"urn:li:group:14620416\",\n    \"lifecycleState\": \"PUBLISHED\",\n    \"specificContent\": {\n        \"com.linkedin.ugc.ShareContent\": {\n            \"shareCommentary\": {\n                \"text\": \"{{ $('convert content2').item.json.extracted_data.post.content }}\"\n            },\n            \"shareMediaCategory\": \"IMAGE\",\n            \"media\": [\n                {\n                    \"status\": \"READY\",\n          \"media\": \"{{ $('registerUpload4').item.json.value.asset }}\", \n                    \"description\": {\n                        \"text\": \"Cloodo Project\"\n                    },\n                    \"title\": {\n                        \"text\": \"We are Cloodo\"\n                    }\n                }\n            ]\n        }\n    },\n    \"visibility\": {\n        \"com.linkedin.ugc.MemberNetworkVisibility\": \"PUBLIC\"\n    }\n}\n",
        "options": {}
      },
      "id": "26436795-ada2-4cac-8e15-d5a76f986c00",
      "name": "Print Owner Group",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5008,
        3952
      ]
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  const out = item.json.output;\n  if (typeof out === 'string') {\n    item.json.output = out.replaceAll('- **', '**');\n  }\n}\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1808,
        3760
      ],
      "id": "58264ffe-6b0f-4917-a471-dc98c8209e7d",
      "name": "Code3"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "67b7cc81-ddb1-4eb1-b70c-a6338ccdbec8",
      "name": "Loop Over Items4",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -9408,
        1552
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and create a single string combining titles and contents\nconst output = [];\n\nfor (const item of $input.all()) {\n    const newItem = item.json;\n\n    // Tạo chuỗi từ tất cả các cặp tiêu đề - nội dung\n    newItem.combinedString = Object.entries(newItem)\n        .filter(([key, value]) => key !== \"row_number\") // Bỏ qua trường không cần thiết nếu muốn\n        .map(([key, value]) => `${key}: ${value}`)\n        .join(\",\");\n\n    output.push(newItem);\n}\n\nreturn output;\n"
      },
      "id": "f58b4dfa-03a2-454e-9956-2b3496244c6e",
      "name": "Code5",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -9120,
        1568
      ]
    },
    {
      "parameters": {
        "model": "=grok-beta",
        "options": {
          "baseURL": "https://api.x.ai/v1"
        }
      },
      "id": "81de3eed-cd3b-4742-a64b-3d585a04923a",
      "name": "OpenAI Chat Model5",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -8000,
        2112
      ]
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  try {\n    if (item.json.output && typeof item.json.output === \"string\") {\n      let messageContent = item.json.output;\n\n      // 👉 Làm sạch nội dung đầu vào:\n      messageContent = messageContent.replace(/,\\s*$/gm, \"\").replace(/\"/g, \"\");\n\n      // 👉 Cắt bỏ toàn bộ phần nằm trước `**ID:` hoặc `**ID:**`\n      const idStartIndex = messageContent.indexOf(\"**ID:\");\n      if (idStartIndex > -1) {\n        messageContent = messageContent.slice(idStartIndex);\n      }\n\n      // 👉 Danh sách các regex định dạng và ánh xạ tương ứng\n      const regexFormats = [\n        {\n          // ✅ Trường hợp: **ID:** 36\n          regex:\n            /\\*\\*ID:\\*\\*\\s*(\\d+)[\\s\\S]*?\\*\\*Pain[_ ]Point:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*Hook:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*Content:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*Comment[_ ]Content:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*CTA:\\*\\*\\s*([\\s\\S]*?)(?:\\n|$)/i,\n          fields: [\n            \"id\",\n            \"pain_point\",\n            \"hook\",\n            \"content\",\n            \"comment_content\",\n            \"cta\",\n          ],\n        },\n        {\n          // ✅ Trường hợp: **ID: 36** (dấu \":\" nằm trong phần **ID: 36**)\n          regex:\n            /\\*\\*ID:\\s*(\\d+)\\*\\*[\\s\\S]*?\\*\\*Pain[_ ]Point:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*Hook:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*Content:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*Comment[_ ]Content:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*CTA:\\*\\*\\s*([\\s\\S]*?)(?:\\n|$)/i,\n          fields: [\n            \"id\",\n            \"pain_point\",\n            \"hook\",\n            \"content\",\n            \"comment_content\",\n            \"cta\",\n          ],\n        },\n        {\n          // ✅ Trường hợp: Comment_Content đứng trước Hook\n          regex:\n            /\\*\\*ID:\\*\\*\\s*(\\d+)[\\s\\S]*?\\*\\*Pain Point:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*Comment[_ ]Content:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*Hook:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*Content:\\*\\*\\s*([\\s\\S]*?)\\n+\\*\\*CTA:\\*\\*\\s*([\\s\\S]*?)(?:\\n|$)/i,\n          fields: [\n            \"id\",\n            \"pain_point\",\n            \"comment_content\",\n            \"hook\",\n            \"content\",\n            \"cta\",\n          ],\n        },\n        {\n          // ✅ Dạng markdown không đầy đủ - chỉ ID thường\n          regex:\n            /ID:\\s*(\\d+)[\\s\\S]*?Pain Point:\\s*(.*?)\\n+Hook:\\s*(.*?)\\n+Content:\\s*([\\s\\S]*?)\\n+Comment_Content:\\s*([\\s\\S]*?)\\n+CTA:\\s*([\\s\\S]*?)(?:\\n|$)/i,\n          fields: [\n            \"id\",\n            \"pain_point\",\n            \"hook\",\n            \"content\",\n            \"comment_content\",\n            \"cta\",\n          ],\n        }\n      ];\n\n      let extractedData = {};\n      for (const format of regexFormats) {\n        const match = format.regex.exec(messageContent);\n        if (match) {\n          const post = {};\n          format.fields.forEach((field, index) => {\n            post[field] = match[index + 1]?.trim() || \"\";\n          });\n          extractedData[\"post\"] = post;\n          break;\n        }\n      }\n\n      if (!extractedData.post) {\n        throw new Error(\"No valid data extracted from input.\");\n      }\n\n      item.json = {\n        ...item.json,\n        extracted_data: extractedData,\n      };\n    } else {\n      item.json = {\n        ...item.json,\n        error: \"No valid output found in input.\",\n      };\n    }\n  } catch (error) {\n    item.json = {\n      ...item.json,\n      error: \"Error processing content\",\n      details: error.message,\n    };\n  }\n}\n\nreturn $input.all();\n"
      },
      "id": "68a5d70b-b6fb-46f9-a3a1-a5da33947c8d",
      "name": "convert ouput3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -7504,
        2592
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 913231215,
          "mode": "list",
          "cachedResultName": "Profile",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=913231215"
        },
        "options": {}
      },
      "id": "df05607d-f2cd-446e-b479-e960e18d61e4",
      "name": "profile4",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -9968,
        1552
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 920960109,
          "mode": "list",
          "cachedResultName": "Total pain points (nỗi đau) ",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=920960109"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "note",
              "lookupValue": "="
            }
          ]
        },
        "options": {}
      },
      "id": "4612dcd2-1f93-455a-937a-fb5d386210b2",
      "name": "List pain poin1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -9680,
        1552
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 920960109,
          "mode": "list",
          "cachedResultName": "Total pain points (nỗi đau) ",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=920960109"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "STT": "={{ $json.STT }}",
            "note": "done"
          },
          "matchingColumns": [
            "STT"
          ],
          "schema": [
            {
              "id": "STT",
              "displayName": "STT",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Nỗi đau",
              "displayName": "Nỗi đau",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Chi tiết",
              "displayName": "Chi tiết",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Hành động cụ thể",
              "displayName": "Hành động cụ thể",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Giá trị mang lại",
              "displayName": "Giá trị mang lại",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "note",
              "displayName": "note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "6cb4d19e-1d2b-4e2d-a623-7d41f3aa505e",
      "name": "Đánh dấu pain pain đã use1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -9136,
        1744
      ]
    },
    {
      "parameters": {
        "content": "# Step 1️⃣: Create Social Media Story Telling Written Content\nNote:  \nYou could use the output of step 1 to create your written content and manually post if required.  \nYou so not have to implement step 2.",
        "height": 743,
        "width": 2457,
        "color": 4
      },
      "id": "5a98f40a-c361-4e06-ad31-a44c3002f572",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -9040,
        2272
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Step 2️⃣: Create Image or Upload Image for Social Post",
        "height": 870,
        "width": 1060,
        "color": 4
      },
      "id": "c22132f4-d956-4126-ae81-e743490684bd",
      "name": "Sticky Note20",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -8656,
        3168
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Step 3️⃣: Publish Final Social Media Posts",
        "height": 595,
        "width": 1244,
        "color": 3
      },
      "id": "f2eafd2a-ce1a-430c-a1e3-21ed25b7e41c",
      "name": "Sticky Note21",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -7488,
        4000
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1106211278,
          "mode": "list",
          "cachedResultName": "Post Story Telling ",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=1106211278"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Content": "={{ $json.extracted_data.post.content }}",
            "pain point": "={{ $json.extracted_data.post.pain_point }}",
            "hook ": "={{ $json.extracted_data.post.hook }}",
            "iid": "={{ $json.extracted_data.post.id }}",
            "CTA": "={{ $json.extracted_data.post.cta }}",
            "Status": "=done",
            "Coment content": "={{ $json.extracted_data.post.comment_content }}",
            "STT": "==ROW()-1",
            "Note": "={{ $now.toISODate() }}"
          },
          "matchingColumns": [
            "Content"
          ],
          "schema": [
            {
              "id": "STT",
              "displayName": "STT",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "iid",
              "displayName": "iid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "pain point",
              "displayName": "pain point",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "hook ",
              "displayName": "hook ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Image url ",
              "displayName": "Image url ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Content",
              "displayName": "Content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Coment content",
              "displayName": "Coment content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "CTA",
              "displayName": "CTA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Note",
              "displayName": "Note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Channel",
              "displayName": "Channel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "871d81fa-4d14-4532-8bc6-90874058e51e",
      "name": "Post Story Telling1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -6464,
        2800
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.facebook.com/v17.0/{{ $json.post_id }}/comments ",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "facebookGraphApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"message\": \"If tech troubles have plagued you, we’ve got a game-changer. Details: https://solution.printcart.com/project-request.html \"\n}\n",
        "options": {}
      },
      "id": "bb2af72c-2ab1-4025-b496-723690e1bc6e",
      "name": "Coment",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -7088,
        3808
      ]
    },
    {
      "parameters": {
        "httpRequestMethod": "POST",
        "graphApiVersion": "v20.0",
        "node": "=me/photos",
        "edge": "feed",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "=message",
                "value": "={{ $('convert ouput3').item.json.extracted_data.post.content }}"
              },
              {
                "name": "url",
                "value": "={{ $json.image }}"
              }
            ]
          }
        }
      },
      "id": "2d426c62-85cd-42ad-b7be-8eef1ede561d",
      "name": "Facebook  Printcart POD",
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        -7344,
        3808
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items\nfor (const item of $input.all()) {\n  try {\n\n    // Kiểm tra và xử lý extracted_data.post.content nếu tồn tại\n    if (item.json.extracted_data && item.json.extracted_data.post && item.json.extracted_data.post.content) {\n      item.json.extracted_data.post.content = item.json.extracted_data.post.content.replace(/\\n/g, '\\\\n');\n    }\n    \n    // Luôn xử lý output để đảm bảo tính nhất quán\n    if (item.json.output) {\n      item.json.output = item.json.output.replace(/\\n/g, '\\\\n');\n    }\n    \n    // Nếu không có cả output lẫn extracted_data.post.content, ném lỗi\n    if (!item.json.output && !(item.json.extracted_data && item.json.extracted_data.post && item.json.extracted_data.post.content)) {\n      throw new Error(\"No valid content field found to process.\");\n    }\n  } catch (error) {\n    // Ghi lỗi vào một trường phù hợp nếu xử lý thất bại\n    item.json.error = \"Error processing content: \" + error.message;\n  }\n}\n\n// Trả về danh sách các item đã được cập nhật\nreturn $input.all();\n"
      },
      "id": "e74f25d4-e00a-45cb-ad16-aade81c0a860",
      "name": "convert content4",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -7216,
        2592
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Bạn đóng vai [Persona_Name] với hồ sơ:{{ $('profile4').first().json['content profile'] }}Persona_Name là một nhân vật gần gũi (ví dụ: CEO, freelancer, phụ huynh, huấn luyện viên), được xác định bởi người dùng hoặc mặc định là \"David, một chủ doanh nghiệp.\"Nhiệm vụ của bạn:Tạo một bài đăng mạng xã hội duy nhất, không trùng lặp với bất kỳ câu chuyện nào trước đó, phù hợp với độ dài và phong cách tối ưu cho mạng xã hội. \n\nDữ liệu đầu ra luôn bằng tiếng Anh.Kết quả đầu ra:\nID: là STT lấy từ {{ $json.combinedString }}.\n\nPain_Point: Vấn đề cụ thể trích xuất từ {{ $json.combinedString }}, ví dụ: High ad costs with no sales hoặc Expensive internal IT with poor results.đầu ra pain poin là tiếng anh.\n\nHook: Câu mở đầu mạnh mẽ, đánh vào cảm xúc, thu hút sự chú ý của công ty hoặc cá nhân làm trong printing industry, print on demand, liên quan Pain_Point, thay đổi mỗi lần, ví dụ: He watched 15,000 USD vanish into a campaign black hole hoặc Her IT crew burned 73,000 USD and left her stranded.\n\nContent: Viết bài tiếng Anh từ góc nhìn của David hoặc khách hàng. Bám sát Pain_Point từ {{ $json.combinedString }}. \n\nBắt đầu bằng câu chuyện thất bại sống động – chi tiết thay đổi mỗi lần theo lối bài đăng cá nhân, văn phong kể chuyện, dài ngắn linh hoạt theo nội dung nhưng là kể câu chuyện về chúng tôi tại Printcart trải nghiệm và quá trình làm việc với khách hàng hoặc câu chuyện tự xự của khách hàng, nên thêm tên, ngàng nghề kinh doanh sát với icp, quy mô, sản phẩm, địa danh, ngày tháng…nếu có, lôi cuốn, có tình tiết cụ thể, lắt léo 1 chút, kinh điển, đời thường, và đa dạng, hấp dẫn, mệt mỏi, chán, kiệt sức, thất bại...và hạnh phúc vỡ òa, format đơn giản như tự gõ chữ chứ không màu mè, cta nhắn nhủ mạnh mẽ, đơn giản, chân thành, khéo léo dùng câu ngắn, xuống dòng, cảm xúc thật, hội thoại tự nhiên, tình tiết éo le, diễn biến bất ngờ, có trao đổi nói chuyện giữa các nhân vật, có kết luận về giải pháp cho vấn đề của người tham gia câu chuyện dưới dạng danh sách không dùng dấu gạch đầu dòng (-), không dùng dấu sao (*), không dùng Markdown. Mỗi dòng bắt đầu bằng dấu chấm tròn hoặc viết liền không dấu đầu dòng, và chi tiết cảm giác hạnh phúc, thắng lợi, thành công, tiết kiệm, tối ưu, tự động hóa, câu chuyện bao gồm: Tên (ví dụ: Sofia), địa điểm (ví dụ: Cape Town), thời gian (ví dụ: October 2024), ngành nghề (ví dụ: restaurant), mức độ thiệt hại ngẫu nhiên (ví dụ: Lost 7,000 USD), khó khăn (ví dụ: He argued with his partner till 3 AM), tiết lộ giải pháp mới mẻ với kết quả cụ thể (ví dụ: Revenue up 58% hoặc Saved 32,000 USD), kết thúc với lời kêu gọi hành động rõ ràng, chân thành, khác biệt, ví dụ: Share your IT mess – I’ll help you clean it up, tiết lộ giải pháp mới mẻ với kết quả cụ thể (ví dụ: Revenue up 58% hoặc Saved 32,000 USD), chi tiết và hấp dẫn, thêm 5-7 hashtag có liên quan, phù hợp với chủ đề của bài đăng, dán trực tiếp emoji Unicode phù hợp, output ngoài hashtag ra thì không được xuất hiện dấu # và dấu * và dấu ** \n\nComment_Content: Bình luận ngắn 20–50 từ, thật, có số liệu, liên quan Pain_Point, ví dụ: Sofia lost 7,000 USD on ads with no sales – you been there?\n\nCTA: Lời kêu gọi hành động rõ ràng, chân thành, khác biệt, ví dụ: Share your IT mess – I’ll help you clean it up.Câu chuyện phải:Không lặp lại: Bối cảnh, nhân vật, tình huống khác nhau.\n\nChi tiết: Dữ liệu thực, ví dụ: March 2023, Liam in Seoul lost 13,000 USD on ads – 8% clicks, no sales.Hấp dẫn: Nút thắt bất ngờ, cảm xúc mạnh.Gần gũi: Khoảnh khắc đời thường, ví dụ: She stared at the 9,000 USD bill, coffee gone cold.Diễn tiến cảm xúc: Từ thất vọng đến chiến thắng, ví dụ: I thought I’d shut down – now we’re up 67%.Giọng văn tươi mới: Khẩn cấp, trầm tư, hoặc thân mật, thay đổi mỗi lần.\n\n🎯 Mục tiêu Tạo nội dung sống động, đáng tin, theo từng chủ đề, không lặp lại, mang lại hành động với những câu chuyện người thật – việc thật, số liệu động và giọng văn con người, không emoji, chỉ storytelling raw và hấp dẫn. output ngoài hashtag ra thì không được xuất hiện dấu # và dấu * và dấu ** \n\nđầu ra luôn luôn phải là trong đó các trường phải có định dạng sau: Ví dụ: **ID:**\n",
        "options": {}
      },
      "id": "760bb8b1-03ac-4ce5-88d5-83b13c5d7f2f",
      "name": "AI Agent Story Telling1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -7904,
        1952
      ]
    },
    {
      "parameters": {
        "jsCode": "const results = [];\n\nfor (const item of $input.all()) {\n  const json = item.json;\n  let imageUrl = null;\n\n  if (json.image_url) {\n    // Placid\n    imageUrl = json.image_url;\n  } else if (json.imageUrl) {\n    // DynaPictures\n    imageUrl = json.imageUrl;\n  } else if (json.url) {\n    // HTMLCSStoImage\n    imageUrl = json.url;\n  }\n\n  if (imageUrl) {\n    results.push({ image: imageUrl });\n  }\n}\n\nreturn results;\n"
      },
      "id": "77ed86dc-55ea-482d-9f1f-2701e3fb84f9",
      "name": "Image1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -7744,
        3664
      ]
    },
    {
      "parameters": {
        "url": "=https://api.pexels.com/v1/search?query=t-shirt printing&per_page=1&page={{ Math.floor(Math.random() * 50) + 1 }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": " yKcmrC8LfgbNcXdf8yYlrsaL9cMZOadZfkSUCVsWikUYuBNc27t3jAJ6"
            }
          ]
        },
        "options": {}
      },
      "id": "312a1390-b731-490d-9fe9-7c2f927012c0",
      "name": "banner ngẫu nhiên3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -8480,
        3472
      ]
    },
    {
      "parameters": {
        "url": "={{ $json.polling_url }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer placid-4nwkicuohm9sx5aq-dbtm9ajtyd64xenv"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "fa8e4166-3e14-42d5-9107-7d9bc97b02b8",
      "name": "Get placid1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -7888,
        3472
      ]
    },
    {
      "parameters": {
        "amount": 15
      },
      "id": "1ca8047b-bf87-4ff9-93a0-e22c72471c2c",
      "name": "Wait1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -8048,
        3472
      ],
      "webhookId": "31ab450b-7648-4489-8324-4126fa3580d2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.placid.app/api/rest/images",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer placid-4nwkicuohm9sx5aq-dbtm9ajtyd64xenv"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"template_uuid\": \"06kurqzyqq8o0\",\n  \"layers\": {\n    \"title\": {\n      \"text\": \"{{ $('convert content4').item.json.extracted_data.post.hook }}\"\n    },\n    \"glow\": {\n      \"image\": \"{{ $json.photos[0].src.original }}\",\n      \"effects\": {\n        \"blur\": {\n          \"radius\": 25\n        }\n      }\n    }\n  }\n}\n",
        "options": {}
      },
      "id": "bf5369f2-7688-4e8a-80e6-3e35108397ae",
      "name": "placid banner1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -8240,
        3472
      ]
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  try {\n    if (item.json.output && typeof item.json.output === 'string') {\n      let messageContent = item.json.output;\n\n      // Loại bỏ các ký tự định dạng như #, * và làm sạch dấu phẩy thừa\n      messageContent = messageContent.replace(/[#*]+/g, '').replace(/,\\s*$/gm, '');\n      // Loại bỏ mọi dấu ngoặc kép từ messageContent trước khi xử lý\n      messageContent = messageContent.replace(/\"/g, '');\n\n      function extractContent(data) {\n        // Regex được điều chỉnh để chỉ trích xuất ID, Pain_Point, Hook, Content, Comment_Content, CTA\n        const regex = /ID:\\s*(\\d+)\\s*\\n(?:Pain_Point:\\s*(.*?)(?:\\s*\\n|\\s*,))?Hook:\\s*(.*?)(?:\\s*\\n|\\s*,)(?:Image_URL:\\s*(.*?)(?:\\s*\\n|\\s*,))?\\s*Content:\\s*([\\s\\S]*?)\\s*Comment_Content:\\s*([\\s\\S]*?)\\s*CTA:\\s*([\\s\\S]*?)(?:\\n---|$)/gi;\n\n        const results = {};\n        let match;\n        while ((match = regex.exec(data)) !== null) {\n          const platformKey = \"post\"; // Key mặc định cho bài đăng duy nhất\n\n          results[platformKey] = {\n            id: match[1].trim(),\n            pain_point: match[2] ? match[2].trim() : \"Not specified\", // Nếu không có Pain_Point, ghi \"Not specified\"\n            hook: match[3].trim(),\n            content: match[5].trim(),\n            comment_content: match[6].trim(),\n            cta: match[7].trim()\n          };\n        }\n\n        return results;\n      }\n\n      let extractedData = extractContent(messageContent);\n\n      if (Object.keys(extractedData).length === 0) {\n        throw new Error(\"No valid data extracted from input.\");\n      }\n\n      item.json = {\n        ...item.json,\n        extracted_data: extractedData\n      };\n    } else {\n      item.json = { ...item.json, error: \"No valid output found in input.\" };\n    }\n  } catch (error) {\n    item.json = {\n      ...item.json,\n      error: \"Error processing content\",\n      details: error.message\n    };\n  }\n}\n\nreturn $input.all();"
      },
      "id": "0fdecc1e-9332-48b5-ab98-5127509e7cb7",
      "name": "convert old1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -7504,
        2432
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://upload.twitter.com/1.1/media/upload.json",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "authorization",
              "value": "Bearer AAAAAAAAAAAAAAAAAAAAANRILgAAAAAAnNwIzUejRCOuH5E6I8xnZz4puTs%3D1Zv7ttfk8LF81IUq16cHjhLTvJu4FA33AGWWjCpTnA"
            },
            {
              "name": "cookie",
              "value": "auth_token=61fb8229915fbc3e3a4ceb9918c71998fab9f0ce;ct0=702daa7aeb7c0b506af5686fa1e4181e26946257211667e5178a75de810281c68981809e8b0096a827204737674db1c8ad8b05acc5e38bce630a6c4a41ff34e8f02bbdd3beee1fb3b036d2d3eee488e0;guest_id=v1%3A174238164834105678;guest_id_ads=v1%3A174238164834105678;guest_id_marketing=v1%3A174238164834105678;personalization_id=\"v1_OAdXRu3EvRnhOYGuHger8A==\";"
            },
            {
              "name": "x-csrf-token",
              "value": "702daa7aeb7c0b506af5686fa1e4181e26946257211667e5178a75de810281c68981809e8b0096a827204737674db1c8ad8b05acc5e38bce630a6c4a41ff34e8f02bbdd3beee1fb3b036d2d3eee488e0"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "media",
              "inputDataFieldName": "=data"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -7168,
        4128
      ],
      "id": "42806d3a-6831-48d9-9532-c5805ef30113",
      "name": "Media File2"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 8
            }
          ]
        }
      },
      "id": "71be33a2-3ead-42c5-8cd8-6e86377da2c5",
      "name": "Schedule Trigger6",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -9264,
        2128
      ]
    },
    {
      "parameters": {
        "url": "={{ $json.image }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -7408,
        4128
      ],
      "id": "6d93ed6e-7fa6-44ef-b2ae-8f443af240fe",
      "name": "GET A IMAGE"
    },
    {
      "parameters": {
        "text": "={{ $json.output }}",
        "additionalFields": {
          "attachments": "={{ $('Media File2').item.json.media_id_string }}"
        }
      },
      "id": "460ebc8c-da05-402d-ace4-bd065f918cd5",
      "name": "X",
      "type": "n8n-nodes-base.twitter",
      "typeVersion": 2,
      "position": [
        -6496,
        4128
      ]
    },
    {
      "parameters": {
        "model": "=grok-beta",
        "options": {
          "baseURL": "https://api.x.ai/v1"
        }
      },
      "id": "688d0e9d-ed03-4b8e-9f60-6f25488afcdb",
      "name": "OpenAI Chat Model6",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -7024,
        4352
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Dựa trên nội dung content sau:\n\n{{ $('convert ouput3').item.json.extracted_data.post.content }}\n\nNội dung này hiện quá dài để đăng trên mạng xã hội X, nơi giới hạn tối đa là 280 ký tự (bao gồm cả khoảng trắng và dấu câu). Hãy tóm tắt nội dung thành một đoạn văn ngắn, hấp dẫn, giữ được ý chính và phong cách phù hợp với bài đăng trên mạng xã hội X.\n\nYêu cầu:\n\nĐộ dài không vượt quá 280 ký tự.\nGiữ giọng điệu vui vẻ, thu hút, và tự nhiên, phù hợp với phong cách giao tiếp trên X.\nĐảm bảo nội dung vẫn truyền tải được thông điệp chính, tạo cảm giác tò mò hoặc kêu gọi hành động (nếu có).\nKhông thêm hashtag hoặc liên kết, trừ khi nội dung gốc có sẵn.",
        "options": {}
      },
      "id": "e70e4660-92d6-48b4-adde-a9de07723e26",
      "name": "Tóm tắt content phù hợp với x1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -6896,
        4128
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.linkedin.com/v2/assets?action=registerUpload",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "linkedInOAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer AQXfQKW37if5kkVeU9hdkwI3j2Y-KlxpUIq9n_Z_txUPyW6jesmOm15zCESgmGJuqMGujKQai4a4YwujRQ_RtsYlnKxjErXPvy9mbt9sezgrX6iYW0O_Q9aDdWPF1OCAsG13xdUMitVALj1j2lKC3ScfNH5oyEiPjJEUzuccuatUOqPZjKP1A_4gVAdAftaYUchNAThoKlVwAKnzzt6THbQEnv-lAtJJy-WZ0_ersXHVl4CtGCOuV8aDoOTKTIxCXNvZyb6vdZLqp2jSHn2Stsxh59rJJqYU16SmHbAVghwJuv0_3pBqbJg07HMq90B47aPbvhnWTDhvmPVGkkN_Q63UGysYzQ"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"registerUploadRequest\": {\n    \"recipes\": [\n      \"urn:li:digitalmediaRecipe:feedshare-image\"\n    ],\n    \"owner\": \"urn:li:person:EFrUw9vKhR\",\n    \"serviceRelationships\": [\n      {\n        \"identifier\": \"urn:li:userGeneratedContent\",\n        \"relationshipType\": \"OWNER\"\n      }\n    ]\n  }\n}\n",
        "options": {}
      },
      "id": "a67d6c9c-ab2a-4dda-800c-43701590b5a1",
      "name": "registerUpload",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -7408,
        3584
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.linkedin.com/v2/ugcPosts",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "linkedInOAuth2Api",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"author\": \"urn:li:person:EFrUw9vKhR\",  \n  \"containerEntity\": \"urn:li:group:14620416\",  \n  \"lifecycleState\": \"PUBLISHED\",\n  \"specificContent\": {\n    \"com.linkedin.ugc.ShareContent\": {\n      \"shareCommentary\": {\n        \"text\": \"{{ $('convert content4').item.json.extracted_data.post.content }}\"\n      },\n      \"shareMediaCategory\": \"IMAGE\",  \n      \"media\": [\n        {\n          \"status\": \"READY\",\n          \"media\": \"{{ $('registerUpload').item.json.value.asset }}\", \n          \"description\": {\n            \"text\": \"Description of the image\"\n          },\n          \"title\": {\n            \"text\": \"Image Title\"\n          }\n        }\n      ]\n    }\n  },\n  \"visibility\": {\n    \"com.linkedin.ugc.MemberNetworkVisibility\": \"PUBLIC\"\n  }\n}\n",
        "options": {}
      },
      "id": "cce16273-01a8-420d-84ee-8bbbf4e23bd7",
      "name": "Print Commerce Group",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -6448,
        3584
      ]
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "={{ $json.value.uploadMechanism['com.linkedin.digitalmedia.uploading.MediaUploadHttpRequest'].uploadUrl }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "image/png"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {}
      },
      "id": "942f5677-328e-4a37-813a-46da1783cd0f",
      "name": "PUT Image",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -6800,
        3584
      ]
    },
    {
      "parameters": {
        "url": "={{ $('Image1').item.json.image }}",
        "options": {}
      },
      "id": "224da49d-ef6c-403f-90e1-0e6f623901cc",
      "name": "HTTP GET img",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -7120,
        3584
      ]
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "8219835d-c571-401c-94aa-4482268dd3a8",
      "name": "OpenAI Chat Model7",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -8000,
        2784
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=viết 1 bài post lên facebook \ngiới thiệu Vincent – Cmsmart Ecommerce\nbài post theo kiểu chia sẻ tip giải pháp cho 1 nỗi đau chính của icp client về AI\nviết bằng tiếng Anh, dễ đọc, ngắn gọn\nkiểu hook - có số lượng tips, ví dụ : Top 5 secrect tips..\nnội dung luân phiên theo từng bài post, nhưng đều xoay quanh chủ đề về AI và Ecommerce, chọn các chủ đề có nhiều người quan tâm nhất và dễ làm, dễ viral, có giải thích hoặc chi tiết của tips,\n+ nếu viết là top 4 Prompt thì sẽ bao gồm Prompt chi tiết; \n+ giới thiệu tên của các AI apps hay AI tools và sự mới lạ của nó và tiềm năng ứng dụng vào giải quyết các vấn đề của Ecommerce và có thể kèm URL đến apps hay tools đó\n+ giới thiệu các AI Automation Workflow integration mà Ecommerce nên sử dụng\nsau Tips là 1 case study có tên họ, quốc gia, và các chỉ số...để minh họa\nkết thúc bằng cách cam kết chia sẻ tips AI hàng tuần nên mời user like fan pages để không bỏ lỡ\n\nTrả về output như mẫu dưới đây:\n\n**ID:** 62\\n\\n**Pain_Point:** Users don’t realize embroidery limitations, causing bad prints.\\n\\n**Hook:** She watched helplessly as her beautifully designed shirts came back with nearly unreadable text.\\n\\n**Content:** Meet Olivia from Brisbane, who's been running a trendy streetwear brand since March 2023. Excitement turned to anguish when her latest batch of custom caps returned with designs that could barely be read. The issue? Her customers didn’t realize the limitations of embroidery, leading to blurry logos and small, indistinct text. It was a perfect storm of creativity clashing with technical boundaries.\\n\\nFrustrated and facing a $9,000 loss, Olivia found herself staying up late, sipping stale coffee, pondering the fate of her fashion label. It was only when a customer candidly mentioned the discontent that she realized change was necessary.\\n\\nEnter Printcart’s Embroidery Text Simulator. With a few clicks, Olivia's customers could now visualize their designs in real embroidery, ensuring clarity and quality every time. The transition was seamless, empowering her clientele to create confidently and reducing returned orders dramatically.\\n\\nWithin weeks, Olivia's brand saw merchandise sales surge by 75%. She could finally relax, confident that her designs translated perfectly from screen to stitch. Now, Olivia sleeps well, knowing her cutting-edge style isn't lost in translation.\\n\\nDon't let unseen challenges unravel your business. Connect with me, and let’s ensure your designs come out right every time.\\n\\nHats off to empowered design! 🧢💡 #EmbroiderySolutions #FashionRetail #PrintcartStory #CreativeJourney #DesignSuccess #CustomApparel #EmbroideryMagic\\n\\n**Comment_Content:** Olivia faced a $9,000 loss when her cap designs turned out blurry. Ever been there? Printcart’s simulator changed everything for her.\\n\\n**CTA:** Don’t let your designs get lost in embroidery translation – reach out today, and I'll guide you through the Printcart transformation!",
        "options": {}
      },
      "id": "3d012550-09cb-4195-ab5e-e72c5605ad24",
      "name": "AI Agent Story Telling2",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -8064,
        2592
      ]
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  try {\n    if (item.json.output && typeof item.json.output === 'string') {\n      let messageContent = item.json.output\n        .replace(/,\\s*$/gm, '') // Xóa dấu phẩy cuối dòng\n        .replace(/\"/g, '')      // Xóa dấu ngoặc kép\n        .trim();\n\n      // ✅ Hàm xử lý cả 2 kiểu slide: subject-describe & - **Step X**\n      function extractSlides(text) {\n        const slides = [];\n\n        // Kiểu 1: subject + describe\n        const subjectDescribePattern = /\\*\\*subject:\\*\\*\\s*(.*?)\\n\\*\\*describe:\\*\\*\\n([\\s\\S]*?)(?=\\n\\*\\*subject:|\\Z)/g;\n        let match;\n        while ((match = subjectDescribePattern.exec(text)) !== null) {\n          const subject = match[1].trim();\n          const describe = match[2].trim().split('\\n')\n            .map(line => line.replace(/^-/, '').trim())\n            .filter(line => line.length > 0);\n          slides.push({ subject, describe });\n        }\n\n        // Kiểu 2: - **Step X** + mô tả\n        const stepPattern = /-\\s\\*\\*(Step\\s\\d+\\..*?)\\*\\*\\n((?:\\s{2,}-\\s.*\\n?)+)/g;\n        let matchStep;\n        while ((matchStep = stepPattern.exec(text)) !== null) {\n          const subject = matchStep[1].trim();\n          const describeRaw = matchStep[2];\n          const describe = describeRaw.split('\\n')\n            .map(line => line.trim().replace(/^-\\s/, ''))\n            .filter(line => line.length > 0);\n          slides.push({ subject, describe });\n        }\n\n        return slides;\n      }\n\n      // ✅ Hàm trích xuất các field chính\n      function extractContent(data) {\n        const getField = (label, fallback = '') => {\n          const regex = new RegExp(`\\\\*\\\\*${label}:\\\\*\\\\*\\\\s*([\\\\s\\\\S]*?)(?=\\\\n\\\\*\\\\*|\\\\n---|\\\\n$|$)`, 'i');\n          const match = data.match(regex);\n          return (match && match[1].trim()) || fallback;\n        };\n\n        return {\n          post: {\n            id: getField('ID', 'Not specified'),\n            pain_point: getField('Pain_Point', 'Not specified'),\n            hook: getField('Hook', 'Not specified'),\n            image_url: getField('Image_URL', ''),\n            content: getField('Content', ''),\n            slide: extractSlides(data),\n            comment_content: getField('Comment_Content', ''),\n            cta: getField('CTA', ''),\n            status: getField('Status', 'Not specified')\n          }\n        };\n      }\n\n      const extractedData = extractContent(messageContent);\n\n      if (!extractedData.post.id || extractedData.post.id === 'Not specified') {\n        throw new Error(\"No valid ID extracted from input.\");\n      }\n\n      item.json = {\n        ...item.json,\n        extracted_data: extractedData\n      };\n    } else {\n      item.json = {\n        ...item.json,\n        error: \"No valid output found in input.\"\n      };\n    }\n  } catch (error) {\n    item.json = {\n      ...item.json,\n      error: \"Error processing content\",\n      details: error.message\n    };\n  }\n}\n\nreturn $input.all();\n"
      },
      "id": "8c8c0e07-f38c-4bab-a77d-9dfcba7aff2d",
      "name": "convert ouput6",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -640,
        5504
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 180315726,
          "mode": "list",
          "cachedResultName": "Post share tip",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=180315726"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "STT": "==ROW()-1",
            "Content": "={{ $('convert ouput6').item.json.extracted_data.post.content }}",
            "pain point": "={{ $('List share tips1').item.json[\"Nỗi đau\"] }}",
            "hook ": "={{ $('convert ouput6').item.json.extracted_data.post.hook }}",
            "Coment content": "={{ $('convert ouput6').item.json.extracted_data.post.comment_content }}",
            "CTA": "={{ $('convert ouput6').item.json.extracted_data.post.cta }}",
            "Status": "done",
            "Note": "={{ $now.toISODate() }}",
            "parent match": "={{ $json.extracted_data.post.id }}",
            "Image url ": "={{ $json.extracted_data.post.image_url }}"
          },
          "matchingColumns": [
            "Content"
          ],
          "schema": [
            {
              "id": "STT",
              "displayName": "STT",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "parent match",
              "displayName": "parent match",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "pain point",
              "displayName": "pain point",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "hook ",
              "displayName": "hook ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Image url ",
              "displayName": "Image url ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Content",
              "displayName": "Content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Coment content",
              "displayName": "Coment content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "CTA",
              "displayName": "CTA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Note",
              "displayName": "Note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Channel",
              "displayName": "Channel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "fa7996d6-f4de-41aa-8701-86e204e4e1a0",
      "name": "Post share tip1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        592,
        5760
      ]
    },
    {
      "parameters": {
        "content": "# Step 1️⃣: Share tip Written Content\nNote:  \nYou could use the output of step 1 to create your written content and manually post if required.  \nYou so not have to implement step 2.",
        "height": 760,
        "width": 2417,
        "color": 4
      },
      "id": "51223e92-60e5-4b16-9645-03149667561e",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1600,
        5232
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Step 2️⃣: Create Image or Upload Image for Social Post",
        "height": 835,
        "width": 1255,
        "color": 4
      },
      "id": "c0b53111-cc80-4105-87ed-192baf667c7e",
      "name": "Sticky Note22",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1520,
        6080
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Step 3️⃣: Publish Final Social Media Posts",
        "height": 595,
        "width": 1964,
        "color": 3
      },
      "id": "ebeb07f2-ba24-41b4-be3f-286040293561",
      "name": "Sticky Note24",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -48,
        6208
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items\nfor (const item of $input.all()) {\n  try {\n    \n    // Kiểm tra và xử lý extracted_data.post.content nếu tồn tại\n    if (item.json.extracted_data && item.json.extracted_data.post && item.json.extracted_data.post.content) {\n      item.json.extracted_data.post.content = item.json.extracted_data.post.content.replace(/\\n/g, '\\\\n');\n    }\n    \n    // Luôn xử lý output để đảm bảo tính nhất quán\n    if (item.json.output) {\n      item.json.output = item.json.output.replace(/\\n/g, '\\\\n');\n    }\n    \n    // Nếu không có cả output lẫn extracted_data.post.content, ném lỗi\n    if (!item.json.output && !(item.json.extracted_data && item.json.extracted_data.post && item.json.extracted_data.post.content)) {\n      throw new Error(\"No valid content field found to process.\");\n    }\n  } catch (error) {\n    // Ghi lỗi vào một trường phù hợp nếu xử lý thất bại\n    item.json.error = \"Error processing content: \" + error.message;\n  }\n}\n\n// Trả về danh sách các item đã được cập nhật\nreturn $input.all();"
      },
      "id": "99ace7d7-5871-44dd-966c-e114a4b44c25",
      "name": "convert content5",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1424,
        6288
      ]
    },
    {
      "parameters": {
        "jsCode": "const result = [];\n\nfor (const item of $input.all()) {\n  try {\n    const post = item.json?.extracted_data?.post;\n    const rawOutput = item.json.output;\n\n    if (rawOutput && typeof rawOutput === 'string') {\n      // ✅ Bắt được Slide: xuống dòng\n      const slideSectionMatch = rawOutput.match(/\\*\\*Slide[:：]?\\*\\*\\s*\\n([\\s\\S]*)/i);\n\n      if (slideSectionMatch) {\n        const slideSection = slideSectionMatch[1].trim();\n        const lines = slideSection.split('\\n').map(line => line.trim()).filter(Boolean);\n\n        const slides = [];\n        let currentSlide = null;\n        let isDescribeBlock = false;\n\n        for (const line of lines) {\n          // CASE 1: - **subject:**\n          if (line.toLowerCase().startsWith('- **subject:**')) {\n            if (currentSlide && currentSlide.subject && currentSlide.describe.length > 0) {\n              slides.push(currentSlide);\n            }\n            currentSlide = {\n              subject: line.replace(/- \\*\\*subject:\\*\\*/i, '').replace(/\"/g, '').trim(),\n              describe: []\n            };\n            isDescribeBlock = true;\n          }\n\n          // CASE 2: **subject:**\n          else if (line.toLowerCase().startsWith('**subject:**')) {\n            if (currentSlide && currentSlide.subject && currentSlide.describe.length > 0) {\n              slides.push(currentSlide);\n            }\n            currentSlide = {\n              subject: line.replace(/\\*\\*subject:\\*\\*/i, '').replace(/\"/g, '').trim(),\n              describe: []\n            };\n            isDescribeBlock = true;\n          }\n\n          // CASE 3: - subject:\n          else if (line.toLowerCase().startsWith('- subject:')) {\n            if (currentSlide && currentSlide.subject && currentSlide.describe.length > 0) {\n              slides.push(currentSlide);\n            }\n            currentSlide = {\n              subject: line.replace(/- subject:/i, '').replace(/\"/g, '').trim(),\n              describe: []\n            };\n            isDescribeBlock = true;\n          }\n\n          // CASE 4: subject:\n          else if (line.toLowerCase().startsWith('subject:')) {\n            if (currentSlide && currentSlide.subject && currentSlide.describe.length > 0) {\n              slides.push(currentSlide);\n            }\n            currentSlide = {\n              subject: line.replace(/subject:/i, '').replace(/\"/g, '').trim(),\n              describe: []\n            };\n            isDescribeBlock = true;\n          }\n\n          // CASE 5: **Step X. Title**\n          else if (/^\\*\\*Step\\s*\\d+\\./i.test(line)) {\n            if (currentSlide && currentSlide.subject && currentSlide.describe.length > 0) {\n              slides.push(currentSlide);\n            }\n            currentSlide = {\n              subject: line.replace(/\\*\\*/g, '').replace(/\"/g, '').trim(),\n              describe: []\n            };\n            isDescribeBlock = true;\n          }\n\n          // CASE 6: - **Step X. Title:**\n          else if (/^- \\*\\*Step\\s*\\d+\\..*?\\*\\*:/.test(line)) {\n            if (currentSlide && currentSlide.subject && currentSlide.describe.length > 0) {\n              slides.push(currentSlide);\n            }\n            const stepTitle = line.replace(/^- \\*\\*(Step\\s*\\d+\\..*?)\\*\\*:/, '$1').replace(/\"/g, '').trim();\n            currentSlide = {\n              subject: stepTitle,\n              describe: []\n            };\n            isDescribeBlock = true;\n          }\n\n          // CASE 7: mô tả bắt đầu bằng - hoặc .\n          else if (isDescribeBlock && (line.startsWith('-') || line.startsWith('.'))) {\n            const cleanLine = line.replace(/^[-•.]?\\s*/, '').replace(/\"/g, '').trim();\n            currentSlide?.describe.push(cleanLine);\n          }\n            \n          else if (\n            (line.startsWith('.') || line.startsWith('-') || line.startsWith('•')) &&\n            currentSlide\n          ) {\n            const cleanLine = line.replace(/^[-•.]?\\s*/, '').trim();\n            currentSlide.describe.push(cleanLine);\n          }\n\n          // CASE 8: bắt đầu mô tả\n          else if (line.toLowerCase().startsWith('**describe:**') || line.toLowerCase().startsWith('- describe:')) {\n            isDescribeBlock = true;\n          }\n        }\n\n        // Push slide cuối cùng\n        if (currentSlide && currentSlide.subject && currentSlide.describe.length > 0) {\n          slides.push(currentSlide);\n        }\n\n        // Output từng slide\n        for (const slide of slides) {\n          result.push({\n            json: {\n              subject: slide.subject,\n              describe: slide.describe.join('\\\\n')\n            }\n          });\n        }\n\n        // Gán vào post nếu cần\n        if (post) item.json.extracted_data.post.slide = slides;\n\n        // Chuẩn hóa content và output\n        if (typeof post?.content === 'string') {\n          item.json.extracted_data.post.content = post.content.replace(/\\n/g, '\\\\n');\n        }\n        if (typeof item.json.output === 'string') {\n          item.json.output = item.json.output.replace(/\\n/g, '\\\\n');\n        }\n\n      } else {\n        result.push({\n          json: { error: \"No slide section found in output.\" }\n        });\n      }\n\n    } else {\n      result.push({\n        json: { error: \"Invalid or missing output string.\" }\n      });\n    }\n\n  } catch (error) {\n    result.push({\n      json: {\n        error: \"Error processing slide content\",\n        details: error.message\n      }\n    });\n  }\n}\n\nreturn result;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1408,
        6640
      ],
      "id": "0efab8b3-90e3-4d73-bcda-0101bf8b45ab",
      "name": "slide2"
    },
    {
      "parameters": {
        "url": "=https://api.pexels.com/v1/search?query=nature landscape background\n&per_page=1&page={{ Math.floor(Math.random() * 50) + 1 }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": " yKcmrC8LfgbNcXdf8yYlrsaL9cMZOadZfkSUCVsWikUYuBNc27t3jAJ6"
            }
          ]
        },
        "options": {}
      },
      "id": "a39147f3-2e89-4d90-90d6-98072c798adc",
      "name": "banner ngẫu nhiên4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1136,
        6288
      ]
    },
    {
      "parameters": {
        "url": "={{ $json.polling_url }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer placid-4nwkicuohm9sx5aq-dbtm9ajtyd64xenv"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "beedf154-15a0-4789-b39e-6bf447a19ddf",
      "name": "Get placid4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -464,
        6288
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.placid.app/api/rest/images",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer placid-4nwkicuohm9sx5aq-dbtm9ajtyd64xenv"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"template_uuid\": \"06kurqzyqq8o0\",\n  \"layers\": {\n    \"title\": {\n      \"text\": \"{{ $('convert ouput6').item.json.extracted_data.post.hook }}\",\n      \"style\": {\n        \"fontSize\": 85\n      }\n    },\n    \"glow\": {\n      \"image\": \"{{ $json.photos[0].src.original }}\",\n      \"effects\": {\n        \"blur\": {\n          \"radius\": 25\n        }\n      }\n    }\n  }\n}\n",
        "options": {}
      },
      "id": "f81e7949-1cce-4c98-a7d4-f10073f1013e",
      "name": "placid banner4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -880,
        6288
      ]
    },
    {
      "parameters": {
        "amount": 10
      },
      "id": "151cefe8-0a18-4330-a9e5-414630498e9e",
      "name": "Wait4",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -656,
        6288
      ],
      "webhookId": "31ab450b-7648-4489-8324-4126fa3580d2"
    },
    {
      "parameters": {
        "amount": 20
      },
      "id": "da8546b0-8413-4497-a28d-b21c152f85be",
      "name": "Wait14",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -640,
        6640
      ],
      "webhookId": "31ab450b-7648-4489-8324-4126fa3580d2"
    },
    {
      "parameters": {
        "url": "=https://api.pexels.com/v1/search?query=minimal aesthetic background&per_page=1&page={{ Math.floor(Math.random() * 50) + 1 }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": " yKcmrC8LfgbNcXdf8yYlrsaL9cMZOadZfkSUCVsWikUYuBNc27t3jAJ6"
            }
          ]
        },
        "options": {}
      },
      "id": "b7d80410-6478-4fe4-9a3b-b79d62bdce06",
      "name": "banner ngẫu nhiên13",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1168,
        6640
      ]
    },
    {
      "parameters": {
        "url": "={{ $json.polling_url }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer placid-4nwkicuohm9sx5aq-dbtm9ajtyd64xenv"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "5ac832bc-f464-4073-9e3b-4b0eac71555d",
      "name": "Get placid14",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -416,
        6640
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.placid.app/api/rest/images",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer placid-4nwkicuohm9sx5aq-dbtm9ajtyd64xenv"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"template_uuid\": \"h14ob6cgibdui\",\n  \"layers\": {\n    \"title\": {\n      \"text\": \"{{ $('slide2').item.json.subject }}\",\n      \"style\": {\n        \"fontSize\": 80,\n        \"fontFamily\": \"Asap Italic\",\n        \"color\": \"#FFFFFF\"\n      }\n    },\n    \"text\": {\n      \"text\": \"{{ $('slide2').item.json.describe }}\",\n      \"style\": {\n        \"fontSize\": 30,\n        \"fontFamily\": \"Asap Italic\",\n        \"color\": \"#FFFFFF\"\n      }\n    },\n    \"glow\": {\n      \"image\": \"{{ $json.photos[0].src.original }}\",\n      \"effects\": {\n        \"blur\": {\n          \"radius\": 25\n        }\n      }\n    }\n  }\n}\n",
        "options": {}
      },
      "id": "a9e20a38-fcc8-4372-a84c-2407efa1b505",
      "name": "placid banner14",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -880,
        6640
      ]
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        32,
        6400
      ],
      "id": "ffa0ce34-6390-4e95-8508-b2eae6e2ad00",
      "name": "Merge2"
    },
    {
      "parameters": {
        "jsCode": "// Get all image URLs from the input list\nconst urls = $input.all().map(item => item.json.image_url);\n\n// Check if there are any URLs, and then join them with commas, ensuring no leading comma\nconst joinedUrls = urls.length > 0 ? urls.join(', ') : '';\n\n// Output the final JSON object with the concatenated image_url string\nreturn [{\n  json: {\n    image_urls: joinedUrls\n  }\n}];\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        272,
        6400
      ],
      "id": "7221dace-d421-415b-9c58-fe2442847882",
      "name": "item img convert to chuỗi1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.pdf.co/v1/pdf/convert/from/image",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "{\n  \"x-api-key\": \"thanhtung2432004@gmail.com_w2yKWUQ83aDMdCVVugOyE1uZbT8PRDw8mMNbuCQTA3G7cbwHN3sQfgT1SnWM2cHk\", \n  \"Content-Type\": \"application/json\"\n}\n",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"name\": \"output-from-placid.pdf\",\n  \"url\": \"{{ $json.image_urls }}\",\n  \"async\": false\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        544,
        6400
      ],
      "id": "618971d1-4a54-4f24-9b13-6fdc7c529ef1",
      "name": "Convert to PDF2"
    },
    {
      "parameters": {
        "url": "={{ $('Convert to PDF2').item.json.url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1120,
        6400
      ],
      "id": "b49fb8ea-78fe-401b-ad8f-805e1024bc9a",
      "name": "Get a PDF"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.linkedin.com/rest/documents",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "linkedInOAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "action",
              "value": "initializeUpload"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer AQXfQKW37if5kkVeU9hdkwI3j2Y-KlxpUIq9n_Z_txUPyW6jesmOm15zCESgmGJuqMGujKQai4a4YwujRQ_RtsYlnKxjErXPvy9mbt9sezgrX6iYW0O_Q9aDdWPF1OCAsG13xdUMitVALj1j2lKC3ScfNH5oyEiPjJEUzuccuatUOqPZjKP1A_4gVAdAftaYUchNAThoKlVwAKnzzt6THbQEnv-lAtJJy-WZ0_ersXHVl4CtGCOuV8aDoOTKTIxCXNvZyb6vdZLqp2jSHn2Stsxh59rJJqYU16SmHbAVghwJuv0_3pBqbJg07HMq90B47aPbvhnWTDhvmPVGkkN_Q63UGysYzQ"
            },
            {
              "name": "LinkedIn-Version",
              "value": "202306"
            },
            {
              "name": "X-Restli-Protocol-Version",
              "value": "2.0.0"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"initializeUploadRequest\": {\n    \"owner\": \"urn:li:organization:20459490\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        832,
        6400
      ],
      "id": "ddd2fb00-5cb6-43d6-b17b-81a32da431ca",
      "name": "Upload PDF"
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "={{ $json.value.uploadUrl }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/pdf"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {}
      },
      "id": "c2e69c9d-8924-4217-a257-70ecdadda23b",
      "name": "PUT PDF1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1424,
        6400
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.linkedin.com/v2/ugcPosts",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "linkedInOAuth2Api",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"author\": \"urn:li:person:EFrUw9vKhR\",  \n  \"containerEntity\": \"urn:li:group:14620416\",  \n  \"lifecycleState\": \"PUBLISHED\",\n  \"specificContent\": {\n    \"com.linkedin.ugc.ShareContent\": {\n      \"shareCommentary\": {\n        \"text\": \"{{ $('convert content5').first().json.output }}\"\n      },\n      \"shareMediaCategory\": \"IMAGE\",  \n      \"media\": [\n        {\n          \"status\": \"READY\",\n          \"media\": \"{{ $('Get a PDF').item.json.value.document }}\", \n          \"description\": {\n            \"text\": \"Description of the image\"\n          },\n          \"title\": {\n            \"text\": \"Image Title\"\n          }\n        }\n      ]\n    }\n  },\n  \"visibility\": {\n    \"com.linkedin.ugc.MemberNetworkVisibility\": \"PUBLIC\"\n  }\n}\n",
        "options": {}
      },
      "id": "9f0f2c0f-0fdb-4e04-95b5-31320ed30aed",
      "name": "Print Commerce Group5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1728,
        6432
      ]
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  const out = item.json.output;\n  if (typeof out === 'string') {\n    item.json.output = out.replaceAll('- **', '**');\n  }\n}\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1616,
        6640
      ],
      "id": "4beefb43-bc9b-4598-a1aa-84569f8bf9c0",
      "name": "Code7"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=viết 1 bài post lên facebook \ngiới thiệu Vincent – Cmsmart Ecommerce\nbài post theo kiểu chia sẻ tip giải pháp cho 1 nỗi đau chính của icp client về AI\nviết bằng tiếng Anh, dễ đọc, ngắn gọn\nkiểu hook - có số lượng tips, ví dụ : Top 5 secrect tips..\nnội dung luân phiên theo từng bài post, nhưng đều xoay quanh chủ đề về AI và Ecommerce, chọn các chủ đề có nhiều người quan tâm nhất và dễ làm, dễ viral, có giải thích hoặc chi tiết của tips,\n+ nếu viết là top 4 Prompt thì sẽ bao gồm Prompt chi tiết; \n+ giới thiệu tên của các AI apps hay AI tools và sự mới lạ của nó và tiềm năng ứng dụng vào giải quyết các vấn đề của Ecommerce và có thể kèm URL đến apps hay tools đó\n+ giới thiệu các AI Automation Workflow integration mà Ecommerce nên sử dụng\nsau Tips là 1 case study có tên họ, quốc gia, và các chỉ số...để minh họa\nkết thúc bằng cách cam kết chia sẻ tips AI hàng tuần nên mời user like fan pages để không bỏ lỡ\nTrả về output như mẫu dưới đây:\n\n**ID:** STT: 34,Nỗi đau: Customers don’t account for window curvature.,Chi tiết: Prints appear distorted when viewed from outside.,Hành động cụ thể: Curved Surface Simulation: Displays real-world perspective.,Giá trị mang lại: Car Sunshades,note:\\n\\n**Pain_Point:** Prints appear distorted when viewed from outside due to unaccounted window curvature.\\n\\n**Hook:** 7 Simple Ways to Make Your Car Sunshades Look Perfect from Every Angle\\n\\n**Image_URL:** [Insert URL Here]\\n\\n**Content:**\\n\\nYou roll up to a car show with your sunshade, all proud, then you notice - it’s a distorted mess! Here are 7 steps to make sure your car sunshade design looks like it belongs there without making you a window curvature engineer.\\n\\nStep 1. Understand the curve.\\n- Windows aren't flat. Account for this in your design. 😎\\n\\nStep 2. Curved Surface Simulation (CSS).\\n- Printcart's CSS gives you a preview in 3D - see how it looks from outside. 🌐\\n\\nStep 3. Design with precision.\\n- Use tools like grid systems or guides to ensure your design fits the curve seamlessly. 📐\\n\\nStep 4. Test, test, test!\\n- Check your design on the vehicle. Remember, the outside view is what matters! 🚗\\n\\nStep 5. Choose the right materials.\\n- Some materials adapt better to curvature. Ask for expert advice. 🛋️\\n\\nStep 6. Optimize with opacity.\\n- Adjust the transparency to improve contrast and visibility from outside. 🕶️\\n\\nStep 7. Engage Printcart's exclusive features.\\n- Our Web-to-Print solution ensures your prints take the shape of the world, for real! 🌎\\n\\nAt Printcart, we help you turn those disappointed looks into drooling mouths with car sunshades that are simply stunning from any angle.  \\n\\nWhat step do you think would help you the most?\\n\\n**Hashtag:** #CarSunshades #Printcart #DesignTips #VehicleDesign #3DPreview #SunshadesDoneRight #AutomotiveSolutions #WindowCurvature #PrintTechnology #CurvedPrints\\n\\n**Slide:**\\n\\n**Step 1. Understand the curve**\\n- Windows are not flat surfaces.\\n- Design in anticipation of the curve.\\n- No one wants a Picasso on their windshield.\\n\\n**Step 2. Use Curved Surface Simulation**\\n- Real-time 3D preview with CSS.\\n- Grab your virtual glasses, let's test!\\n- Prints adapt to real-world views.\\n\\n**Step 3. Design with Precision**\\n- Grid systems, guides - your best friends.\\n- Think before you ink!\\n- Keep it clean, curve-friendly.\\n\\n**Step 4. Test, Test, Test!**\\n- Virtual fits, real tests.\\n- Get that vehicle inspection pass.\\n- Outside view is key!\\n\\n**Step 5. Choose the right materials**\\n- Some materials are curve-friendly.\\n- Ask for guidance, receive perfection.\\n- Your design deserves it!\\n\\n**Step 6. Optimize Opacity**\\n- Contrast and visibility are crucial.\\n- Make your design pop out!\\n- The right shade makes a statement.\\n\\n**Step 7. Engage Exclusive Features of Printcart**\\n- Turn your website into a design hub.\\n- No coding, just clicking.\\n- Look like a pro with hardly any effort.\\n\\n**Comment_Content:** \\n\\nDid your first sunshade come out all wonky? What went wrong?\\n\\n**CTA:** \\n\\nCurious for more curve-busting tips? Check out: https://solution.printcart.com/project-request.html\\n\\n**Status:** Nháp / Đã đăng\\n\\n---\\n\\n**Lưu kết quả vào bảng [ICP_Pain_Stories] với các trường:**\\n\\nID | Pain_Point | Hook | Image_URL | Content | Slide | Comment_Content | CTA | Status\\n\\n--- \n\nĐoạn **Slide:** phải như sau:\n\\n\\n**Slide:**\\n\\n**Step 1. Identify the Problem**\\n\\n- Designs often get cut off at the edges.\\n- Recognize the circular design challenge.\\n- Does your software even support this?\\n\\n**Step 2. Add Circular Safe Zones**\\n\\n- Circular Safe Zone Tool = Game Changer.\\n- Keep your designs intact, always.\\n- No more Pac-Man logos!\\n\\n**Step 3. Adjust Design Practices**\\n\\n- Train your team on safe zone designs.\\n- Keep it simple, keep it clean.\\n- Avoid design disasters before they happen.\\n\\n**Step 4. Preview in 3D**\\n\\n- Test your design in 3D - virtually perfect.\\n- See your creation before it comes to life. \\n- It's like virtual reality, but for plates!\\n\\n**Step 5. Automate Quality Checking**\\n\\n- Use automated tools to spot issues.\\n- Printcart checks what you might miss.\\n- Smart solutions for smart business.\\n\\n",
        "options": {}
      },
      "id": "3bda6615-1a65-44be-9725-64e535286344",
      "name": "AI Agent Story Telling3",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -1184,
        5472
      ]
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "521a3212-6269-4766-a1f0-a16375e5e2e8",
      "name": "OpenAI Chat Model9",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -1264,
        5680
      ]
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  try {\n    if (item.json.output && typeof item.json.output === 'string') {\n      let messageContent = item.json.output\n        .replace(/,\\s*$/gm, '') // Xóa dấu phẩy cuối dòng\n        .replace(/\"/g, '')      // Xóa dấu ngoặc kép\n        .trim();\n\n      // ✅ Hàm xử lý cả 2 kiểu slide: subject-describe & - **Step X**\n      function extractSlides(text) {\n        const slides = [];\n\n        // Kiểu 1: subject + describe\n        const subjectDescribePattern = /\\*\\*subject:\\*\\*\\s*(.*?)\\n\\*\\*describe:\\*\\*\\n([\\s\\S]*?)(?=\\n\\*\\*subject:|\\Z)/g;\n        let match;\n        while ((match = subjectDescribePattern.exec(text)) !== null) {\n          const subject = match[1].trim();\n          const describe = match[2].trim().split('\\n')\n            .map(line => line.replace(/^-/, '').trim())\n            .filter(line => line.length > 0);\n          slides.push({ subject, describe });\n        }\n\n        // Kiểu 2: - **Step X** + mô tả\n        const stepPattern = /-\\s\\*\\*(Step\\s\\d+\\..*?)\\*\\*\\n((?:\\s{2,}-\\s.*\\n?)+)/g;\n        let matchStep;\n        while ((matchStep = stepPattern.exec(text)) !== null) {\n          const subject = matchStep[1].trim();\n          const describeRaw = matchStep[2];\n          const describe = describeRaw.split('\\n')\n            .map(line => line.trim().replace(/^-\\s/, ''))\n            .filter(line => line.length > 0);\n          slides.push({ subject, describe });\n        }\n\n        return slides;\n      }\n\n      // ✅ Hàm trích xuất các field chính\n      function extractContent(data) {\n        const getField = (label, fallback = '') => {\n          const regex = new RegExp(`\\\\*\\\\*${label}:\\\\*\\\\*\\\\s*([\\\\s\\\\S]*?)(?=\\\\n\\\\*\\\\*|\\\\n---|\\\\n$|$)`, 'i');\n          const match = data.match(regex);\n          return (match && match[1].trim()) || fallback;\n        };\n\n        return {\n          post: {\n            id: getField('ID', 'Not specified'),\n            pain_point: getField('Pain_Point', 'Not specified'),\n            hook: getField('Hook', 'Not specified'),\n            image_url: getField('Image_URL', ''),\n            content: getField('Content', ''),\n            slide: extractSlides(data),\n            comment_content: getField('Comment_Content', ''),\n            cta: getField('CTA', ''),\n            status: getField('Status', 'Not specified')\n          }\n        };\n      }\n\n      const extractedData = extractContent(messageContent);\n\n      if (!extractedData.post.id || extractedData.post.id === 'Not specified') {\n        throw new Error(\"No valid ID extracted from input.\");\n      }\n\n      item.json = {\n        ...item.json,\n        extracted_data: extractedData\n      };\n    } else {\n      item.json = {\n        ...item.json,\n        error: \"No valid output found in input.\"\n      };\n    }\n  } catch (error) {\n    item.json = {\n      ...item.json,\n      error: \"Error processing content\",\n      details: error.message\n    };\n  }\n}\n\nreturn $input.all();\n"
      },
      "id": "2acff3ce-2bab-4c35-8410-b7bd85af6caa",
      "name": "convert ouput7",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -720,
        7584
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20",
          "mode": "list",
          "cachedResultName": "Workflow_Social_Printcart",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 180315726,
          "mode": "list",
          "cachedResultName": "Post share tip",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XyVHswvF9XovIXlN1gxRh_lp4R9_6K8CAzhXj5JUz20/edit#gid=180315726"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "STT": "==ROW()-1",
            "Content": "={{ $('convert ouput7').item.json.extracted_data.post.content }}",
            "pain point": "={{ $('List share tips1').item.json[\"Nỗi đau\"] }}",
            "hook ": "={{ $('convert ouput7').item.json.extracted_data.post.hook }}",
            "Coment content": "={{ $('convert ouput7').item.json.extracted_data.post.comment_content }}",
            "CTA": "={{ $('convert ouput7').item.json.extracted_data.post.cta }}",
            "Status": "done",
            "Note": "={{ $now.toISODate() }}",
            "parent match": "={{ $json.extracted_data.post.id }}",
            "Image url ": "={{ $json.extracted_data.post.image_url }}"
          },
          "matchingColumns": [
            "Content"
          ],
          "schema": [
            {
              "id": "STT",
              "displayName": "STT",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "parent match",
              "displayName": "parent match",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "pain point",
              "displayName": "pain point",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "hook ",
              "displayName": "hook ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Image url ",
              "displayName": "Image url ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Content",
              "displayName": "Content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Coment content",
              "displayName": "Coment content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "CTA",
              "displayName": "CTA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Note",
              "displayName": "Note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Channel",
              "displayName": "Channel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "26797531-cb6e-4d73-8080-1434ef9b3a07",
      "name": "Post share tip2",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        512,
        7840
      ]
    },
    {
      "parameters": {
        "content": "# Step 1️⃣: Share tip Written Content\nNote:  \nYou could use the output of step 1 to create your written content and manually post if required.  \nYou so not have to implement step 2.",
        "height": 760,
        "width": 2417,
        "color": 4
      },
      "id": "a17c7add-0a6a-4af0-9fd9-1dcec41b9814",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1680,
        7312
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Step 2️⃣: Create Image or Upload Image for Social Post",
        "height": 835,
        "width": 1255,
        "color": 4
      },
      "id": "e9060761-c1c8-43fe-8747-0b485c1e47e6",
      "name": "Sticky Note25",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1600,
        8160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Step 3️⃣: Publish Final Social Media Posts",
        "height": 595,
        "width": 1964,
        "color": 3
      },
      "id": "e84cfac7-44a8-4272-b56b-0a7a9b769f4c",
      "name": "Sticky Note28",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -128,
        8288
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items\nfor (const item of $input.all()) {\n  try {\n    \n    // Kiểm tra và xử lý extracted_data.post.content nếu tồn tại\n    if (item.json.extracted_data && item.json.extracted_data.post && item.json.extracted_data.post.content) {\n      item.json.extracted_data.post.content = item.json.extracted_data.post.content.replace(/\\n/g, '\\\\n');\n    }\n    \n    // Luôn xử lý output để đảm bảo tính nhất quán\n    if (item.json.output) {\n      item.json.output = item.json.output.replace(/\\n/g, '\\\\n');\n    }\n    \n    // Nếu không có cả output lẫn extracted_data.post.content, ném lỗi\n    if (!item.json.output && !(item.json.extracted_data && item.json.extracted_data.post && item.json.extracted_data.post.content)) {\n      throw new Error(\"No valid content field found to process.\");\n    }\n  } catch (error) {\n    // Ghi lỗi vào một trường phù hợp nếu xử lý thất bại\n    item.json.error = \"Error processing content: \" + error.message;\n  }\n}\n\n// Trả về danh sách các item đã được cập nhật\nreturn $input.all();"
      },
      "id": "f2405ed9-3c7a-4514-9c9c-c1f118ba0b2b",
      "name": "convert content6",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1504,
        8368
      ]
    },
    {
      "parameters": {
        "jsCode": "const result = [];\n\nfor (const item of $input.all()) {\n  try {\n    const post = item.json?.extracted_data?.post;\n    const rawOutput = item.json.output;\n\n    if (rawOutput && typeof rawOutput === 'string') {\n      // ✅ Bắt được Slide: xuống dòng\n      const slideSectionMatch = rawOutput.match(/\\*\\*Slide[:：]?\\*\\*\\s*\\n([\\s\\S]*)/i);\n\n      if (slideSectionMatch) {\n        const slideSection = slideSectionMatch[1].trim();\n        const lines = slideSection.split('\\n').map(line => line.trim()).filter(Boolean);\n\n        const slides = [];\n        let currentSlide = null;\n        let isDescribeBlock = false;\n\n        for (const line of lines) {\n          // CASE 1: - **subject:**\n          if (line.toLowerCase().startsWith('- **subject:**')) {\n            if (currentSlide && currentSlide.subject && currentSlide.describe.length > 0) {\n              slides.push(currentSlide);\n            }\n            currentSlide = {\n              subject: line.replace(/- \\*\\*subject:\\*\\*/i, '').replace(/\"/g, '').trim(),\n              describe: []\n            };\n            isDescribeBlock = true;\n          }\n\n          // CASE 2: **subject:**\n          else if (line.toLowerCase().startsWith('**subject:**')) {\n            if (currentSlide && currentSlide.subject && currentSlide.describe.length > 0) {\n              slides.push(currentSlide);\n            }\n            currentSlide = {\n              subject: line.replace(/\\*\\*subject:\\*\\*/i, '').replace(/\"/g, '').trim(),\n              describe: []\n            };\n            isDescribeBlock = true;\n          }\n\n          // CASE 3: - subject:\n          else if (line.toLowerCase().startsWith('- subject:')) {\n            if (currentSlide && currentSlide.subject && currentSlide.describe.length > 0) {\n              slides.push(currentSlide);\n            }\n            currentSlide = {\n              subject: line.replace(/- subject:/i, '').replace(/\"/g, '').trim(),\n              describe: []\n            };\n            isDescribeBlock = true;\n          }\n\n          // CASE 4: subject:\n          else if (line.toLowerCase().startsWith('subject:')) {\n            if (currentSlide && currentSlide.subject && currentSlide.describe.length > 0) {\n              slides.push(currentSlide);\n            }\n            currentSlide = {\n              subject: line.replace(/subject:/i, '').replace(/\"/g, '').trim(),\n              describe: []\n            };\n            isDescribeBlock = true;\n          }\n\n          // CASE 5: **Step X. Title**\n          else if (/^\\*\\*Step\\s*\\d+\\./i.test(line)) {\n            if (currentSlide && currentSlide.subject && currentSlide.describe.length > 0) {\n              slides.push(currentSlide);\n            }\n            currentSlide = {\n              subject: line.replace(/\\*\\*/g, '').replace(/\"/g, '').trim(),\n              describe: []\n            };\n            isDescribeBlock = true;\n          }\n\n          // CASE 6: - **Step X. Title:**\n          else if (/^- \\*\\*Step\\s*\\d+\\..*?\\*\\*:/.test(line)) {\n            if (currentSlide && currentSlide.subject && currentSlide.describe.length > 0) {\n              slides.push(currentSlide);\n            }\n            const stepTitle = line.replace(/^- \\*\\*(Step\\s*\\d+\\..*?)\\*\\*:/, '$1').replace(/\"/g, '').trim();\n            currentSlide = {\n              subject: stepTitle,\n              describe: []\n            };\n            isDescribeBlock = true;\n          }\n\n          // CASE 7: mô tả bắt đầu bằng - hoặc .\n          else if (isDescribeBlock && (line.startsWith('-') || line.startsWith('.'))) {\n            const cleanLine = line.replace(/^[-•.]?\\s*/, '').replace(/\"/g, '').trim();\n            currentSlide?.describe.push(cleanLine);\n          }\n            \n          else if (\n            (line.startsWith('.') || line.startsWith('-') || line.startsWith('•')) &&\n            currentSlide\n          ) {\n            const cleanLine = line.replace(/^[-•.]?\\s*/, '').trim();\n            currentSlide.describe.push(cleanLine);\n          }\n\n          // CASE 8: bắt đầu mô tả\n          else if (line.toLowerCase().startsWith('**describe:**') || line.toLowerCase().startsWith('- describe:')) {\n            isDescribeBlock = true;\n          }\n        }\n\n        // Push slide cuối cùng\n        if (currentSlide && currentSlide.subject && currentSlide.describe.length > 0) {\n          slides.push(currentSlide);\n        }\n\n        // Output từng slide\n        for (const slide of slides) {\n          result.push({\n            json: {\n              subject: slide.subject,\n              describe: slide.describe.join('\\\\n')\n            }\n          });\n        }\n\n        // Gán vào post nếu cần\n        if (post) item.json.extracted_data.post.slide = slides;\n\n        // Chuẩn hóa content và output\n        if (typeof post?.content === 'string') {\n          item.json.extracted_data.post.content = post.content.replace(/\\n/g, '\\\\n');\n        }\n        if (typeof item.json.output === 'string') {\n          item.json.output = item.json.output.replace(/\\n/g, '\\\\n');\n        }\n\n      } else {\n        result.push({\n          json: { error: \"No slide section found in output.\" }\n        });\n      }\n\n    } else {\n      result.push({\n        json: { error: \"Invalid or missing output string.\" }\n      });\n    }\n\n  } catch (error) {\n    result.push({\n      json: {\n        error: \"Error processing slide content\",\n        details: error.message\n      }\n    });\n  }\n}\n\nreturn result;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1488,
        8720
      ],
      "id": "c3108da5-1e6e-4f79-b47b-fad66adf7d1f",
      "name": "slide3"
    },
    {
      "parameters": {
        "url": "=https://api.pexels.com/v1/search?query=nature landscape background\n&per_page=1&page={{ Math.floor(Math.random() * 50) + 1 }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": " yKcmrC8LfgbNcXdf8yYlrsaL9cMZOadZfkSUCVsWikUYuBNc27t3jAJ6"
            }
          ]
        },
        "options": {}
      },
      "id": "0308a42e-2503-4f88-a7cd-633044b4bc11",
      "name": "banner ngẫu nhiên5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1216,
        8368
      ]
    },
    {
      "parameters": {
        "url": "={{ $json.polling_url }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer placid-4nwkicuohm9sx5aq-dbtm9ajtyd64xenv"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "45e0db2d-6720-4376-939c-027404b736b0",
      "name": "Get placid5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -544,
        8368
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.placid.app/api/rest/images",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer placid-4nwkicuohm9sx5aq-dbtm9ajtyd64xenv"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"template_uuid\": \"06kurqzyqq8o0\",\n  \"layers\": {\n    \"title\": {\n      \"text\": \"{{ $('convert ouput7').item.json.extracted_data.post.hook }}\",\n      \"style\": {\n        \"fontSize\": 85\n      }\n    },\n    \"glow\": {\n      \"image\": \"{{ $json.photos[0].src.original }}\",\n      \"effects\": {\n        \"blur\": {\n          \"radius\": 25\n        }\n      }\n    }\n  }\n}\n",
        "options": {}
      },
      "id": "46d76a33-0566-4d38-b185-abb7d733b65f",
      "name": "placid banner5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -960,
        8368
      ]
    },
    {
      "parameters": {
        "amount": 10
      },
      "id": "5009b6ca-7cf8-4b96-94af-a11b41459d43",
      "name": "Wait5",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -736,
        8368
      ],
      "webhookId": "31ab450b-7648-4489-8324-4126fa3580d2"
    },
    {
      "parameters": {
        "amount": 20
      },
      "id": "41305b84-9a8c-4d53-9524-5944e574b52b",
      "name": "Wait15",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -720,
        8720
      ],
      "webhookId": "31ab450b-7648-4489-8324-4126fa3580d2"
    },
    {
      "parameters": {
        "url": "=https://api.pexels.com/v1/search?query=minimal aesthetic background&per_page=1&page={{ Math.floor(Math.random() * 50) + 1 }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": " yKcmrC8LfgbNcXdf8yYlrsaL9cMZOadZfkSUCVsWikUYuBNc27t3jAJ6"
            }
          ]
        },
        "options": {}
      },
      "id": "d921503a-aef7-4488-b841-1bfabd284782",
      "name": "banner ngẫu nhiên14",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1248,
        8720
      ]
    },
    {
      "parameters": {
        "url": "={{ $json.polling_url }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer placid-4nwkicuohm9sx5aq-dbtm9ajtyd64xenv"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "d56c4e22-772a-48c0-8620-0ce6cc718d22",
      "name": "Get placid15",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -496,
        8720
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.placid.app/api/rest/images",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer placid-4nwkicuohm9sx5aq-dbtm9ajtyd64xenv"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"template_uuid\": \"h14ob6cgibdui\",\n  \"layers\": {\n    \"title\": {\n      \"text\": \"{{ $('slide3').item.json.subject }}\",\n      \"style\": {\n        \"fontSize\": 80,\n        \"fontFamily\": \"Asap Italic\",\n        \"color\": \"#FFFFFF\"\n      }\n    },\n    \"text\": {\n      \"text\": \"{{ $('slide3').item.json.describe }}\",\n      \"style\": {\n        \"fontSize\": 30,\n        \"fontFamily\": \"Asap Italic\",\n        \"color\": \"#FFFFFF\"\n      }\n    },\n    \"glow\": {\n      \"image\": \"{{ $json.photos[0].src.original }}\",\n      \"effects\": {\n        \"blur\": {\n          \"radius\": 25\n        }\n      }\n    }\n  }\n}\n",
        "options": {}
      },
      "id": "f92c3857-59e4-4690-88b7-85b39cb9dc66",
      "name": "placid banner15",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -960,
        8720
      ]
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -64,
        8480
      ],
      "id": "ba09900d-203c-4d4e-941e-610c1cef4964",
      "name": "Merge3"
    },
    {
      "parameters": {
        "jsCode": "// Get all image URLs from the input list\nconst urls = $input.all().map(item => item.json.image_url);\n\n// Check if there are any URLs, and then join them with commas, ensuring no leading comma\nconst joinedUrls = urls.length > 0 ? urls.join(', ') : '';\n\n// Output the final JSON object with the concatenated image_url string\nreturn [{\n  json: {\n    image_urls: joinedUrls\n  }\n}];\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        192,
        8480
      ],
      "id": "e993f5b1-2283-4146-811c-c09f87eaaca1",
      "name": "item img convert to chuỗi2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.pdf.co/v1/pdf/convert/from/image",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "{\n  \"x-api-key\": \"thanhtung2432004@gmail.com_w2yKWUQ83aDMdCVVugOyE1uZbT8PRDw8mMNbuCQTA3G7cbwHN3sQfgT1SnWM2cHk\", \n  \"Content-Type\": \"application/json\"\n}\n",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"name\": \"output-from-placid.pdf\",\n  \"url\": \"{{ $json.image_urls }}\",\n  \"async\": false\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        464,
        8480
      ],
      "id": "801acbae-7ac9-4719-838c-2d2cf1a8dd0f",
      "name": "Convert to PDF3"
    },
    {
      "parameters": {
        "url": "={{ $('Convert to PDF3').item.json.url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1040,
        8480
      ],
      "id": "bbd77bf1-9c45-448b-97da-c1511818ffd8",
      "name": "Get a PDF2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.linkedin.com/rest/documents",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "linkedInOAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "action",
              "value": "initializeUpload"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer AQXfQKW37if5kkVeU9hdkwI3j2Y-KlxpUIq9n_Z_txUPyW6jesmOm15zCESgmGJuqMGujKQai4a4YwujRQ_RtsYlnKxjErXPvy9mbt9sezgrX6iYW0O_Q9aDdWPF1OCAsG13xdUMitVALj1j2lKC3ScfNH5oyEiPjJEUzuccuatUOqPZjKP1A_4gVAdAftaYUchNAThoKlVwAKnzzt6THbQEnv-lAtJJy-WZ0_ersXHVl4CtGCOuV8aDoOTKTIxCXNvZyb6vdZLqp2jSHn2Stsxh59rJJqYU16SmHbAVghwJuv0_3pBqbJg07HMq90B47aPbvhnWTDhvmPVGkkN_Q63UGysYzQ"
            },
            {
              "name": "LinkedIn-Version",
              "value": "202306"
            },
            {
              "name": "X-Restli-Protocol-Version",
              "value": "2.0.0"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"initializeUploadRequest\": {\n    \"owner\": \"urn:li:organization:20459490\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        752,
        8480
      ],
      "id": "fcadf7b6-8fda-49be-92d9-864e60bb3683",
      "name": "Upload PDF2"
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "={{ $json.value.uploadUrl }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/pdf"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {}
      },
      "id": "d7159180-b3e4-4d6a-8be1-c944e676d3a6",
      "name": "PUT PDF2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1344,
        8480
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.linkedin.com/v2/ugcPosts",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "linkedInOAuth2Api",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"owner\": \"urn:li:person:PMPSdYU5x6\",  \n  \"containerEntity\": \"urn:li:group:14626358\",  \n  \"lifecycleState\": \"PUBLISHED\",\n  \"specificContent\": {\n    \"com.linkedin.ugc.ShareContent\": {\n      \"shareCommentary\": {\n        \"text\": \"{{ $('convert content6').first().json.output }}\"\n      },\n      \"shareMediaCategory\": \"IMAGE\",  \n      \"media\": [\n        {\n          \"status\": \"READY\",\n          \"media\": \"{{ $('Get a PDF2').item.json.value.document }}\", \n          \"description\": {\n            \"text\": \"Description of the image\"\n          },\n          \"title\": {\n            \"text\": \"Image Title\"\n          }\n        }\n      ]\n    }\n  },\n  \"visibility\": {\n    \"com.linkedin.ugc.MemberNetworkVisibility\": \"PUBLIC\"\n  }\n}\n",
        "options": {}
      },
      "id": "78b279ff-0fca-4f1c-aa75-7471a7674bb9",
      "name": "Print Commerce Group6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1648,
        8512
      ]
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  const out = item.json.output;\n  if (typeof out === 'string') {\n    item.json.output = out.replaceAll('- **', '**');\n  }\n}\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1696,
        8720
      ],
      "id": "624a801a-700c-40b1-bcd1-df4eb978fbeb",
      "name": "Code8"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=viết 1 bài post lên facebook \ngiới thiệu Vincent – Cmsmart Ecommerce\nbài post theo kiểu chia sẻ tip giải pháp cho 1 nỗi đau chính của icp client về AI\nviết bằng tiếng Anh, dễ đọc, ngắn gọn\nkiểu hook - có số lượng tips, ví dụ : Top 5 secrect tips..\nnội dung luân phiên theo từng bài post, nhưng đều xoay quanh chủ đề về AI và Ecommerce, chọn các chủ đề có nhiều người quan tâm nhất và dễ làm, dễ viral, có giải thích hoặc chi tiết của tips,\n+ nếu viết là top 4 Prompt thì sẽ bao gồm Prompt chi tiết; \n+ giới thiệu tên của các AI apps hay AI tools và sự mới lạ của nó và tiềm năng ứng dụng vào giải quyết các vấn đề của Ecommerce và có thể kèm URL đến apps hay tools đó\n+ giới thiệu các AI Automation Workflow integration mà Ecommerce nên sử dụng\nsau Tips là 1 case study có tên họ, quốc gia, và các chỉ số...để minh họa\nkết thúc bằng cách cam kết chia sẻ tips AI hàng tuần nên mời user like fan pages để không bỏ lỡ\nTrả về output như mẫu dưới đây:\n\n**ID:** STT: 34,Nỗi đau: Customers don’t account for window curvature.,Chi tiết: Prints appear distorted when viewed from outside.,Hành động cụ thể: Curved Surface Simulation: Displays real-world perspective.,Giá trị mang lại: Car Sunshades,note:\\n\\n**Pain_Point:** Prints appear distorted when viewed from outside due to unaccounted window curvature.\\n\\n**Hook:** 7 Simple Ways to Make Your Car Sunshades Look Perfect from Every Angle\\n\\n**Image_URL:** [Insert URL Here]\\n\\n**Content:**\\n\\nYou roll up to a car show with your sunshade, all proud, then you notice - it’s a distorted mess! Here are 7 steps to make sure your car sunshade design looks like it belongs there without making you a window curvature engineer.\\n\\nStep 1. Understand the curve.\\n- Windows aren't flat. Account for this in your design. 😎\\n\\nStep 2. Curved Surface Simulation (CSS).\\n- Printcart's CSS gives you a preview in 3D - see how it looks from outside. 🌐\\n\\nStep 3. Design with precision.\\n- Use tools like grid systems or guides to ensure your design fits the curve seamlessly. 📐\\n\\nStep 4. Test, test, test!\\n- Check your design on the vehicle. Remember, the outside view is what matters! 🚗\\n\\nStep 5. Choose the right materials.\\n- Some materials adapt better to curvature. Ask for expert advice. 🛋️\\n\\nStep 6. Optimize with opacity.\\n- Adjust the transparency to improve contrast and visibility from outside. 🕶️\\n\\nStep 7. Engage Printcart's exclusive features.\\n- Our Web-to-Print solution ensures your prints take the shape of the world, for real! 🌎\\n\\nAt Printcart, we help you turn those disappointed looks into drooling mouths with car sunshades that are simply stunning from any angle.  \\n\\nWhat step do you think would help you the most?\\n\\n**Hashtag:** #CarSunshades #Printcart #DesignTips #VehicleDesign #3DPreview #SunshadesDoneRight #AutomotiveSolutions #WindowCurvature #PrintTechnology #CurvedPrints\\n\\n**Slide:**\\n\\n**Step 1. Understand the curve**\\n- Windows are not flat surfaces.\\n- Design in anticipation of the curve.\\n- No one wants a Picasso on their windshield.\\n\\n**Step 2. Use Curved Surface Simulation**\\n- Real-time 3D preview with CSS.\\n- Grab your virtual glasses, let's test!\\n- Prints adapt to real-world views.\\n\\n**Step 3. Design with Precision**\\n- Grid systems, guides - your best friends.\\n- Think before you ink!\\n- Keep it clean, curve-friendly.\\n\\n**Step 4. Test, Test, Test!**\\n- Virtual fits, real tests.\\n- Get that vehicle inspection pass.\\n- Outside view is key!\\n\\n**Step 5. Choose the right materials**\\n- Some materials are curve-friendly.\\n- Ask for guidance, receive perfection.\\n- Your design deserves it!\\n\\n**Step 6. Optimize Opacity**\\n- Contrast and visibility are crucial.\\n- Make your design pop out!\\n- The right shade makes a statement.\\n\\n**Step 7. Engage Exclusive Features of Printcart**\\n- Turn your website into a design hub.\\n- No coding, just clicking.\\n- Look like a pro with hardly any effort.\\n\\n**Comment_Content:** \\n\\nDid your first sunshade come out all wonky? What went wrong?\\n\\n**CTA:** \\n\\nCurious for more curve-busting tips? Check out: https://solution.printcart.com/project-request.html\\n\\n**Status:** Nháp / Đã đăng\\n\\n---\\n\\n**Lưu kết quả vào bảng [ICP_Pain_Stories] với các trường:**\\n\\nID | Pain_Point | Hook | Image_URL | Content | Slide | Comment_Content | CTA | Status\\n\\n--- \n\nĐoạn **Slide:** phải như sau:\n\\n\\n**Slide:**\\n\\n**Step 1. Identify the Problem**\\n\\n- Designs often get cut off at the edges.\\n- Recognize the circular design challenge.\\n- Does your software even support this?\\n\\n**Step 2. Add Circular Safe Zones**\\n\\n- Circular Safe Zone Tool = Game Changer.\\n- Keep your designs intact, always.\\n- No more Pac-Man logos!\\n\\n**Step 3. Adjust Design Practices**\\n\\n- Train your team on safe zone designs.\\n- Keep it simple, keep it clean.\\n- Avoid design disasters before they happen.\\n\\n**Step 4. Preview in 3D**\\n\\n- Test your design in 3D - virtually perfect.\\n- See your creation before it comes to life. \\n- It's like virtual reality, but for plates!\\n\\n**Step 5. Automate Quality Checking**\\n\\n- Use automated tools to spot issues.\\n- Printcart checks what you might miss.\\n- Smart solutions for smart business.\\n\\n",
        "options": {}
      },
      "id": "c99338d6-abb3-425e-835a-f75a76d8343e",
      "name": "AI Agent Story Telling4",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -1264,
        7552
      ]
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "ece04956-4edf-42e3-aa38-54d83d4ed0a0",
      "name": "OpenAI Chat Model10",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -1344,
        7760
      ]
    },
    {
      "parameters": {
        "content": "## ALISA\n",
        "height": 1940,
        "width": 5680,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2928,
        7184
      ],
      "typeVersion": 1,
      "id": "4a2211ff-aeb5-4d6e-beef-bd116dfe41e0",
      "name": "Sticky Note9"
    }
  ],
  "pinData": {},
  "connections": {
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          },
          {
            "node": "Đánh dấu pain pain đã use",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "AI Agent Story Telling",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Story Telling",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "profile": {
      "main": [
        [
          {
            "node": "List pain poin",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List pain poin": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Facebook  Printcart POD1": {
      "main": [
        [
          {
            "node": "Coment1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert ouput": {
      "main": [
        [
          {
            "node": "convert content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert content": {
      "main": [
        [
          {
            "node": "Post Story Telling",
            "type": "main",
            "index": 0
          },
          {
            "node": "banner ngẫu nhiên2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Tips Sharing",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Đánh dấu tip đã use",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "AI Agent Tips Sharing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert ouput1": {
      "main": [
        [
          {
            "node": "Post share tip",
            "type": "main",
            "index": 0
          },
          {
            "node": "convert content1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List share tips": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "profile3": {
      "main": [
        [
          {
            "node": "List share tips",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post Inforgraphich2": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "chọn input đầu": {
      "main": [
        [
          {
            "node": "AI Agent Tips Sharing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Tips Sharing1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [],
        [
          {
            "node": "chọn input đầu",
            "type": "main",
            "index": 0
          },
          {
            "node": "Đánh dấu tip đã use1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "profile1": {
      "main": [
        [
          {
            "node": "Post Inforgraphich2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Tips Sharing": {
      "main": [
        [
          {
            "node": "convert ouput1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Tips Sharing1": {
      "main": [
        [
          {
            "node": "convert ouput4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert ouput4": {
      "main": [
        [
          {
            "node": "convert content2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Facebook  Printcart POD2": {
      "main": [
        [
          {
            "node": "Coment4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert content2": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          },
          {
            "node": "Facebook  Printcart POD2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Story Telling": {
      "main": [
        [
          {
            "node": "convert ouput",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "lọc lấy mỗi ingraphic": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check tỉ lệ": {
      "main": [
        [
          {
            "node": "Post Inforgraphich1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "h/w check": {
      "main": [
        [
          {
            "node": "check tỉ lệ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "Check width height1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check width height1": {
      "main": [
        [
          {
            "node": "h/w check",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post Inforgraphich1": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "seacher infographic": {
      "main": [
        [
          {
            "node": "lọc lấy mỗi ingraphic",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "seacher gg trends3": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Post Inforgraphich",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "seacher gg trends3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RSS Read reuter": {
      "main": [
        [
          {
            "node": "filter category",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "printweek business": {
      "main": [
        [
          {
            "node": "filter category1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "printweek digital": {
      "main": [
        [
          {
            "node": "filter category2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "printweek packaging": {
      "main": [
        [
          {
            "node": "filter category3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "printweek printbuying": {
      "main": [
        [
          {
            "node": "filter category4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google News": {
      "main": [
        [
          {
            "node": "check date 7 date after5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "bloomberg technology": {
      "main": [
        [
          {
            "node": "filter category6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "bloomberg markets": {
      "main": [
        [
          {
            "node": "filter category7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "filter category": {
      "main": [
        [
          {
            "node": "check date 7 date after",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "filter category1": {
      "main": [
        [
          {
            "node": "check date 7 date after1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "filter category2": {
      "main": [
        [
          {
            "node": "check date 7 date after2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "filter category3": {
      "main": [
        [
          {
            "node": "check date 7 date after3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "filter category4": {
      "main": [
        [
          {
            "node": "check date 7 date after4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "filter category5": {
      "main": [
        [
          {
            "node": "check date 7 date after5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "filter category6": {
      "main": [
        [
          {
            "node": "check date 7 date after6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "filter category7": {
      "main": [
        [
          {
            "node": "check date 7 date after7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check date 7 date after": {
      "main": [
        [
          {
            "node": "list news",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check date 7 date after1": {
      "main": [
        [
          {
            "node": "list news1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check date 7 date after2": {
      "main": [
        [
          {
            "node": "list news2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check date 7 date after3": {
      "main": [
        [
          {
            "node": "list news3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check date 7 date after4": {
      "main": [
        [
          {
            "node": "list news4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check date 7 date after5": {
      "main": [
        [
          {
            "node": "list news5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check date 7 date after6": {
      "main": [
        [
          {
            "node": "list news6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check date 7 date after7": {
      "main": [
        [
          {
            "node": "list news7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "RSS Read reuter",
            "type": "main",
            "index": 0
          },
          {
            "node": "printweek business",
            "type": "main",
            "index": 0
          },
          {
            "node": "printweek digital",
            "type": "main",
            "index": 0
          },
          {
            "node": "printweek packaging",
            "type": "main",
            "index": 0
          },
          {
            "node": "printweek printbuying",
            "type": "main",
            "index": 0
          },
          {
            "node": "Google News",
            "type": "main",
            "index": 0
          },
          {
            "node": "bloomberg technology",
            "type": "main",
            "index": 0
          },
          {
            "node": "bloomberg markets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image": {
      "main": [
        [
          {
            "node": "GET A IMAGE2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Facebook  Printcart POD1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "AI Agent Story Telling4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "list news8": {
      "main": [
        [
          {
            "node": "chọn 6 bài đầu và merge to 1 chuỗi",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "profile2": {
      "main": [
        [
          {
            "node": "list news8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Tips Sharing2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "chọn 6 bài đầu và merge to 1 chuỗi": {
      "main": [
        [
          {
            "node": "AI Agent Tips Sharing2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Get placid2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get placid2": {
      "main": [
        [
          {
            "node": "Image2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "placid banner2": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Facebook  Printcart POD3": {
      "main": [
        [
          {
            "node": "Lấy ra 6 coment1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "registerUpload3": {
      "main": [
        [
          {
            "node": "HTTP GET img3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP GET img3": {
      "main": [
        [
          {
            "node": "PUT Image3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PUT Image3": {
      "main": [
        [
          {
            "node": "Print Company page2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Print Company page2": {
      "main": [
        [
          {
            "node": "Lấy ra 6 coment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image2": {
      "main": [
        [
          {
            "node": "registerUpload3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Facebook  Printcart POD3",
            "type": "main",
            "index": 0
          },
          {
            "node": "X3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Tips Sharing2": {
      "main": [
        [
          {
            "node": "convert ouput5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert ouput5": {
      "main": [
        [
          {
            "node": "convert content3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert content3": {
      "main": [
        [
          {
            "node": "placid banner2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lấy ra 6 coment": {
      "main": [
        [
          {
            "node": "Coment6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lấy ra 6 coment1": {
      "main": [
        [
          {
            "node": "Coment5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "banner ngẫu nhiên2": {
      "main": [
        [
          {
            "node": "placid banner",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Get placid",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "placid banner": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert content1": {
      "main": [
        [
          {
            "node": "banner ngẫu nhiên1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "slide": {
      "main": [
        [
          {
            "node": "banner ngẫu nhiên12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "banner ngẫu nhiên1": {
      "main": [
        [
          {
            "node": "placid banner3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get placid3": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "placid banner3": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Get placid3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait12": {
      "main": [
        [
          {
            "node": "Get placid12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "banner ngẫu nhiên12": {
      "main": [
        [
          {
            "node": "placid banner12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get placid12": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Schedule Trigger3": {
      "main": [
        [
          {
            "node": "profile1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Media File": {
      "main": [
        [
          {
            "node": "X2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Media File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "registerUpload4": {
      "main": [
        [
          {
            "node": "HTTP GET img4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP GET img4": {
      "main": [
        [
          {
            "node": "PUT Image4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PUT Image4": {
      "main": [
        [
          {
            "node": "Print Owner Group",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert ouput2": {
      "main": [
        [
          {
            "node": "slide1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "slide1": {
      "main": [
        [
          {
            "node": "Loop Over Items5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items5": {
      "main": [
        [],
        [
          {
            "node": "banner ngẫu nhiên",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait13": {
      "main": [
        [
          {
            "node": "Get placid13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "placid banner13": {
      "main": [
        [
          {
            "node": "Wait13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "banner ngẫu nhiên": {
      "main": [
        [
          {
            "node": "placid banner13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "placid banner12": {
      "main": [
        [
          {
            "node": "Wait12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger3": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Convert to PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "item img convert to chuỗi",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "item img convert to chuỗi": {
      "main": [
        [
          {
            "node": "Convert to PDF1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a PDF1": {
      "main": [
        [
          {
            "node": "PUT PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload PDF1": {
      "main": [
        [
          {
            "node": "Get a PDF1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to PDF1": {
      "main": [
        [
          {
            "node": "Upload PDF1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Media File1": {
      "main": [
        [
          {
            "node": "Tóm tắt content phù hợp với x",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PUT PDF": {
      "main": [
        [
          {
            "node": "Print Commerce Group4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger4": {
      "main": [
        [
          {
            "node": "profile",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger5": {
      "main": [
        [
          {
            "node": "profile3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET A IMAGE2": {
      "main": [
        [
          {
            "node": "Media File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Tóm tắt content phù hợp với x",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Tóm tắt content phù hợp với x": {
      "main": [
        [
          {
            "node": "X5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "registerUpload6": {
      "main": [
        [
          {
            "node": "HTTP GET img6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PUT Image6": {
      "main": [
        [
          {
            "node": "Print Commerce Group7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP GET img6": {
      "main": [
        [
          {
            "node": "PUT Image6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "slide",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items4": {
      "main": [
        [],
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          },
          {
            "node": "Đánh dấu pain pain đã use1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Story Telling1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "convert ouput3": {
      "main": [
        [
          {
            "node": "convert content4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "profile4": {
      "main": [
        [
          {
            "node": "List pain poin1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List pain poin1": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Facebook  Printcart POD": {
      "main": [
        [
          {
            "node": "Coment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert content4": {
      "main": [
        [
          {
            "node": "banner ngẫu nhiên3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image1": {
      "main": [
        [
          {
            "node": "GET A IMAGE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "banner ngẫu nhiên3": {
      "main": [
        [
          {
            "node": "placid banner1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get placid1": {
      "main": [
        [
          {
            "node": "Image1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Get placid1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "placid banner1": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Media File2": {
      "main": [
        [
          {
            "node": "Tóm tắt content phù hợp với x1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET A IMAGE": {
      "main": [
        [
          {
            "node": "Media File2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model6": {
      "ai_languageModel": [
        [
          {
            "node": "Tóm tắt content phù hợp với x1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Tóm tắt content phù hợp với x1": {
      "main": [
        [
          {
            "node": "X",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "registerUpload": {
      "main": [
        [
          {
            "node": "HTTP GET img",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PUT Image": {
      "main": [
        [
          {
            "node": "Print Commerce Group",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP GET img": {
      "main": [
        [
          {
            "node": "PUT Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model7": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Story Telling2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "convert ouput6": {
      "main": [
        [
          {
            "node": "convert content5",
            "type": "main",
            "index": 0
          },
          {
            "node": "Code7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert content5": {
      "main": [
        [
          {
            "node": "banner ngẫu nhiên4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "slide2": {
      "main": [
        [
          {
            "node": "banner ngẫu nhiên13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "banner ngẫu nhiên4": {
      "main": [
        [
          {
            "node": "placid banner4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get placid4": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "placid banner4": {
      "main": [
        [
          {
            "node": "Wait4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait4": {
      "main": [
        [
          {
            "node": "Get placid4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait14": {
      "main": [
        [
          {
            "node": "Get placid14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "banner ngẫu nhiên13": {
      "main": [
        [
          {
            "node": "placid banner14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get placid14": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "placid banner14": {
      "main": [
        [
          {
            "node": "Wait14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "item img convert to chuỗi1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "item img convert to chuỗi1": {
      "main": [
        [
          {
            "node": "Convert to PDF2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to PDF2": {
      "main": [
        [
          {
            "node": "Upload PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a PDF": {
      "main": [
        [
          {
            "node": "PUT PDF1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload PDF": {
      "main": [
        [
          {
            "node": "Get a PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PUT PDF1": {
      "main": [
        [
          {
            "node": "Print Commerce Group5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code7": {
      "main": [
        [
          {
            "node": "slide2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Story Telling3": {
      "main": [
        [
          {
            "node": "convert ouput6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model9": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Story Telling3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Story Telling2": {
      "main": [
        [
          {
            "node": "convert ouput3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert ouput7": {
      "main": [
        [
          {
            "node": "convert content6",
            "type": "main",
            "index": 0
          },
          {
            "node": "Code8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert content6": {
      "main": [
        [
          {
            "node": "banner ngẫu nhiên5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "slide3": {
      "main": [
        [
          {
            "node": "banner ngẫu nhiên14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "banner ngẫu nhiên5": {
      "main": [
        [
          {
            "node": "placid banner5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get placid5": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "placid banner5": {
      "main": [
        [
          {
            "node": "Wait5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait5": {
      "main": [
        [
          {
            "node": "Get placid5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait15": {
      "main": [
        [
          {
            "node": "Get placid15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "banner ngẫu nhiên14": {
      "main": [
        [
          {
            "node": "placid banner15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get placid15": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "placid banner15": {
      "main": [
        [
          {
            "node": "Wait15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "item img convert to chuỗi2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "item img convert to chuỗi2": {
      "main": [
        [
          {
            "node": "Convert to PDF3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to PDF3": {
      "main": [
        [
          {
            "node": "Upload PDF2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a PDF2": {
      "main": [
        [
          {
            "node": "PUT PDF2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload PDF2": {
      "main": [
        [
          {
            "node": "Get a PDF2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PUT PDF2": {
      "main": [
        [
          {
            "node": "Print Commerce Group6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code8": {
      "main": [
        [
          {
            "node": "slide3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Story Telling4": {
      "main": [
        [
          {
            "node": "convert ouput7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model10": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Story Telling4",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "c65f6f00-c1c5-423e-959c-04023c7cda3b",
  "meta": {
    "instanceId": "df4234b863448d98c06954fc105387a22f1c95b8c489a38e4e0f273423fc25cd"
  },
  "id": "pMDc5yeXL3wS1jY0",
  "tags": []
}